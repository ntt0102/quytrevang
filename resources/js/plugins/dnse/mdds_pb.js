// source: mdds.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

import * as jspb from "google-protobuf";
var goog = jspb;
var global =
    (typeof globalThis !== "undefined" && globalThis) ||
    (typeof window !== "undefined" && window) ||
    (typeof global !== "undefined" && global) ||
    (typeof self !== "undefined" && self) ||
    function () {
        return this;
    }.call(null) ||
    Function("return this")();

goog.exportSymbol("proto.proto.mdds.v1.BoardEvent", null, global);
goog.exportSymbol("proto.proto.mdds.v1.ChangeOfContract", null, global);
goog.exportSymbol("proto.proto.mdds.v1.CouponPaymentDate", null, global);
goog.exportSymbol("proto.proto.mdds.v1.DeemTradePrice", null, global);
goog.exportSymbol("proto.proto.mdds.v1.DelistedInstrument", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Disclosure", null, global);
goog.exportSymbol("proto.proto.mdds.v1.ELWUnderlyingAssets", null, global);
goog.exportSymbol("proto.proto.mdds.v1.ETFIndexComposition", null, global);
goog.exportSymbol("proto.proto.mdds.v1.ETFTrackingError", null, global);
goog.exportSymbol("proto.proto.mdds.v1.ETFiIndex", null, global);
goog.exportSymbol("proto.proto.mdds.v1.ETFiNav", null, global);
goog.exportSymbol("proto.proto.mdds.v1.ForeignerOrderLimit", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Holiday", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Index", null, global);
goog.exportSymbol(
    "proto.proto.mdds.v1.IndexConstituentsInformation",
    null,
    global
);
goog.exportSymbol("proto.proto.mdds.v1.InstrumentDerivatives", null, global);
goog.exportSymbol("proto.proto.mdds.v1.InstrumentSBR", null, global);
goog.exportSymbol("proto.proto.mdds.v1.InvestorPerIndustry", null, global);
goog.exportSymbol("proto.proto.mdds.v1.InvestorPerSymbol", null, global);
goog.exportSymbol("proto.proto.mdds.v1.MarketIndex", null, global);
goog.exportSymbol("proto.proto.mdds.v1.MarketIndex.MarketId", null, global);
goog.exportSymbol(
    "proto.proto.mdds.v1.MarketIndex.MarketIndexClass",
    null,
    global
);
goog.exportSymbol(
    "proto.proto.mdds.v1.MarketIndex.TradingSessionId",
    null,
    global
);
goog.exportSymbol("proto.proto.mdds.v1.MarketMakerInformation", null, global);
goog.exportSymbol("proto.proto.mdds.v1.MarketMakingContract", null, global);
goog.exportSymbol("proto.proto.mdds.v1.MemberTrader", null, global);
goog.exportSymbol("proto.proto.mdds.v1.OpenInterest", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Price", null, global);
goog.exportSymbol("proto.proto.mdds.v1.PriceLimitExpansion", null, global);
goog.exportSymbol("proto.proto.mdds.v1.PriceRecovery", null, global);
goog.exportSymbol("proto.proto.mdds.v1.RandomEnd", null, global);
goog.exportSymbol("proto.proto.mdds.v1.SecurityDefinition", null, global);
goog.exportSymbol(
    "proto.proto.mdds.v1.SecurityInformationNotification",
    null,
    global
);
goog.exportSymbol("proto.proto.mdds.v1.SecurityStatus", null, global);
goog.exportSymbol("proto.proto.mdds.v1.StockInfo", null, global);
goog.exportSymbol("proto.proto.mdds.v1.SymbolBoardEvent", null, global);
goog.exportSymbol("proto.proto.mdds.v1.SymbolClosingInformation", null, global);
goog.exportSymbol("proto.proto.mdds.v1.SymbolEvent", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Tick", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Tick.Side", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Timestamp", null, global);
goog.exportSymbol("proto.proto.mdds.v1.TopNMembersPerSymbol", null, global);
goog.exportSymbol(
    "proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice",
    null,
    global
);
goog.exportSymbol(
    "proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice",
    null,
    global
);
goog.exportSymbol(
    "proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice",
    null,
    global
);
goog.exportSymbol(
    "proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity",
    null,
    global
);
goog.exportSymbol("proto.proto.mdds.v1.TopPrice", null, global);
goog.exportSymbol(
    "proto.proto.mdds.v1.TradingResultOfForeignInvestor",
    null,
    global
);
goog.exportSymbol("proto.proto.mdds.v1.TradingSchedule", null, global);
goog.exportSymbol("proto.proto.mdds.v1.VolatilityInterruption", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Wrapper", null, global);
goog.exportSymbol("proto.proto.mdds.v1.Wrapper.KindCase", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.Wrapper = function (opt_data) {
    jspb.Message.initialize(
        this,
        opt_data,
        0,
        -1,
        null,
        proto.proto.mdds.v1.Wrapper.oneofGroups_
    );
};
goog.inherits(proto.proto.mdds.v1.Wrapper, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.Wrapper.displayName = "proto.proto.mdds.v1.Wrapper";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.SecurityDefinition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.SecurityDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.SecurityDefinition.displayName =
        "proto.proto.mdds.v1.SecurityDefinition";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.SecurityStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.SecurityStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.SecurityStatus.displayName =
        "proto.proto.mdds.v1.SecurityStatus";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.SecurityInformationNotification = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
    proto.proto.mdds.v1.SecurityInformationNotification,
    jspb.Message
);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.SecurityInformationNotification.displayName =
        "proto.proto.mdds.v1.SecurityInformationNotification";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.SymbolClosingInformation = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.SymbolClosingInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.SymbolClosingInformation.displayName =
        "proto.proto.mdds.v1.SymbolClosingInformation";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.VolatilityInterruption = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.VolatilityInterruption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.VolatilityInterruption.displayName =
        "proto.proto.mdds.v1.VolatilityInterruption";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.MarketMakerInformation = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.MarketMakerInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.MarketMakerInformation.displayName =
        "proto.proto.mdds.v1.MarketMakerInformation";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.SymbolEvent = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.SymbolEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.SymbolEvent.displayName =
        "proto.proto.mdds.v1.SymbolEvent";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.IndexConstituentsInformation = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.IndexConstituentsInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.IndexConstituentsInformation.displayName =
        "proto.proto.mdds.v1.IndexConstituentsInformation";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.RandomEnd = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.RandomEnd, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.RandomEnd.displayName = "proto.proto.mdds.v1.RandomEnd";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.Price = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.Price, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.Price.displayName = "proto.proto.mdds.v1.Price";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.PriceRecovery = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.PriceRecovery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.PriceRecovery.displayName =
        "proto.proto.mdds.v1.PriceRecovery";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.Index = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.Index, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.Index.displayName = "proto.proto.mdds.v1.Index";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.InvestorPerIndustry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.InvestorPerIndustry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.InvestorPerIndustry.displayName =
        "proto.proto.mdds.v1.InvestorPerIndustry";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.InvestorPerSymbol = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.InvestorPerSymbol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.InvestorPerSymbol.displayName =
        "proto.proto.mdds.v1.InvestorPerSymbol";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.TopNMembersPerSymbol = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.TopNMembersPerSymbol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.TopNMembersPerSymbol.displayName =
        "proto.proto.mdds.v1.TopNMembersPerSymbol";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.OpenInterest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.OpenInterest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.OpenInterest.displayName =
        "proto.proto.mdds.v1.OpenInterest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.DeemTradePrice = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.DeemTradePrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.DeemTradePrice.displayName =
        "proto.proto.mdds.v1.DeemTradePrice";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.ForeignerOrderLimit = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.ForeignerOrderLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.ForeignerOrderLimit.displayName =
        "proto.proto.mdds.v1.ForeignerOrderLimit";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.PriceLimitExpansion = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.PriceLimitExpansion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.PriceLimitExpansion.displayName =
        "proto.proto.mdds.v1.PriceLimitExpansion";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.ETFiNav = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.ETFiNav, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.ETFiNav.displayName = "proto.proto.mdds.v1.ETFiNav";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.ETFiIndex = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.ETFiIndex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.ETFiIndex.displayName = "proto.proto.mdds.v1.ETFiIndex";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.ETFTrackingError = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.ETFTrackingError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.ETFTrackingError.displayName =
        "proto.proto.mdds.v1.ETFTrackingError";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.displayName =
        "proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.displayName =
        "proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
    proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice,
    jspb.Message
);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.displayName =
        "proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.displayName =
        "proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.TradingResultOfForeignInvestor = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.TradingResultOfForeignInvestor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.TradingResultOfForeignInvestor.displayName =
        "proto.proto.mdds.v1.TradingResultOfForeignInvestor";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.Disclosure = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.Disclosure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.Disclosure.displayName =
        "proto.proto.mdds.v1.Disclosure";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.DelistedInstrument = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.DelistedInstrument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.DelistedInstrument.displayName =
        "proto.proto.mdds.v1.DelistedInstrument";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.CouponPaymentDate = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.CouponPaymentDate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.CouponPaymentDate.displayName =
        "proto.proto.mdds.v1.CouponPaymentDate";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.ChangeOfContract = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.ChangeOfContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.ChangeOfContract.displayName =
        "proto.proto.mdds.v1.ChangeOfContract";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.InstrumentDerivatives = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.InstrumentDerivatives, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.InstrumentDerivatives.displayName =
        "proto.proto.mdds.v1.InstrumentDerivatives";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.InstrumentSBR = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.InstrumentSBR, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.InstrumentSBR.displayName =
        "proto.proto.mdds.v1.InstrumentSBR";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.TradingSchedule = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.TradingSchedule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.TradingSchedule.displayName =
        "proto.proto.mdds.v1.TradingSchedule";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.Holiday = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.Holiday, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.Holiday.displayName = "proto.proto.mdds.v1.Holiday";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.MemberTrader = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.MemberTrader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.MemberTrader.displayName =
        "proto.proto.mdds.v1.MemberTrader";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.MarketMakingContract = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.MarketMakingContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.MarketMakingContract.displayName =
        "proto.proto.mdds.v1.MarketMakingContract";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.ETFIndexComposition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.ETFIndexComposition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.ETFIndexComposition.displayName =
        "proto.proto.mdds.v1.ETFIndexComposition";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.ELWUnderlyingAssets = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.ELWUnderlyingAssets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.ELWUnderlyingAssets.displayName =
        "proto.proto.mdds.v1.ELWUnderlyingAssets";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.StockInfo = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.StockInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.StockInfo.displayName = "proto.proto.mdds.v1.StockInfo";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.MarketIndex = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.MarketIndex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.MarketIndex.displayName =
        "proto.proto.mdds.v1.MarketIndex";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.BoardEvent = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.BoardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.BoardEvent.displayName =
        "proto.proto.mdds.v1.BoardEvent";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.SymbolBoardEvent = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.SymbolBoardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.SymbolBoardEvent.displayName =
        "proto.proto.mdds.v1.SymbolBoardEvent";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.Tick = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.Tick, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.Tick.displayName = "proto.proto.mdds.v1.Tick";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.TopPrice = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.TopPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.TopPrice.displayName = "proto.proto.mdds.v1.TopPrice";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.mdds.v1.Timestamp = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.mdds.v1.Timestamp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.proto.mdds.v1.Timestamp.displayName = "proto.proto.mdds.v1.Timestamp";
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.mdds.v1.Wrapper.oneofGroups_ = [
    [
        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
        39, 40, 41, 42, 43, 44, 45, 46,
    ],
];

/**
 * @enum {number}
 */
proto.proto.mdds.v1.Wrapper.KindCase = {
    KIND_NOT_SET: 0,
    SECURITYDEFINITION: 1,
    SECURITYSTATUS: 2,
    SECURITYINFORMATIONNOTIFICATION: 3,
    SYMBOLCLOSINGINFORMATION: 4,
    VOLATILITYINTERRUPTION: 5,
    MARKETMAKERINFORMATION: 6,
    SYMBOLEVENT: 7,
    INDEXCONSTITUENTSINFORMATION: 8,
    RANDOMEND: 9,
    PRICE: 10,
    PRICERECOVERY: 11,
    INDEX: 12,
    INVESTORPERINDUSTRY: 13,
    INVESTORPERSYMBOL: 14,
    TOPNMEMBERSPERSYMBOL: 15,
    OPENINTEREST: 16,
    DEEMTRADEPRICE: 17,
    FOREIGNERORDERLIMIT: 18,
    PRICELIMITEXPANSION: 19,
    ETFINAV: 20,
    ETFIINDEX: 21,
    ETFTRACKINGERROR: 22,
    TOPNSYMBOLSWITHTRADINGQUANTITY: 23,
    TOPNSYMBOLSWITHCURRENTPRICE: 24,
    TOPNSYMBOLSWITHHIGHRATIOOFPRICE: 25,
    TOPNSYMBOLSWITHLOWRATIOOFPRICE: 26,
    TRADINGRESULTOFFOREIGNINVESTOR: 27,
    DISCLOSURE: 28,
    TIMESTAMP: 29,
    DELISTEDINSTRUMENT: 30,
    COUPONPAYMENTDATE: 31,
    CHANGEOFCONTRACT: 32,
    INSTRUMENTDERIVATIVES: 33,
    INSTRUMENTSBR: 34,
    TRADINGSCHEDULE: 35,
    HOLIDAY: 36,
    MEMBERTRADER: 37,
    MARKETMAKINGCONTRACT: 38,
    ETFINDEXCOMPOSITION: 39,
    ELWUNDERLYINGASSETS: 40,
    STOCKINFO: 41,
    MARKETINDEX: 42,
    BOARDEVENT: 43,
    SYMBOLBOARDEVENT: 44,
    TICK: 45,
    TOPPRICE: 46,
};

/**
 * @return {proto.proto.mdds.v1.Wrapper.KindCase}
 */
proto.proto.mdds.v1.Wrapper.prototype.getKindCase = function () {
    return /** @type {proto.proto.mdds.v1.Wrapper.KindCase} */ (
        jspb.Message.computeOneofCase(
            this,
            proto.proto.mdds.v1.Wrapper.oneofGroups_[0]
        )
    );
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.Wrapper.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.Wrapper.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.Wrapper} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.Wrapper.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                securitydefinition:
                    (f = msg.getSecuritydefinition()) &&
                    proto.proto.mdds.v1.SecurityDefinition.toObject(
                        includeInstance,
                        f
                    ),
                securitystatus:
                    (f = msg.getSecuritystatus()) &&
                    proto.proto.mdds.v1.SecurityStatus.toObject(
                        includeInstance,
                        f
                    ),
                securityinformationnotification:
                    (f = msg.getSecurityinformationnotification()) &&
                    proto.proto.mdds.v1.SecurityInformationNotification.toObject(
                        includeInstance,
                        f
                    ),
                symbolclosinginformation:
                    (f = msg.getSymbolclosinginformation()) &&
                    proto.proto.mdds.v1.SymbolClosingInformation.toObject(
                        includeInstance,
                        f
                    ),
                volatilityinterruption:
                    (f = msg.getVolatilityinterruption()) &&
                    proto.proto.mdds.v1.VolatilityInterruption.toObject(
                        includeInstance,
                        f
                    ),
                marketmakerinformation:
                    (f = msg.getMarketmakerinformation()) &&
                    proto.proto.mdds.v1.MarketMakerInformation.toObject(
                        includeInstance,
                        f
                    ),
                symbolevent:
                    (f = msg.getSymbolevent()) &&
                    proto.proto.mdds.v1.SymbolEvent.toObject(
                        includeInstance,
                        f
                    ),
                indexconstituentsinformation:
                    (f = msg.getIndexconstituentsinformation()) &&
                    proto.proto.mdds.v1.IndexConstituentsInformation.toObject(
                        includeInstance,
                        f
                    ),
                randomend:
                    (f = msg.getRandomend()) &&
                    proto.proto.mdds.v1.RandomEnd.toObject(includeInstance, f),
                price:
                    (f = msg.getPrice()) &&
                    proto.proto.mdds.v1.Price.toObject(includeInstance, f),
                pricerecovery:
                    (f = msg.getPricerecovery()) &&
                    proto.proto.mdds.v1.PriceRecovery.toObject(
                        includeInstance,
                        f
                    ),
                index:
                    (f = msg.getIndex()) &&
                    proto.proto.mdds.v1.Index.toObject(includeInstance, f),
                investorperindustry:
                    (f = msg.getInvestorperindustry()) &&
                    proto.proto.mdds.v1.InvestorPerIndustry.toObject(
                        includeInstance,
                        f
                    ),
                investorpersymbol:
                    (f = msg.getInvestorpersymbol()) &&
                    proto.proto.mdds.v1.InvestorPerSymbol.toObject(
                        includeInstance,
                        f
                    ),
                topnmemberspersymbol:
                    (f = msg.getTopnmemberspersymbol()) &&
                    proto.proto.mdds.v1.TopNMembersPerSymbol.toObject(
                        includeInstance,
                        f
                    ),
                openinterest:
                    (f = msg.getOpeninterest()) &&
                    proto.proto.mdds.v1.OpenInterest.toObject(
                        includeInstance,
                        f
                    ),
                deemtradeprice:
                    (f = msg.getDeemtradeprice()) &&
                    proto.proto.mdds.v1.DeemTradePrice.toObject(
                        includeInstance,
                        f
                    ),
                foreignerorderlimit:
                    (f = msg.getForeignerorderlimit()) &&
                    proto.proto.mdds.v1.ForeignerOrderLimit.toObject(
                        includeInstance,
                        f
                    ),
                pricelimitexpansion:
                    (f = msg.getPricelimitexpansion()) &&
                    proto.proto.mdds.v1.PriceLimitExpansion.toObject(
                        includeInstance,
                        f
                    ),
                etfinav:
                    (f = msg.getEtfinav()) &&
                    proto.proto.mdds.v1.ETFiNav.toObject(includeInstance, f),
                etfiindex:
                    (f = msg.getEtfiindex()) &&
                    proto.proto.mdds.v1.ETFiIndex.toObject(includeInstance, f),
                etftrackingerror:
                    (f = msg.getEtftrackingerror()) &&
                    proto.proto.mdds.v1.ETFTrackingError.toObject(
                        includeInstance,
                        f
                    ),
                topnsymbolswithtradingquantity:
                    (f = msg.getTopnsymbolswithtradingquantity()) &&
                    proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.toObject(
                        includeInstance,
                        f
                    ),
                topnsymbolswithcurrentprice:
                    (f = msg.getTopnsymbolswithcurrentprice()) &&
                    proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.toObject(
                        includeInstance,
                        f
                    ),
                topnsymbolswithhighratioofprice:
                    (f = msg.getTopnsymbolswithhighratioofprice()) &&
                    proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.toObject(
                        includeInstance,
                        f
                    ),
                topnsymbolswithlowratioofprice:
                    (f = msg.getTopnsymbolswithlowratioofprice()) &&
                    proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.toObject(
                        includeInstance,
                        f
                    ),
                tradingresultofforeigninvestor:
                    (f = msg.getTradingresultofforeigninvestor()) &&
                    proto.proto.mdds.v1.TradingResultOfForeignInvestor.toObject(
                        includeInstance,
                        f
                    ),
                disclosure:
                    (f = msg.getDisclosure()) &&
                    proto.proto.mdds.v1.Disclosure.toObject(includeInstance, f),
                timestamp:
                    (f = msg.getTimestamp()) &&
                    proto.proto.mdds.v1.Timestamp.toObject(includeInstance, f),
                delistedinstrument:
                    (f = msg.getDelistedinstrument()) &&
                    proto.proto.mdds.v1.DelistedInstrument.toObject(
                        includeInstance,
                        f
                    ),
                couponpaymentdate:
                    (f = msg.getCouponpaymentdate()) &&
                    proto.proto.mdds.v1.CouponPaymentDate.toObject(
                        includeInstance,
                        f
                    ),
                changeofcontract:
                    (f = msg.getChangeofcontract()) &&
                    proto.proto.mdds.v1.ChangeOfContract.toObject(
                        includeInstance,
                        f
                    ),
                instrumentderivatives:
                    (f = msg.getInstrumentderivatives()) &&
                    proto.proto.mdds.v1.InstrumentDerivatives.toObject(
                        includeInstance,
                        f
                    ),
                instrumentsbr:
                    (f = msg.getInstrumentsbr()) &&
                    proto.proto.mdds.v1.InstrumentSBR.toObject(
                        includeInstance,
                        f
                    ),
                tradingschedule:
                    (f = msg.getTradingschedule()) &&
                    proto.proto.mdds.v1.TradingSchedule.toObject(
                        includeInstance,
                        f
                    ),
                holiday:
                    (f = msg.getHoliday()) &&
                    proto.proto.mdds.v1.Holiday.toObject(includeInstance, f),
                membertrader:
                    (f = msg.getMembertrader()) &&
                    proto.proto.mdds.v1.MemberTrader.toObject(
                        includeInstance,
                        f
                    ),
                marketmakingcontract:
                    (f = msg.getMarketmakingcontract()) &&
                    proto.proto.mdds.v1.MarketMakingContract.toObject(
                        includeInstance,
                        f
                    ),
                etfindexcomposition:
                    (f = msg.getEtfindexcomposition()) &&
                    proto.proto.mdds.v1.ETFIndexComposition.toObject(
                        includeInstance,
                        f
                    ),
                elwunderlyingassets:
                    (f = msg.getElwunderlyingassets()) &&
                    proto.proto.mdds.v1.ELWUnderlyingAssets.toObject(
                        includeInstance,
                        f
                    ),
                stockinfo:
                    (f = msg.getStockinfo()) &&
                    proto.proto.mdds.v1.StockInfo.toObject(includeInstance, f),
                marketindex:
                    (f = msg.getMarketindex()) &&
                    proto.proto.mdds.v1.MarketIndex.toObject(
                        includeInstance,
                        f
                    ),
                boardevent:
                    (f = msg.getBoardevent()) &&
                    proto.proto.mdds.v1.BoardEvent.toObject(includeInstance, f),
                symbolboardevent:
                    (f = msg.getSymbolboardevent()) &&
                    proto.proto.mdds.v1.SymbolBoardEvent.toObject(
                        includeInstance,
                        f
                    ),
                tick:
                    (f = msg.getTick()) &&
                    proto.proto.mdds.v1.Tick.toObject(includeInstance, f),
                topprice:
                    (f = msg.getTopprice()) &&
                    proto.proto.mdds.v1.TopPrice.toObject(includeInstance, f),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.Wrapper}
 */
proto.proto.mdds.v1.Wrapper.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.Wrapper();
    return proto.proto.mdds.v1.Wrapper.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.Wrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.Wrapper}
 */
proto.proto.mdds.v1.Wrapper.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.proto.mdds.v1.SecurityDefinition();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.SecurityDefinition
                        .deserializeBinaryFromReader
                );
                msg.setSecuritydefinition(value);
                break;
            case 2:
                var value = new proto.proto.mdds.v1.SecurityStatus();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.SecurityStatus
                        .deserializeBinaryFromReader
                );
                msg.setSecuritystatus(value);
                break;
            case 3:
                var value =
                    new proto.proto.mdds.v1.SecurityInformationNotification();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.SecurityInformationNotification
                        .deserializeBinaryFromReader
                );
                msg.setSecurityinformationnotification(value);
                break;
            case 4:
                var value = new proto.proto.mdds.v1.SymbolClosingInformation();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.SymbolClosingInformation
                        .deserializeBinaryFromReader
                );
                msg.setSymbolclosinginformation(value);
                break;
            case 5:
                var value = new proto.proto.mdds.v1.VolatilityInterruption();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.VolatilityInterruption
                        .deserializeBinaryFromReader
                );
                msg.setVolatilityinterruption(value);
                break;
            case 6:
                var value = new proto.proto.mdds.v1.MarketMakerInformation();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.MarketMakerInformation
                        .deserializeBinaryFromReader
                );
                msg.setMarketmakerinformation(value);
                break;
            case 7:
                var value = new proto.proto.mdds.v1.SymbolEvent();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.SymbolEvent.deserializeBinaryFromReader
                );
                msg.setSymbolevent(value);
                break;
            case 8:
                var value =
                    new proto.proto.mdds.v1.IndexConstituentsInformation();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.IndexConstituentsInformation
                        .deserializeBinaryFromReader
                );
                msg.setIndexconstituentsinformation(value);
                break;
            case 9:
                var value = new proto.proto.mdds.v1.RandomEnd();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.RandomEnd.deserializeBinaryFromReader
                );
                msg.setRandomend(value);
                break;
            case 10:
                var value = new proto.proto.mdds.v1.Price();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.Price.deserializeBinaryFromReader
                );
                msg.setPrice(value);
                break;
            case 11:
                var value = new proto.proto.mdds.v1.PriceRecovery();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.PriceRecovery
                        .deserializeBinaryFromReader
                );
                msg.setPricerecovery(value);
                break;
            case 12:
                var value = new proto.proto.mdds.v1.Index();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.Index.deserializeBinaryFromReader
                );
                msg.setIndex(value);
                break;
            case 13:
                var value = new proto.proto.mdds.v1.InvestorPerIndustry();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.InvestorPerIndustry
                        .deserializeBinaryFromReader
                );
                msg.setInvestorperindustry(value);
                break;
            case 14:
                var value = new proto.proto.mdds.v1.InvestorPerSymbol();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.InvestorPerSymbol
                        .deserializeBinaryFromReader
                );
                msg.setInvestorpersymbol(value);
                break;
            case 15:
                var value = new proto.proto.mdds.v1.TopNMembersPerSymbol();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.TopNMembersPerSymbol
                        .deserializeBinaryFromReader
                );
                msg.setTopnmemberspersymbol(value);
                break;
            case 16:
                var value = new proto.proto.mdds.v1.OpenInterest();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.OpenInterest.deserializeBinaryFromReader
                );
                msg.setOpeninterest(value);
                break;
            case 17:
                var value = new proto.proto.mdds.v1.DeemTradePrice();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.DeemTradePrice
                        .deserializeBinaryFromReader
                );
                msg.setDeemtradeprice(value);
                break;
            case 18:
                var value = new proto.proto.mdds.v1.ForeignerOrderLimit();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.ForeignerOrderLimit
                        .deserializeBinaryFromReader
                );
                msg.setForeignerorderlimit(value);
                break;
            case 19:
                var value = new proto.proto.mdds.v1.PriceLimitExpansion();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.PriceLimitExpansion
                        .deserializeBinaryFromReader
                );
                msg.setPricelimitexpansion(value);
                break;
            case 20:
                var value = new proto.proto.mdds.v1.ETFiNav();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.ETFiNav.deserializeBinaryFromReader
                );
                msg.setEtfinav(value);
                break;
            case 21:
                var value = new proto.proto.mdds.v1.ETFiIndex();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.ETFiIndex.deserializeBinaryFromReader
                );
                msg.setEtfiindex(value);
                break;
            case 22:
                var value = new proto.proto.mdds.v1.ETFTrackingError();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.ETFTrackingError
                        .deserializeBinaryFromReader
                );
                msg.setEtftrackingerror(value);
                break;
            case 23:
                var value =
                    new proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity
                        .deserializeBinaryFromReader
                );
                msg.setTopnsymbolswithtradingquantity(value);
                break;
            case 24:
                var value =
                    new proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice
                        .deserializeBinaryFromReader
                );
                msg.setTopnsymbolswithcurrentprice(value);
                break;
            case 25:
                var value =
                    new proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice
                        .deserializeBinaryFromReader
                );
                msg.setTopnsymbolswithhighratioofprice(value);
                break;
            case 26:
                var value =
                    new proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice
                        .deserializeBinaryFromReader
                );
                msg.setTopnsymbolswithlowratioofprice(value);
                break;
            case 27:
                var value =
                    new proto.proto.mdds.v1.TradingResultOfForeignInvestor();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.TradingResultOfForeignInvestor
                        .deserializeBinaryFromReader
                );
                msg.setTradingresultofforeigninvestor(value);
                break;
            case 28:
                var value = new proto.proto.mdds.v1.Disclosure();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.Disclosure.deserializeBinaryFromReader
                );
                msg.setDisclosure(value);
                break;
            case 29:
                var value = new proto.proto.mdds.v1.Timestamp();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.Timestamp.deserializeBinaryFromReader
                );
                msg.setTimestamp(value);
                break;
            case 30:
                var value = new proto.proto.mdds.v1.DelistedInstrument();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.DelistedInstrument
                        .deserializeBinaryFromReader
                );
                msg.setDelistedinstrument(value);
                break;
            case 31:
                var value = new proto.proto.mdds.v1.CouponPaymentDate();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.CouponPaymentDate
                        .deserializeBinaryFromReader
                );
                msg.setCouponpaymentdate(value);
                break;
            case 32:
                var value = new proto.proto.mdds.v1.ChangeOfContract();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.ChangeOfContract
                        .deserializeBinaryFromReader
                );
                msg.setChangeofcontract(value);
                break;
            case 33:
                var value = new proto.proto.mdds.v1.InstrumentDerivatives();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.InstrumentDerivatives
                        .deserializeBinaryFromReader
                );
                msg.setInstrumentderivatives(value);
                break;
            case 34:
                var value = new proto.proto.mdds.v1.InstrumentSBR();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.InstrumentSBR
                        .deserializeBinaryFromReader
                );
                msg.setInstrumentsbr(value);
                break;
            case 35:
                var value = new proto.proto.mdds.v1.TradingSchedule();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.TradingSchedule
                        .deserializeBinaryFromReader
                );
                msg.setTradingschedule(value);
                break;
            case 36:
                var value = new proto.proto.mdds.v1.Holiday();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.Holiday.deserializeBinaryFromReader
                );
                msg.setHoliday(value);
                break;
            case 37:
                var value = new proto.proto.mdds.v1.MemberTrader();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.MemberTrader.deserializeBinaryFromReader
                );
                msg.setMembertrader(value);
                break;
            case 38:
                var value = new proto.proto.mdds.v1.MarketMakingContract();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.MarketMakingContract
                        .deserializeBinaryFromReader
                );
                msg.setMarketmakingcontract(value);
                break;
            case 39:
                var value = new proto.proto.mdds.v1.ETFIndexComposition();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.ETFIndexComposition
                        .deserializeBinaryFromReader
                );
                msg.setEtfindexcomposition(value);
                break;
            case 40:
                var value = new proto.proto.mdds.v1.ELWUnderlyingAssets();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.ELWUnderlyingAssets
                        .deserializeBinaryFromReader
                );
                msg.setElwunderlyingassets(value);
                break;
            case 41:
                var value = new proto.proto.mdds.v1.StockInfo();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.StockInfo.deserializeBinaryFromReader
                );
                msg.setStockinfo(value);
                break;
            case 42:
                var value = new proto.proto.mdds.v1.MarketIndex();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.MarketIndex.deserializeBinaryFromReader
                );
                msg.setMarketindex(value);
                break;
            case 43:
                var value = new proto.proto.mdds.v1.BoardEvent();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.BoardEvent.deserializeBinaryFromReader
                );
                msg.setBoardevent(value);
                break;
            case 44:
                var value = new proto.proto.mdds.v1.SymbolBoardEvent();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.SymbolBoardEvent
                        .deserializeBinaryFromReader
                );
                msg.setSymbolboardevent(value);
                break;
            case 45:
                var value = new proto.proto.mdds.v1.Tick();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.Tick.deserializeBinaryFromReader
                );
                msg.setTick(value);
                break;
            case 46:
                var value = new proto.proto.mdds.v1.TopPrice();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.TopPrice.deserializeBinaryFromReader
                );
                msg.setTopprice(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.Wrapper.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.Wrapper.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.Wrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.Wrapper.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getSecuritydefinition();
    if (f != null) {
        writer.writeMessage(
            1,
            f,
            proto.proto.mdds.v1.SecurityDefinition.serializeBinaryToWriter
        );
    }
    f = message.getSecuritystatus();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            proto.proto.mdds.v1.SecurityStatus.serializeBinaryToWriter
        );
    }
    f = message.getSecurityinformationnotification();
    if (f != null) {
        writer.writeMessage(
            3,
            f,
            proto.proto.mdds.v1.SecurityInformationNotification
                .serializeBinaryToWriter
        );
    }
    f = message.getSymbolclosinginformation();
    if (f != null) {
        writer.writeMessage(
            4,
            f,
            proto.proto.mdds.v1.SymbolClosingInformation.serializeBinaryToWriter
        );
    }
    f = message.getVolatilityinterruption();
    if (f != null) {
        writer.writeMessage(
            5,
            f,
            proto.proto.mdds.v1.VolatilityInterruption.serializeBinaryToWriter
        );
    }
    f = message.getMarketmakerinformation();
    if (f != null) {
        writer.writeMessage(
            6,
            f,
            proto.proto.mdds.v1.MarketMakerInformation.serializeBinaryToWriter
        );
    }
    f = message.getSymbolevent();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.proto.mdds.v1.SymbolEvent.serializeBinaryToWriter
        );
    }
    f = message.getIndexconstituentsinformation();
    if (f != null) {
        writer.writeMessage(
            8,
            f,
            proto.proto.mdds.v1.IndexConstituentsInformation
                .serializeBinaryToWriter
        );
    }
    f = message.getRandomend();
    if (f != null) {
        writer.writeMessage(
            9,
            f,
            proto.proto.mdds.v1.RandomEnd.serializeBinaryToWriter
        );
    }
    f = message.getPrice();
    if (f != null) {
        writer.writeMessage(
            10,
            f,
            proto.proto.mdds.v1.Price.serializeBinaryToWriter
        );
    }
    f = message.getPricerecovery();
    if (f != null) {
        writer.writeMessage(
            11,
            f,
            proto.proto.mdds.v1.PriceRecovery.serializeBinaryToWriter
        );
    }
    f = message.getIndex();
    if (f != null) {
        writer.writeMessage(
            12,
            f,
            proto.proto.mdds.v1.Index.serializeBinaryToWriter
        );
    }
    f = message.getInvestorperindustry();
    if (f != null) {
        writer.writeMessage(
            13,
            f,
            proto.proto.mdds.v1.InvestorPerIndustry.serializeBinaryToWriter
        );
    }
    f = message.getInvestorpersymbol();
    if (f != null) {
        writer.writeMessage(
            14,
            f,
            proto.proto.mdds.v1.InvestorPerSymbol.serializeBinaryToWriter
        );
    }
    f = message.getTopnmemberspersymbol();
    if (f != null) {
        writer.writeMessage(
            15,
            f,
            proto.proto.mdds.v1.TopNMembersPerSymbol.serializeBinaryToWriter
        );
    }
    f = message.getOpeninterest();
    if (f != null) {
        writer.writeMessage(
            16,
            f,
            proto.proto.mdds.v1.OpenInterest.serializeBinaryToWriter
        );
    }
    f = message.getDeemtradeprice();
    if (f != null) {
        writer.writeMessage(
            17,
            f,
            proto.proto.mdds.v1.DeemTradePrice.serializeBinaryToWriter
        );
    }
    f = message.getForeignerorderlimit();
    if (f != null) {
        writer.writeMessage(
            18,
            f,
            proto.proto.mdds.v1.ForeignerOrderLimit.serializeBinaryToWriter
        );
    }
    f = message.getPricelimitexpansion();
    if (f != null) {
        writer.writeMessage(
            19,
            f,
            proto.proto.mdds.v1.PriceLimitExpansion.serializeBinaryToWriter
        );
    }
    f = message.getEtfinav();
    if (f != null) {
        writer.writeMessage(
            20,
            f,
            proto.proto.mdds.v1.ETFiNav.serializeBinaryToWriter
        );
    }
    f = message.getEtfiindex();
    if (f != null) {
        writer.writeMessage(
            21,
            f,
            proto.proto.mdds.v1.ETFiIndex.serializeBinaryToWriter
        );
    }
    f = message.getEtftrackingerror();
    if (f != null) {
        writer.writeMessage(
            22,
            f,
            proto.proto.mdds.v1.ETFTrackingError.serializeBinaryToWriter
        );
    }
    f = message.getTopnsymbolswithtradingquantity();
    if (f != null) {
        writer.writeMessage(
            23,
            f,
            proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity
                .serializeBinaryToWriter
        );
    }
    f = message.getTopnsymbolswithcurrentprice();
    if (f != null) {
        writer.writeMessage(
            24,
            f,
            proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice
                .serializeBinaryToWriter
        );
    }
    f = message.getTopnsymbolswithhighratioofprice();
    if (f != null) {
        writer.writeMessage(
            25,
            f,
            proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice
                .serializeBinaryToWriter
        );
    }
    f = message.getTopnsymbolswithlowratioofprice();
    if (f != null) {
        writer.writeMessage(
            26,
            f,
            proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice
                .serializeBinaryToWriter
        );
    }
    f = message.getTradingresultofforeigninvestor();
    if (f != null) {
        writer.writeMessage(
            27,
            f,
            proto.proto.mdds.v1.TradingResultOfForeignInvestor
                .serializeBinaryToWriter
        );
    }
    f = message.getDisclosure();
    if (f != null) {
        writer.writeMessage(
            28,
            f,
            proto.proto.mdds.v1.Disclosure.serializeBinaryToWriter
        );
    }
    f = message.getTimestamp();
    if (f != null) {
        writer.writeMessage(
            29,
            f,
            proto.proto.mdds.v1.Timestamp.serializeBinaryToWriter
        );
    }
    f = message.getDelistedinstrument();
    if (f != null) {
        writer.writeMessage(
            30,
            f,
            proto.proto.mdds.v1.DelistedInstrument.serializeBinaryToWriter
        );
    }
    f = message.getCouponpaymentdate();
    if (f != null) {
        writer.writeMessage(
            31,
            f,
            proto.proto.mdds.v1.CouponPaymentDate.serializeBinaryToWriter
        );
    }
    f = message.getChangeofcontract();
    if (f != null) {
        writer.writeMessage(
            32,
            f,
            proto.proto.mdds.v1.ChangeOfContract.serializeBinaryToWriter
        );
    }
    f = message.getInstrumentderivatives();
    if (f != null) {
        writer.writeMessage(
            33,
            f,
            proto.proto.mdds.v1.InstrumentDerivatives.serializeBinaryToWriter
        );
    }
    f = message.getInstrumentsbr();
    if (f != null) {
        writer.writeMessage(
            34,
            f,
            proto.proto.mdds.v1.InstrumentSBR.serializeBinaryToWriter
        );
    }
    f = message.getTradingschedule();
    if (f != null) {
        writer.writeMessage(
            35,
            f,
            proto.proto.mdds.v1.TradingSchedule.serializeBinaryToWriter
        );
    }
    f = message.getHoliday();
    if (f != null) {
        writer.writeMessage(
            36,
            f,
            proto.proto.mdds.v1.Holiday.serializeBinaryToWriter
        );
    }
    f = message.getMembertrader();
    if (f != null) {
        writer.writeMessage(
            37,
            f,
            proto.proto.mdds.v1.MemberTrader.serializeBinaryToWriter
        );
    }
    f = message.getMarketmakingcontract();
    if (f != null) {
        writer.writeMessage(
            38,
            f,
            proto.proto.mdds.v1.MarketMakingContract.serializeBinaryToWriter
        );
    }
    f = message.getEtfindexcomposition();
    if (f != null) {
        writer.writeMessage(
            39,
            f,
            proto.proto.mdds.v1.ETFIndexComposition.serializeBinaryToWriter
        );
    }
    f = message.getElwunderlyingassets();
    if (f != null) {
        writer.writeMessage(
            40,
            f,
            proto.proto.mdds.v1.ELWUnderlyingAssets.serializeBinaryToWriter
        );
    }
    f = message.getStockinfo();
    if (f != null) {
        writer.writeMessage(
            41,
            f,
            proto.proto.mdds.v1.StockInfo.serializeBinaryToWriter
        );
    }
    f = message.getMarketindex();
    if (f != null) {
        writer.writeMessage(
            42,
            f,
            proto.proto.mdds.v1.MarketIndex.serializeBinaryToWriter
        );
    }
    f = message.getBoardevent();
    if (f != null) {
        writer.writeMessage(
            43,
            f,
            proto.proto.mdds.v1.BoardEvent.serializeBinaryToWriter
        );
    }
    f = message.getSymbolboardevent();
    if (f != null) {
        writer.writeMessage(
            44,
            f,
            proto.proto.mdds.v1.SymbolBoardEvent.serializeBinaryToWriter
        );
    }
    f = message.getTick();
    if (f != null) {
        writer.writeMessage(
            45,
            f,
            proto.proto.mdds.v1.Tick.serializeBinaryToWriter
        );
    }
    f = message.getTopprice();
    if (f != null) {
        writer.writeMessage(
            46,
            f,
            proto.proto.mdds.v1.TopPrice.serializeBinaryToWriter
        );
    }
};

/**
 * optional SecurityDefinition securityDefinition = 1;
 * @return {?proto.proto.mdds.v1.SecurityDefinition}
 */
proto.proto.mdds.v1.Wrapper.prototype.getSecuritydefinition = function () {
    return /** @type{?proto.proto.mdds.v1.SecurityDefinition} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.SecurityDefinition,
            1
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.SecurityDefinition|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setSecuritydefinition = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        1,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearSecuritydefinition = function () {
    return this.setSecuritydefinition(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasSecuritydefinition = function () {
    return jspb.Message.getField(this, 1) != null;
};

/**
 * optional SecurityStatus securityStatus = 2;
 * @return {?proto.proto.mdds.v1.SecurityStatus}
 */
proto.proto.mdds.v1.Wrapper.prototype.getSecuritystatus = function () {
    return /** @type{?proto.proto.mdds.v1.SecurityStatus} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.SecurityStatus,
            2
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.SecurityStatus|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setSecuritystatus = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        2,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearSecuritystatus = function () {
    return this.setSecuritystatus(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasSecuritystatus = function () {
    return jspb.Message.getField(this, 2) != null;
};

/**
 * optional SecurityInformationNotification securityInformationNotification = 3;
 * @return {?proto.proto.mdds.v1.SecurityInformationNotification}
 */
proto.proto.mdds.v1.Wrapper.prototype.getSecurityinformationnotification =
    function () {
        return /** @type{?proto.proto.mdds.v1.SecurityInformationNotification} */ (
            jspb.Message.getWrapperField(
                this,
                proto.proto.mdds.v1.SecurityInformationNotification,
                3
            )
        );
    };

/**
 * @param {?proto.proto.mdds.v1.SecurityInformationNotification|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setSecurityinformationnotification =
    function (value) {
        return jspb.Message.setOneofWrapperField(
            this,
            3,
            proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
            value
        );
    };

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearSecurityinformationnotification =
    function () {
        return this.setSecurityinformationnotification(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasSecurityinformationnotification =
    function () {
        return jspb.Message.getField(this, 3) != null;
    };

/**
 * optional SymbolClosingInformation symbolClosingInformation = 4;
 * @return {?proto.proto.mdds.v1.SymbolClosingInformation}
 */
proto.proto.mdds.v1.Wrapper.prototype.getSymbolclosinginformation =
    function () {
        return /** @type{?proto.proto.mdds.v1.SymbolClosingInformation} */ (
            jspb.Message.getWrapperField(
                this,
                proto.proto.mdds.v1.SymbolClosingInformation,
                4
            )
        );
    };

/**
 * @param {?proto.proto.mdds.v1.SymbolClosingInformation|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setSymbolclosinginformation = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        4,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearSymbolclosinginformation =
    function () {
        return this.setSymbolclosinginformation(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasSymbolclosinginformation =
    function () {
        return jspb.Message.getField(this, 4) != null;
    };

/**
 * optional VolatilityInterruption volatilityInterruption = 5;
 * @return {?proto.proto.mdds.v1.VolatilityInterruption}
 */
proto.proto.mdds.v1.Wrapper.prototype.getVolatilityinterruption = function () {
    return /** @type{?proto.proto.mdds.v1.VolatilityInterruption} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.VolatilityInterruption,
            5
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.VolatilityInterruption|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setVolatilityinterruption = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        5,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearVolatilityinterruption =
    function () {
        return this.setVolatilityinterruption(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasVolatilityinterruption = function () {
    return jspb.Message.getField(this, 5) != null;
};

/**
 * optional MarketMakerInformation marketMakerInformation = 6;
 * @return {?proto.proto.mdds.v1.MarketMakerInformation}
 */
proto.proto.mdds.v1.Wrapper.prototype.getMarketmakerinformation = function () {
    return /** @type{?proto.proto.mdds.v1.MarketMakerInformation} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.MarketMakerInformation,
            6
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.MarketMakerInformation|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setMarketmakerinformation = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        6,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearMarketmakerinformation =
    function () {
        return this.setMarketmakerinformation(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasMarketmakerinformation = function () {
    return jspb.Message.getField(this, 6) != null;
};

/**
 * optional SymbolEvent symbolEvent = 7;
 * @return {?proto.proto.mdds.v1.SymbolEvent}
 */
proto.proto.mdds.v1.Wrapper.prototype.getSymbolevent = function () {
    return /** @type{?proto.proto.mdds.v1.SymbolEvent} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.SymbolEvent, 7)
    );
};

/**
 * @param {?proto.proto.mdds.v1.SymbolEvent|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setSymbolevent = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        7,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearSymbolevent = function () {
    return this.setSymbolevent(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasSymbolevent = function () {
    return jspb.Message.getField(this, 7) != null;
};

/**
 * optional IndexConstituentsInformation indexConstituentsInformation = 8;
 * @return {?proto.proto.mdds.v1.IndexConstituentsInformation}
 */
proto.proto.mdds.v1.Wrapper.prototype.getIndexconstituentsinformation =
    function () {
        return /** @type{?proto.proto.mdds.v1.IndexConstituentsInformation} */ (
            jspb.Message.getWrapperField(
                this,
                proto.proto.mdds.v1.IndexConstituentsInformation,
                8
            )
        );
    };

/**
 * @param {?proto.proto.mdds.v1.IndexConstituentsInformation|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setIndexconstituentsinformation =
    function (value) {
        return jspb.Message.setOneofWrapperField(
            this,
            8,
            proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
            value
        );
    };

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearIndexconstituentsinformation =
    function () {
        return this.setIndexconstituentsinformation(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasIndexconstituentsinformation =
    function () {
        return jspb.Message.getField(this, 8) != null;
    };

/**
 * optional RandomEnd randomEnd = 9;
 * @return {?proto.proto.mdds.v1.RandomEnd}
 */
proto.proto.mdds.v1.Wrapper.prototype.getRandomend = function () {
    return /** @type{?proto.proto.mdds.v1.RandomEnd} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.RandomEnd, 9)
    );
};

/**
 * @param {?proto.proto.mdds.v1.RandomEnd|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setRandomend = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        9,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearRandomend = function () {
    return this.setRandomend(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasRandomend = function () {
    return jspb.Message.getField(this, 9) != null;
};

/**
 * optional Price price = 10;
 * @return {?proto.proto.mdds.v1.Price}
 */
proto.proto.mdds.v1.Wrapper.prototype.getPrice = function () {
    return /** @type{?proto.proto.mdds.v1.Price} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.Price, 10)
    );
};

/**
 * @param {?proto.proto.mdds.v1.Price|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setPrice = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        10,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearPrice = function () {
    return this.setPrice(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasPrice = function () {
    return jspb.Message.getField(this, 10) != null;
};

/**
 * optional PriceRecovery priceRecovery = 11;
 * @return {?proto.proto.mdds.v1.PriceRecovery}
 */
proto.proto.mdds.v1.Wrapper.prototype.getPricerecovery = function () {
    return /** @type{?proto.proto.mdds.v1.PriceRecovery} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.PriceRecovery,
            11
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.PriceRecovery|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setPricerecovery = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        11,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearPricerecovery = function () {
    return this.setPricerecovery(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasPricerecovery = function () {
    return jspb.Message.getField(this, 11) != null;
};

/**
 * optional Index index = 12;
 * @return {?proto.proto.mdds.v1.Index}
 */
proto.proto.mdds.v1.Wrapper.prototype.getIndex = function () {
    return /** @type{?proto.proto.mdds.v1.Index} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.Index, 12)
    );
};

/**
 * @param {?proto.proto.mdds.v1.Index|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setIndex = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        12,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearIndex = function () {
    return this.setIndex(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasIndex = function () {
    return jspb.Message.getField(this, 12) != null;
};

/**
 * optional InvestorPerIndustry investorPerIndustry = 13;
 * @return {?proto.proto.mdds.v1.InvestorPerIndustry}
 */
proto.proto.mdds.v1.Wrapper.prototype.getInvestorperindustry = function () {
    return /** @type{?proto.proto.mdds.v1.InvestorPerIndustry} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.InvestorPerIndustry,
            13
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.InvestorPerIndustry|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setInvestorperindustry = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        13,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearInvestorperindustry = function () {
    return this.setInvestorperindustry(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasInvestorperindustry = function () {
    return jspb.Message.getField(this, 13) != null;
};

/**
 * optional InvestorPerSymbol investorPerSymbol = 14;
 * @return {?proto.proto.mdds.v1.InvestorPerSymbol}
 */
proto.proto.mdds.v1.Wrapper.prototype.getInvestorpersymbol = function () {
    return /** @type{?proto.proto.mdds.v1.InvestorPerSymbol} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.InvestorPerSymbol,
            14
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.InvestorPerSymbol|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setInvestorpersymbol = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        14,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearInvestorpersymbol = function () {
    return this.setInvestorpersymbol(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasInvestorpersymbol = function () {
    return jspb.Message.getField(this, 14) != null;
};

/**
 * optional TopNMembersPerSymbol topNMembersPerSymbol = 15;
 * @return {?proto.proto.mdds.v1.TopNMembersPerSymbol}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTopnmemberspersymbol = function () {
    return /** @type{?proto.proto.mdds.v1.TopNMembersPerSymbol} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.TopNMembersPerSymbol,
            15
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.TopNMembersPerSymbol|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTopnmemberspersymbol = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        15,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTopnmemberspersymbol = function () {
    return this.setTopnmemberspersymbol(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTopnmemberspersymbol = function () {
    return jspb.Message.getField(this, 15) != null;
};

/**
 * optional OpenInterest openInterest = 16;
 * @return {?proto.proto.mdds.v1.OpenInterest}
 */
proto.proto.mdds.v1.Wrapper.prototype.getOpeninterest = function () {
    return /** @type{?proto.proto.mdds.v1.OpenInterest} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.OpenInterest, 16)
    );
};

/**
 * @param {?proto.proto.mdds.v1.OpenInterest|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setOpeninterest = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        16,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearOpeninterest = function () {
    return this.setOpeninterest(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasOpeninterest = function () {
    return jspb.Message.getField(this, 16) != null;
};

/**
 * optional DeemTradePrice deemTradePrice = 17;
 * @return {?proto.proto.mdds.v1.DeemTradePrice}
 */
proto.proto.mdds.v1.Wrapper.prototype.getDeemtradeprice = function () {
    return /** @type{?proto.proto.mdds.v1.DeemTradePrice} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.DeemTradePrice,
            17
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.DeemTradePrice|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setDeemtradeprice = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        17,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearDeemtradeprice = function () {
    return this.setDeemtradeprice(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasDeemtradeprice = function () {
    return jspb.Message.getField(this, 17) != null;
};

/**
 * optional ForeignerOrderLimit foreignerOrderLimit = 18;
 * @return {?proto.proto.mdds.v1.ForeignerOrderLimit}
 */
proto.proto.mdds.v1.Wrapper.prototype.getForeignerorderlimit = function () {
    return /** @type{?proto.proto.mdds.v1.ForeignerOrderLimit} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.ForeignerOrderLimit,
            18
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.ForeignerOrderLimit|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setForeignerorderlimit = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        18,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearForeignerorderlimit = function () {
    return this.setForeignerorderlimit(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasForeignerorderlimit = function () {
    return jspb.Message.getField(this, 18) != null;
};

/**
 * optional PriceLimitExpansion priceLimitExpansion = 19;
 * @return {?proto.proto.mdds.v1.PriceLimitExpansion}
 */
proto.proto.mdds.v1.Wrapper.prototype.getPricelimitexpansion = function () {
    return /** @type{?proto.proto.mdds.v1.PriceLimitExpansion} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.PriceLimitExpansion,
            19
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.PriceLimitExpansion|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setPricelimitexpansion = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        19,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearPricelimitexpansion = function () {
    return this.setPricelimitexpansion(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasPricelimitexpansion = function () {
    return jspb.Message.getField(this, 19) != null;
};

/**
 * optional ETFiNav etfINav = 20;
 * @return {?proto.proto.mdds.v1.ETFiNav}
 */
proto.proto.mdds.v1.Wrapper.prototype.getEtfinav = function () {
    return /** @type{?proto.proto.mdds.v1.ETFiNav} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.ETFiNav, 20)
    );
};

/**
 * @param {?proto.proto.mdds.v1.ETFiNav|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setEtfinav = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        20,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearEtfinav = function () {
    return this.setEtfinav(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasEtfinav = function () {
    return jspb.Message.getField(this, 20) != null;
};

/**
 * optional ETFiIndex etfIIndex = 21;
 * @return {?proto.proto.mdds.v1.ETFiIndex}
 */
proto.proto.mdds.v1.Wrapper.prototype.getEtfiindex = function () {
    return /** @type{?proto.proto.mdds.v1.ETFiIndex} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.ETFiIndex, 21)
    );
};

/**
 * @param {?proto.proto.mdds.v1.ETFiIndex|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setEtfiindex = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        21,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearEtfiindex = function () {
    return this.setEtfiindex(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasEtfiindex = function () {
    return jspb.Message.getField(this, 21) != null;
};

/**
 * optional ETFTrackingError etfTrackingError = 22;
 * @return {?proto.proto.mdds.v1.ETFTrackingError}
 */
proto.proto.mdds.v1.Wrapper.prototype.getEtftrackingerror = function () {
    return /** @type{?proto.proto.mdds.v1.ETFTrackingError} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.ETFTrackingError,
            22
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.ETFTrackingError|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setEtftrackingerror = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        22,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearEtftrackingerror = function () {
    return this.setEtftrackingerror(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasEtftrackingerror = function () {
    return jspb.Message.getField(this, 22) != null;
};

/**
 * optional TopNSymbolsWithTradingQuantity topNSymbolsWithTradingQuantity = 23;
 * @return {?proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTopnsymbolswithtradingquantity =
    function () {
        return /** @type{?proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity} */ (
            jspb.Message.getWrapperField(
                this,
                proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity,
                23
            )
        );
    };

/**
 * @param {?proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTopnsymbolswithtradingquantity =
    function (value) {
        return jspb.Message.setOneofWrapperField(
            this,
            23,
            proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
            value
        );
    };

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTopnsymbolswithtradingquantity =
    function () {
        return this.setTopnsymbolswithtradingquantity(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTopnsymbolswithtradingquantity =
    function () {
        return jspb.Message.getField(this, 23) != null;
    };

/**
 * optional TopNSymbolsWithCurrentPrice topNSymbolsWithCurrentPrice = 24;
 * @return {?proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTopnsymbolswithcurrentprice =
    function () {
        return /** @type{?proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice} */ (
            jspb.Message.getWrapperField(
                this,
                proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice,
                24
            )
        );
    };

/**
 * @param {?proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTopnsymbolswithcurrentprice =
    function (value) {
        return jspb.Message.setOneofWrapperField(
            this,
            24,
            proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
            value
        );
    };

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTopnsymbolswithcurrentprice =
    function () {
        return this.setTopnsymbolswithcurrentprice(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTopnsymbolswithcurrentprice =
    function () {
        return jspb.Message.getField(this, 24) != null;
    };

/**
 * optional TopNSymbolsWithHighRatioOfPrice topNSymbolsWithHighRatioOfPrice = 25;
 * @return {?proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTopnsymbolswithhighratioofprice =
    function () {
        return /** @type{?proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice} */ (
            jspb.Message.getWrapperField(
                this,
                proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice,
                25
            )
        );
    };

/**
 * @param {?proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTopnsymbolswithhighratioofprice =
    function (value) {
        return jspb.Message.setOneofWrapperField(
            this,
            25,
            proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
            value
        );
    };

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTopnsymbolswithhighratioofprice =
    function () {
        return this.setTopnsymbolswithhighratioofprice(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTopnsymbolswithhighratioofprice =
    function () {
        return jspb.Message.getField(this, 25) != null;
    };

/**
 * optional TopNSymbolsWithLowRatioOfPrice topNSymbolsWithLowRatioOfPrice = 26;
 * @return {?proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTopnsymbolswithlowratioofprice =
    function () {
        return /** @type{?proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice} */ (
            jspb.Message.getWrapperField(
                this,
                proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice,
                26
            )
        );
    };

/**
 * @param {?proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTopnsymbolswithlowratioofprice =
    function (value) {
        return jspb.Message.setOneofWrapperField(
            this,
            26,
            proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
            value
        );
    };

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTopnsymbolswithlowratioofprice =
    function () {
        return this.setTopnsymbolswithlowratioofprice(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTopnsymbolswithlowratioofprice =
    function () {
        return jspb.Message.getField(this, 26) != null;
    };

/**
 * optional TradingResultOfForeignInvestor tradingResultOfForeignInvestor = 27;
 * @return {?proto.proto.mdds.v1.TradingResultOfForeignInvestor}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTradingresultofforeigninvestor =
    function () {
        return /** @type{?proto.proto.mdds.v1.TradingResultOfForeignInvestor} */ (
            jspb.Message.getWrapperField(
                this,
                proto.proto.mdds.v1.TradingResultOfForeignInvestor,
                27
            )
        );
    };

/**
 * @param {?proto.proto.mdds.v1.TradingResultOfForeignInvestor|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTradingresultofforeigninvestor =
    function (value) {
        return jspb.Message.setOneofWrapperField(
            this,
            27,
            proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
            value
        );
    };

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTradingresultofforeigninvestor =
    function () {
        return this.setTradingresultofforeigninvestor(undefined);
    };

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTradingresultofforeigninvestor =
    function () {
        return jspb.Message.getField(this, 27) != null;
    };

/**
 * optional Disclosure disclosure = 28;
 * @return {?proto.proto.mdds.v1.Disclosure}
 */
proto.proto.mdds.v1.Wrapper.prototype.getDisclosure = function () {
    return /** @type{?proto.proto.mdds.v1.Disclosure} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.Disclosure, 28)
    );
};

/**
 * @param {?proto.proto.mdds.v1.Disclosure|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setDisclosure = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        28,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearDisclosure = function () {
    return this.setDisclosure(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasDisclosure = function () {
    return jspb.Message.getField(this, 28) != null;
};

/**
 * optional Timestamp timestamp = 29;
 * @return {?proto.proto.mdds.v1.Timestamp}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTimestamp = function () {
    return /** @type{?proto.proto.mdds.v1.Timestamp} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.Timestamp, 29)
    );
};

/**
 * @param {?proto.proto.mdds.v1.Timestamp|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTimestamp = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        29,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTimestamp = function () {
    return this.setTimestamp(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTimestamp = function () {
    return jspb.Message.getField(this, 29) != null;
};

/**
 * optional DelistedInstrument delistedInstrument = 30;
 * @return {?proto.proto.mdds.v1.DelistedInstrument}
 */
proto.proto.mdds.v1.Wrapper.prototype.getDelistedinstrument = function () {
    return /** @type{?proto.proto.mdds.v1.DelistedInstrument} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.DelistedInstrument,
            30
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.DelistedInstrument|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setDelistedinstrument = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        30,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearDelistedinstrument = function () {
    return this.setDelistedinstrument(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasDelistedinstrument = function () {
    return jspb.Message.getField(this, 30) != null;
};

/**
 * optional CouponPaymentDate couponPaymentDate = 31;
 * @return {?proto.proto.mdds.v1.CouponPaymentDate}
 */
proto.proto.mdds.v1.Wrapper.prototype.getCouponpaymentdate = function () {
    return /** @type{?proto.proto.mdds.v1.CouponPaymentDate} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.CouponPaymentDate,
            31
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.CouponPaymentDate|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setCouponpaymentdate = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        31,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearCouponpaymentdate = function () {
    return this.setCouponpaymentdate(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasCouponpaymentdate = function () {
    return jspb.Message.getField(this, 31) != null;
};

/**
 * optional ChangeOfContract changeOfContract = 32;
 * @return {?proto.proto.mdds.v1.ChangeOfContract}
 */
proto.proto.mdds.v1.Wrapper.prototype.getChangeofcontract = function () {
    return /** @type{?proto.proto.mdds.v1.ChangeOfContract} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.ChangeOfContract,
            32
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.ChangeOfContract|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setChangeofcontract = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        32,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearChangeofcontract = function () {
    return this.setChangeofcontract(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasChangeofcontract = function () {
    return jspb.Message.getField(this, 32) != null;
};

/**
 * optional InstrumentDerivatives instrumentDerivatives = 33;
 * @return {?proto.proto.mdds.v1.InstrumentDerivatives}
 */
proto.proto.mdds.v1.Wrapper.prototype.getInstrumentderivatives = function () {
    return /** @type{?proto.proto.mdds.v1.InstrumentDerivatives} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.InstrumentDerivatives,
            33
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.InstrumentDerivatives|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setInstrumentderivatives = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        33,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearInstrumentderivatives = function () {
    return this.setInstrumentderivatives(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasInstrumentderivatives = function () {
    return jspb.Message.getField(this, 33) != null;
};

/**
 * optional InstrumentSBR instrumentSbr = 34;
 * @return {?proto.proto.mdds.v1.InstrumentSBR}
 */
proto.proto.mdds.v1.Wrapper.prototype.getInstrumentsbr = function () {
    return /** @type{?proto.proto.mdds.v1.InstrumentSBR} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.InstrumentSBR,
            34
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.InstrumentSBR|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setInstrumentsbr = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        34,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearInstrumentsbr = function () {
    return this.setInstrumentsbr(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasInstrumentsbr = function () {
    return jspb.Message.getField(this, 34) != null;
};

/**
 * optional TradingSchedule tradingSchedule = 35;
 * @return {?proto.proto.mdds.v1.TradingSchedule}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTradingschedule = function () {
    return /** @type{?proto.proto.mdds.v1.TradingSchedule} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.TradingSchedule,
            35
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.TradingSchedule|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTradingschedule = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        35,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTradingschedule = function () {
    return this.setTradingschedule(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTradingschedule = function () {
    return jspb.Message.getField(this, 35) != null;
};

/**
 * optional Holiday holiday = 36;
 * @return {?proto.proto.mdds.v1.Holiday}
 */
proto.proto.mdds.v1.Wrapper.prototype.getHoliday = function () {
    return /** @type{?proto.proto.mdds.v1.Holiday} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.Holiday, 36)
    );
};

/**
 * @param {?proto.proto.mdds.v1.Holiday|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setHoliday = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        36,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearHoliday = function () {
    return this.setHoliday(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasHoliday = function () {
    return jspb.Message.getField(this, 36) != null;
};

/**
 * optional MemberTrader memberTrader = 37;
 * @return {?proto.proto.mdds.v1.MemberTrader}
 */
proto.proto.mdds.v1.Wrapper.prototype.getMembertrader = function () {
    return /** @type{?proto.proto.mdds.v1.MemberTrader} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.MemberTrader, 37)
    );
};

/**
 * @param {?proto.proto.mdds.v1.MemberTrader|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setMembertrader = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        37,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearMembertrader = function () {
    return this.setMembertrader(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasMembertrader = function () {
    return jspb.Message.getField(this, 37) != null;
};

/**
 * optional MarketMakingContract marketMakingContract = 38;
 * @return {?proto.proto.mdds.v1.MarketMakingContract}
 */
proto.proto.mdds.v1.Wrapper.prototype.getMarketmakingcontract = function () {
    return /** @type{?proto.proto.mdds.v1.MarketMakingContract} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.MarketMakingContract,
            38
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.MarketMakingContract|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setMarketmakingcontract = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        38,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearMarketmakingcontract = function () {
    return this.setMarketmakingcontract(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasMarketmakingcontract = function () {
    return jspb.Message.getField(this, 38) != null;
};

/**
 * optional ETFIndexComposition etfIndexComposition = 39;
 * @return {?proto.proto.mdds.v1.ETFIndexComposition}
 */
proto.proto.mdds.v1.Wrapper.prototype.getEtfindexcomposition = function () {
    return /** @type{?proto.proto.mdds.v1.ETFIndexComposition} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.ETFIndexComposition,
            39
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.ETFIndexComposition|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setEtfindexcomposition = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        39,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearEtfindexcomposition = function () {
    return this.setEtfindexcomposition(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasEtfindexcomposition = function () {
    return jspb.Message.getField(this, 39) != null;
};

/**
 * optional ELWUnderlyingAssets elwUnderlyingAssets = 40;
 * @return {?proto.proto.mdds.v1.ELWUnderlyingAssets}
 */
proto.proto.mdds.v1.Wrapper.prototype.getElwunderlyingassets = function () {
    return /** @type{?proto.proto.mdds.v1.ELWUnderlyingAssets} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.ELWUnderlyingAssets,
            40
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.ELWUnderlyingAssets|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setElwunderlyingassets = function (
    value
) {
    return jspb.Message.setOneofWrapperField(
        this,
        40,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearElwunderlyingassets = function () {
    return this.setElwunderlyingassets(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasElwunderlyingassets = function () {
    return jspb.Message.getField(this, 40) != null;
};

/**
 * optional StockInfo stockInfo = 41;
 * @return {?proto.proto.mdds.v1.StockInfo}
 */
proto.proto.mdds.v1.Wrapper.prototype.getStockinfo = function () {
    return /** @type{?proto.proto.mdds.v1.StockInfo} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.StockInfo, 41)
    );
};

/**
 * @param {?proto.proto.mdds.v1.StockInfo|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setStockinfo = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        41,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearStockinfo = function () {
    return this.setStockinfo(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasStockinfo = function () {
    return jspb.Message.getField(this, 41) != null;
};

/**
 * optional MarketIndex marketIndex = 42;
 * @return {?proto.proto.mdds.v1.MarketIndex}
 */
proto.proto.mdds.v1.Wrapper.prototype.getMarketindex = function () {
    return /** @type{?proto.proto.mdds.v1.MarketIndex} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.MarketIndex, 42)
    );
};

/**
 * @param {?proto.proto.mdds.v1.MarketIndex|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setMarketindex = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        42,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearMarketindex = function () {
    return this.setMarketindex(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasMarketindex = function () {
    return jspb.Message.getField(this, 42) != null;
};

/**
 * optional BoardEvent boardEvent = 43;
 * @return {?proto.proto.mdds.v1.BoardEvent}
 */
proto.proto.mdds.v1.Wrapper.prototype.getBoardevent = function () {
    return /** @type{?proto.proto.mdds.v1.BoardEvent} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.BoardEvent, 43)
    );
};

/**
 * @param {?proto.proto.mdds.v1.BoardEvent|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setBoardevent = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        43,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearBoardevent = function () {
    return this.setBoardevent(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasBoardevent = function () {
    return jspb.Message.getField(this, 43) != null;
};

/**
 * optional SymbolBoardEvent symbolBoardEvent = 44;
 * @return {?proto.proto.mdds.v1.SymbolBoardEvent}
 */
proto.proto.mdds.v1.Wrapper.prototype.getSymbolboardevent = function () {
    return /** @type{?proto.proto.mdds.v1.SymbolBoardEvent} */ (
        jspb.Message.getWrapperField(
            this,
            proto.proto.mdds.v1.SymbolBoardEvent,
            44
        )
    );
};

/**
 * @param {?proto.proto.mdds.v1.SymbolBoardEvent|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setSymbolboardevent = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        44,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearSymbolboardevent = function () {
    return this.setSymbolboardevent(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasSymbolboardevent = function () {
    return jspb.Message.getField(this, 44) != null;
};

/**
 * optional Tick tick = 45;
 * @return {?proto.proto.mdds.v1.Tick}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTick = function () {
    return /** @type{?proto.proto.mdds.v1.Tick} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.Tick, 45)
    );
};

/**
 * @param {?proto.proto.mdds.v1.Tick|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTick = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        45,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTick = function () {
    return this.setTick(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTick = function () {
    return jspb.Message.getField(this, 45) != null;
};

/**
 * optional TopPrice topPrice = 46;
 * @return {?proto.proto.mdds.v1.TopPrice}
 */
proto.proto.mdds.v1.Wrapper.prototype.getTopprice = function () {
    return /** @type{?proto.proto.mdds.v1.TopPrice} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.TopPrice, 46)
    );
};

/**
 * @param {?proto.proto.mdds.v1.TopPrice|undefined} value
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.setTopprice = function (value) {
    return jspb.Message.setOneofWrapperField(
        this,
        46,
        proto.proto.mdds.v1.Wrapper.oneofGroups_[0],
        value
    );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Wrapper} returns this
 */
proto.proto.mdds.v1.Wrapper.prototype.clearTopprice = function () {
    return this.setTopprice(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Wrapper.prototype.hasTopprice = function () {
    return jspb.Message.getField(this, 46) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.SecurityDefinition.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.SecurityDefinition.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.SecurityDefinition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.SecurityDefinition.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.SecurityDefinition}
 */
proto.proto.mdds.v1.SecurityDefinition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.SecurityDefinition();
    return proto.proto.mdds.v1.SecurityDefinition.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.SecurityDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.SecurityDefinition}
 */
proto.proto.mdds.v1.SecurityDefinition.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.SecurityDefinition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.SecurityDefinition.serializeBinaryToWriter(
        this,
        writer
    );
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.SecurityDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.SecurityDefinition.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.SecurityStatus.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.SecurityStatus.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.SecurityStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.SecurityStatus.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.SecurityStatus}
 */
proto.proto.mdds.v1.SecurityStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.SecurityStatus();
    return proto.proto.mdds.v1.SecurityStatus.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.SecurityStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.SecurityStatus}
 */
proto.proto.mdds.v1.SecurityStatus.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.SecurityStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.SecurityStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.SecurityStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.SecurityStatus.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.SecurityInformationNotification.prototype.toObject =
        function (opt_includeInstance) {
            return proto.proto.mdds.v1.SecurityInformationNotification.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.SecurityInformationNotification} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.SecurityInformationNotification.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.SecurityInformationNotification}
 */
proto.proto.mdds.v1.SecurityInformationNotification.deserializeBinary =
    function (bytes) {
        var reader = new jspb.BinaryReader(bytes);
        var msg = new proto.proto.mdds.v1.SecurityInformationNotification();
        return proto.proto.mdds.v1.SecurityInformationNotification.deserializeBinaryFromReader(
            msg,
            reader
        );
    };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.SecurityInformationNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.SecurityInformationNotification}
 */
proto.proto.mdds.v1.SecurityInformationNotification.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.SecurityInformationNotification.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.SecurityInformationNotification.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.SecurityInformationNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.SecurityInformationNotification.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.SymbolClosingInformation.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.SymbolClosingInformation.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.SymbolClosingInformation} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.SymbolClosingInformation.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.SymbolClosingInformation}
 */
proto.proto.mdds.v1.SymbolClosingInformation.deserializeBinary = function (
    bytes
) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.SymbolClosingInformation();
    return proto.proto.mdds.v1.SymbolClosingInformation.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.SymbolClosingInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.SymbolClosingInformation}
 */
proto.proto.mdds.v1.SymbolClosingInformation.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.SymbolClosingInformation.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.SymbolClosingInformation.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.SymbolClosingInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.SymbolClosingInformation.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.VolatilityInterruption.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.VolatilityInterruption.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.VolatilityInterruption} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.VolatilityInterruption.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.VolatilityInterruption}
 */
proto.proto.mdds.v1.VolatilityInterruption.deserializeBinary = function (
    bytes
) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.VolatilityInterruption();
    return proto.proto.mdds.v1.VolatilityInterruption.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.VolatilityInterruption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.VolatilityInterruption}
 */
proto.proto.mdds.v1.VolatilityInterruption.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.VolatilityInterruption.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.VolatilityInterruption.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.VolatilityInterruption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.VolatilityInterruption.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.MarketMakerInformation.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.MarketMakerInformation.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.MarketMakerInformation} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.MarketMakerInformation.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.MarketMakerInformation}
 */
proto.proto.mdds.v1.MarketMakerInformation.deserializeBinary = function (
    bytes
) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.MarketMakerInformation();
    return proto.proto.mdds.v1.MarketMakerInformation.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.MarketMakerInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.MarketMakerInformation}
 */
proto.proto.mdds.v1.MarketMakerInformation.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.MarketMakerInformation.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.MarketMakerInformation.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.MarketMakerInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.MarketMakerInformation.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.SymbolEvent.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.SymbolEvent.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.SymbolEvent} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.SymbolEvent.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.SymbolEvent}
 */
proto.proto.mdds.v1.SymbolEvent.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.SymbolEvent();
    return proto.proto.mdds.v1.SymbolEvent.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.SymbolEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.SymbolEvent}
 */
proto.proto.mdds.v1.SymbolEvent.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.SymbolEvent.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.SymbolEvent.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.SymbolEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.SymbolEvent.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.IndexConstituentsInformation.prototype.toObject =
        function (opt_includeInstance) {
            return proto.proto.mdds.v1.IndexConstituentsInformation.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.IndexConstituentsInformation} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.IndexConstituentsInformation.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.IndexConstituentsInformation}
 */
proto.proto.mdds.v1.IndexConstituentsInformation.deserializeBinary = function (
    bytes
) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.IndexConstituentsInformation();
    return proto.proto.mdds.v1.IndexConstituentsInformation.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.IndexConstituentsInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.IndexConstituentsInformation}
 */
proto.proto.mdds.v1.IndexConstituentsInformation.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.IndexConstituentsInformation.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.IndexConstituentsInformation.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.IndexConstituentsInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.IndexConstituentsInformation.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.RandomEnd.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.RandomEnd.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.RandomEnd} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.RandomEnd.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.RandomEnd}
 */
proto.proto.mdds.v1.RandomEnd.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.RandomEnd();
    return proto.proto.mdds.v1.RandomEnd.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.RandomEnd} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.RandomEnd}
 */
proto.proto.mdds.v1.RandomEnd.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.RandomEnd.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.RandomEnd.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.RandomEnd} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.RandomEnd.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.Price.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.Price.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.Price} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.Price.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.Price}
 */
proto.proto.mdds.v1.Price.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.Price();
    return proto.proto.mdds.v1.Price.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.Price} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.Price}
 */
proto.proto.mdds.v1.Price.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.Price.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.Price.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.Price} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.Price.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.PriceRecovery.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.PriceRecovery.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.PriceRecovery} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.PriceRecovery.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.PriceRecovery}
 */
proto.proto.mdds.v1.PriceRecovery.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.PriceRecovery();
    return proto.proto.mdds.v1.PriceRecovery.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.PriceRecovery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.PriceRecovery}
 */
proto.proto.mdds.v1.PriceRecovery.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.PriceRecovery.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.PriceRecovery.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.PriceRecovery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.PriceRecovery.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.Index.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.Index.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.Index} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.Index.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.Index}
 */
proto.proto.mdds.v1.Index.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.Index();
    return proto.proto.mdds.v1.Index.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.Index} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.Index}
 */
proto.proto.mdds.v1.Index.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.Index.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.Index.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.Index} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.Index.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.InvestorPerIndustry.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.InvestorPerIndustry.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.InvestorPerIndustry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.InvestorPerIndustry.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.InvestorPerIndustry}
 */
proto.proto.mdds.v1.InvestorPerIndustry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.InvestorPerIndustry();
    return proto.proto.mdds.v1.InvestorPerIndustry.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.InvestorPerIndustry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.InvestorPerIndustry}
 */
proto.proto.mdds.v1.InvestorPerIndustry.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.InvestorPerIndustry.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.InvestorPerIndustry.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.InvestorPerIndustry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.InvestorPerIndustry.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.InvestorPerSymbol.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.InvestorPerSymbol.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.InvestorPerSymbol} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.InvestorPerSymbol.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.InvestorPerSymbol}
 */
proto.proto.mdds.v1.InvestorPerSymbol.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.InvestorPerSymbol();
    return proto.proto.mdds.v1.InvestorPerSymbol.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.InvestorPerSymbol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.InvestorPerSymbol}
 */
proto.proto.mdds.v1.InvestorPerSymbol.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.InvestorPerSymbol.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.InvestorPerSymbol.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.InvestorPerSymbol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.InvestorPerSymbol.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.TopNMembersPerSymbol.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.TopNMembersPerSymbol.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.TopNMembersPerSymbol} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.TopNMembersPerSymbol.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.TopNMembersPerSymbol}
 */
proto.proto.mdds.v1.TopNMembersPerSymbol.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.TopNMembersPerSymbol();
    return proto.proto.mdds.v1.TopNMembersPerSymbol.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.TopNMembersPerSymbol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.TopNMembersPerSymbol}
 */
proto.proto.mdds.v1.TopNMembersPerSymbol.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.TopNMembersPerSymbol.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.TopNMembersPerSymbol.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.TopNMembersPerSymbol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.TopNMembersPerSymbol.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.OpenInterest.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.OpenInterest.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.OpenInterest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.OpenInterest.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.OpenInterest}
 */
proto.proto.mdds.v1.OpenInterest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.OpenInterest();
    return proto.proto.mdds.v1.OpenInterest.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.OpenInterest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.OpenInterest}
 */
proto.proto.mdds.v1.OpenInterest.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.OpenInterest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.OpenInterest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.OpenInterest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.OpenInterest.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.DeemTradePrice.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.DeemTradePrice.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.DeemTradePrice} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.DeemTradePrice.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.DeemTradePrice}
 */
proto.proto.mdds.v1.DeemTradePrice.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.DeemTradePrice();
    return proto.proto.mdds.v1.DeemTradePrice.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.DeemTradePrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.DeemTradePrice}
 */
proto.proto.mdds.v1.DeemTradePrice.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.DeemTradePrice.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.DeemTradePrice.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.DeemTradePrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.DeemTradePrice.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.ForeignerOrderLimit.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.ForeignerOrderLimit.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.ForeignerOrderLimit} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.ForeignerOrderLimit.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.ForeignerOrderLimit}
 */
proto.proto.mdds.v1.ForeignerOrderLimit.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.ForeignerOrderLimit();
    return proto.proto.mdds.v1.ForeignerOrderLimit.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.ForeignerOrderLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.ForeignerOrderLimit}
 */
proto.proto.mdds.v1.ForeignerOrderLimit.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.ForeignerOrderLimit.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.ForeignerOrderLimit.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.ForeignerOrderLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.ForeignerOrderLimit.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.PriceLimitExpansion.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.PriceLimitExpansion.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.PriceLimitExpansion} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.PriceLimitExpansion.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.PriceLimitExpansion}
 */
proto.proto.mdds.v1.PriceLimitExpansion.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.PriceLimitExpansion();
    return proto.proto.mdds.v1.PriceLimitExpansion.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.PriceLimitExpansion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.PriceLimitExpansion}
 */
proto.proto.mdds.v1.PriceLimitExpansion.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.PriceLimitExpansion.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.PriceLimitExpansion.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.PriceLimitExpansion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.PriceLimitExpansion.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.ETFiNav.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.ETFiNav.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.ETFiNav} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.ETFiNav.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.ETFiNav}
 */
proto.proto.mdds.v1.ETFiNav.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.ETFiNav();
    return proto.proto.mdds.v1.ETFiNav.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.ETFiNav} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.ETFiNav}
 */
proto.proto.mdds.v1.ETFiNav.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.ETFiNav.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.ETFiNav.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.ETFiNav} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.ETFiNav.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.ETFiIndex.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.ETFiIndex.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.ETFiIndex} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.ETFiIndex.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.ETFiIndex}
 */
proto.proto.mdds.v1.ETFiIndex.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.ETFiIndex();
    return proto.proto.mdds.v1.ETFiIndex.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.ETFiIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.ETFiIndex}
 */
proto.proto.mdds.v1.ETFiIndex.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.ETFiIndex.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.ETFiIndex.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.ETFiIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.ETFiIndex.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.ETFTrackingError.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.ETFTrackingError.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.ETFTrackingError} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.ETFTrackingError.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.ETFTrackingError}
 */
proto.proto.mdds.v1.ETFTrackingError.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.ETFTrackingError();
    return proto.proto.mdds.v1.ETFTrackingError.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.ETFTrackingError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.ETFTrackingError}
 */
proto.proto.mdds.v1.ETFTrackingError.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.ETFTrackingError.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.ETFTrackingError.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.ETFTrackingError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.ETFTrackingError.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.prototype.toObject =
        function (opt_includeInstance) {
            return proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity}
 */
proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.deserializeBinary =
    function (bytes) {
        var reader = new jspb.BinaryReader(bytes);
        var msg = new proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity();
        return proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.deserializeBinaryFromReader(
            msg,
            reader
        );
    };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity}
 */
proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.TopNSymbolsWithTradingQuantity.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.prototype.toObject =
        function (opt_includeInstance) {
            return proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice}
 */
proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.deserializeBinary = function (
    bytes
) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice();
    return proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice}
 */
proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.TopNSymbolsWithCurrentPrice.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.prototype.toObject =
        function (opt_includeInstance) {
            return proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice}
 */
proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.deserializeBinary =
    function (bytes) {
        var reader = new jspb.BinaryReader(bytes);
        var msg = new proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice();
        return proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.deserializeBinaryFromReader(
            msg,
            reader
        );
    };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice}
 */
proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.TopNSymbolsWithHighRatioOfPrice.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.prototype.toObject =
        function (opt_includeInstance) {
            return proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice}
 */
proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.deserializeBinary =
    function (bytes) {
        var reader = new jspb.BinaryReader(bytes);
        var msg = new proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice();
        return proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.deserializeBinaryFromReader(
            msg,
            reader
        );
    };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice}
 */
proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.TopNSymbolsWithLowRatioOfPrice.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.TradingResultOfForeignInvestor.prototype.toObject =
        function (opt_includeInstance) {
            return proto.proto.mdds.v1.TradingResultOfForeignInvestor.toObject(
                opt_includeInstance,
                this
            );
        };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.TradingResultOfForeignInvestor} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.TradingResultOfForeignInvestor.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.TradingResultOfForeignInvestor}
 */
proto.proto.mdds.v1.TradingResultOfForeignInvestor.deserializeBinary =
    function (bytes) {
        var reader = new jspb.BinaryReader(bytes);
        var msg = new proto.proto.mdds.v1.TradingResultOfForeignInvestor();
        return proto.proto.mdds.v1.TradingResultOfForeignInvestor.deserializeBinaryFromReader(
            msg,
            reader
        );
    };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.TradingResultOfForeignInvestor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.TradingResultOfForeignInvestor}
 */
proto.proto.mdds.v1.TradingResultOfForeignInvestor.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.TradingResultOfForeignInvestor.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.TradingResultOfForeignInvestor.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.TradingResultOfForeignInvestor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.TradingResultOfForeignInvestor.serializeBinaryToWriter =
    function (message, writer) {
        var f = undefined;
    };

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.Disclosure.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.Disclosure.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.Disclosure} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.Disclosure.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.Disclosure}
 */
proto.proto.mdds.v1.Disclosure.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.Disclosure();
    return proto.proto.mdds.v1.Disclosure.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.Disclosure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.Disclosure}
 */
proto.proto.mdds.v1.Disclosure.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.Disclosure.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.Disclosure.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.Disclosure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.Disclosure.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.DelistedInstrument.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.DelistedInstrument.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.DelistedInstrument} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.DelistedInstrument.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.DelistedInstrument}
 */
proto.proto.mdds.v1.DelistedInstrument.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.DelistedInstrument();
    return proto.proto.mdds.v1.DelistedInstrument.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.DelistedInstrument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.DelistedInstrument}
 */
proto.proto.mdds.v1.DelistedInstrument.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.DelistedInstrument.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.DelistedInstrument.serializeBinaryToWriter(
        this,
        writer
    );
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.DelistedInstrument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.DelistedInstrument.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.CouponPaymentDate.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.CouponPaymentDate.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.CouponPaymentDate} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.CouponPaymentDate.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.CouponPaymentDate}
 */
proto.proto.mdds.v1.CouponPaymentDate.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.CouponPaymentDate();
    return proto.proto.mdds.v1.CouponPaymentDate.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.CouponPaymentDate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.CouponPaymentDate}
 */
proto.proto.mdds.v1.CouponPaymentDate.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.CouponPaymentDate.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.CouponPaymentDate.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.CouponPaymentDate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.CouponPaymentDate.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.ChangeOfContract.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.ChangeOfContract.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.ChangeOfContract} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.ChangeOfContract.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.ChangeOfContract}
 */
proto.proto.mdds.v1.ChangeOfContract.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.ChangeOfContract();
    return proto.proto.mdds.v1.ChangeOfContract.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.ChangeOfContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.ChangeOfContract}
 */
proto.proto.mdds.v1.ChangeOfContract.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.ChangeOfContract.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.ChangeOfContract.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.ChangeOfContract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.ChangeOfContract.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.InstrumentDerivatives.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.InstrumentDerivatives.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.InstrumentDerivatives} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.InstrumentDerivatives.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.InstrumentDerivatives}
 */
proto.proto.mdds.v1.InstrumentDerivatives.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.InstrumentDerivatives();
    return proto.proto.mdds.v1.InstrumentDerivatives.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.InstrumentDerivatives} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.InstrumentDerivatives}
 */
proto.proto.mdds.v1.InstrumentDerivatives.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.InstrumentDerivatives.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.InstrumentDerivatives.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.InstrumentDerivatives} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.InstrumentDerivatives.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.InstrumentSBR.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.InstrumentSBR.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.InstrumentSBR} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.InstrumentSBR.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.InstrumentSBR}
 */
proto.proto.mdds.v1.InstrumentSBR.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.InstrumentSBR();
    return proto.proto.mdds.v1.InstrumentSBR.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.InstrumentSBR} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.InstrumentSBR}
 */
proto.proto.mdds.v1.InstrumentSBR.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.InstrumentSBR.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.InstrumentSBR.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.InstrumentSBR} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.InstrumentSBR.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.TradingSchedule.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.TradingSchedule.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.TradingSchedule} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.TradingSchedule.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.TradingSchedule}
 */
proto.proto.mdds.v1.TradingSchedule.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.TradingSchedule();
    return proto.proto.mdds.v1.TradingSchedule.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.TradingSchedule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.TradingSchedule}
 */
proto.proto.mdds.v1.TradingSchedule.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.TradingSchedule.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.TradingSchedule.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.TradingSchedule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.TradingSchedule.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.Holiday.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.Holiday.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.Holiday} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.Holiday.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.Holiday}
 */
proto.proto.mdds.v1.Holiday.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.Holiday();
    return proto.proto.mdds.v1.Holiday.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.Holiday} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.Holiday}
 */
proto.proto.mdds.v1.Holiday.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.Holiday.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.Holiday.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.Holiday} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.Holiday.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.MemberTrader.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.MemberTrader.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.MemberTrader} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.MemberTrader.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.MemberTrader}
 */
proto.proto.mdds.v1.MemberTrader.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.MemberTrader();
    return proto.proto.mdds.v1.MemberTrader.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.MemberTrader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.MemberTrader}
 */
proto.proto.mdds.v1.MemberTrader.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.MemberTrader.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.MemberTrader.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.MemberTrader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.MemberTrader.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.MarketMakingContract.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.MarketMakingContract.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.MarketMakingContract} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.MarketMakingContract.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.MarketMakingContract}
 */
proto.proto.mdds.v1.MarketMakingContract.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.MarketMakingContract();
    return proto.proto.mdds.v1.MarketMakingContract.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.MarketMakingContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.MarketMakingContract}
 */
proto.proto.mdds.v1.MarketMakingContract.deserializeBinaryFromReader =
    function (msg, reader) {
        while (reader.nextField()) {
            if (reader.isEndGroup()) {
                break;
            }
            var field = reader.getFieldNumber();
            switch (field) {
                default:
                    reader.skipField();
                    break;
            }
        }
        return msg;
    };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.MarketMakingContract.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.MarketMakingContract.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.MarketMakingContract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.MarketMakingContract.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.ETFIndexComposition.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.ETFIndexComposition.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.ETFIndexComposition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.ETFIndexComposition.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.ETFIndexComposition}
 */
proto.proto.mdds.v1.ETFIndexComposition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.ETFIndexComposition();
    return proto.proto.mdds.v1.ETFIndexComposition.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.ETFIndexComposition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.ETFIndexComposition}
 */
proto.proto.mdds.v1.ETFIndexComposition.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.ETFIndexComposition.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.ETFIndexComposition.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.ETFIndexComposition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.ETFIndexComposition.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.ELWUnderlyingAssets.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.ELWUnderlyingAssets.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.ELWUnderlyingAssets} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.ELWUnderlyingAssets.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.ELWUnderlyingAssets}
 */
proto.proto.mdds.v1.ELWUnderlyingAssets.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.ELWUnderlyingAssets();
    return proto.proto.mdds.v1.ELWUnderlyingAssets.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.ELWUnderlyingAssets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.ELWUnderlyingAssets}
 */
proto.proto.mdds.v1.ELWUnderlyingAssets.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.ELWUnderlyingAssets.prototype.serializeBinary =
    function () {
        var writer = new jspb.BinaryWriter();
        proto.proto.mdds.v1.ELWUnderlyingAssets.serializeBinaryToWriter(
            this,
            writer
        );
        return writer.getResultBuffer();
    };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.ELWUnderlyingAssets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.ELWUnderlyingAssets.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.StockInfo.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.StockInfo.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.StockInfo} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.StockInfo.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.StockInfo}
 */
proto.proto.mdds.v1.StockInfo.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.StockInfo();
    return proto.proto.mdds.v1.StockInfo.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.StockInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.StockInfo}
 */
proto.proto.mdds.v1.StockInfo.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.StockInfo.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.StockInfo.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.StockInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.StockInfo.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.MarketIndex.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.MarketIndex.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.MarketIndex} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.MarketIndex.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                marketid: jspb.Message.getFieldWithDefault(msg, 1, 0),
                tradingsessionid: jspb.Message.getFieldWithDefault(msg, 2, 0),
                marketindexclass: jspb.Message.getFieldWithDefault(msg, 3, 0),
                indextypecode: jspb.Message.getFieldWithDefault(msg, 4, ""),
                currencycode: jspb.Message.getFieldWithDefault(msg, 5, ""),
                transacttime:
                    (f = msg.getTransacttime()) &&
                    proto.proto.mdds.v1.Timestamp.toObject(includeInstance, f),
                valueindexes: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    7,
                    0.0
                ),
                totalvolumetraded: jspb.Message.getFieldWithDefault(msg, 8, 0),
                grosstradeamount: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    9,
                    0.0
                ),
                contauctacctrdvol: jspb.Message.getFieldWithDefault(msg, 10, 0),
                contauctacctrdval:
                    jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
                blktrdacctrdvol: jspb.Message.getFieldWithDefault(msg, 12, 0),
                blktrdacctrdval: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    13,
                    0.0
                ),
                fluctuationupperlimitissuecount:
                    jspb.Message.getFieldWithDefault(msg, 14, 0),
                fluctuationupissuecount: jspb.Message.getFieldWithDefault(
                    msg,
                    15,
                    0
                ),
                fluctuationsteadinessissuecount:
                    jspb.Message.getFieldWithDefault(msg, 16, 0),
                fluctuationdownissuecount: jspb.Message.getFieldWithDefault(
                    msg,
                    17,
                    0
                ),
                fluctuationlowerlimitissuecount:
                    jspb.Message.getFieldWithDefault(msg, 18, 0),
                fluctuationupissuevolume: jspb.Message.getFieldWithDefault(
                    msg,
                    19,
                    0
                ),
                fluctuationsteadinessissuevolume:
                    jspb.Message.getFieldWithDefault(msg, 20, 0),
                fluctuationdownissuevolume: jspb.Message.getFieldWithDefault(
                    msg,
                    21,
                    0
                ),
                highestvalueindexes:
                    jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
                lowestvalueindexes:
                    jspb.Message.getFloatingPointFieldWithDefault(msg, 23, 0.0),
                changedvalue: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    24,
                    0.0
                ),
                changedratio: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    25,
                    0.0
                ),
                priorvalueindexes:
                    jspb.Message.getFloatingPointFieldWithDefault(msg, 26, 0.0),
                indexname: jspb.Message.getFieldWithDefault(msg, 27, ""),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.MarketIndex}
 */
proto.proto.mdds.v1.MarketIndex.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.MarketIndex();
    return proto.proto.mdds.v1.MarketIndex.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.MarketIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.MarketIndex}
 */
proto.proto.mdds.v1.MarketIndex.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value =
                    /** @type {!proto.proto.mdds.v1.MarketIndex.MarketId} */ (
                        reader.readEnum()
                    );
                msg.setMarketid(value);
                break;
            case 2:
                var value =
                    /** @type {!proto.proto.mdds.v1.MarketIndex.TradingSessionId} */ (
                        reader.readEnum()
                    );
                msg.setTradingsessionid(value);
                break;
            case 3:
                var value =
                    /** @type {!proto.proto.mdds.v1.MarketIndex.MarketIndexClass} */ (
                        reader.readEnum()
                    );
                msg.setMarketindexclass(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setIndextypecode(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setCurrencycode(value);
                break;
            case 6:
                var value = new proto.proto.mdds.v1.Timestamp();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.Timestamp.deserializeBinaryFromReader
                );
                msg.setTransacttime(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setValueindexes(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTotalvolumetraded(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGrosstradeamount(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setContauctacctrdvol(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setContauctacctrdval(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setBlktrdacctrdvol(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setBlktrdacctrdval(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setFluctuationupperlimitissuecount(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setFluctuationupissuecount(value);
                break;
            case 16:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setFluctuationsteadinessissuecount(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setFluctuationdownissuecount(value);
                break;
            case 18:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setFluctuationlowerlimitissuecount(value);
                break;
            case 19:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setFluctuationupissuevolume(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setFluctuationsteadinessissuevolume(value);
                break;
            case 21:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setFluctuationdownissuevolume(value);
                break;
            case 22:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setHighestvalueindexes(value);
                break;
            case 23:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setLowestvalueindexes(value);
                break;
            case 24:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setChangedvalue(value);
                break;
            case 25:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setChangedratio(value);
                break;
            case 26:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setPriorvalueindexes(value);
                break;
            case 27:
                var value = /** @type {string} */ (reader.readString());
                msg.setIndexname(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.MarketIndex.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.MarketIndex.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.MarketIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.MarketIndex.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getMarketid();
    if (f !== 0.0) {
        writer.writeEnum(1, f);
    }
    f = message.getTradingsessionid();
    if (f !== 0.0) {
        writer.writeEnum(2, f);
    }
    f = message.getMarketindexclass();
    if (f !== 0.0) {
        writer.writeEnum(3, f);
    }
    f = message.getIndextypecode();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getCurrencycode();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getTransacttime();
    if (f != null) {
        writer.writeMessage(
            6,
            f,
            proto.proto.mdds.v1.Timestamp.serializeBinaryToWriter
        );
    }
    f = message.getValueindexes();
    if (f !== 0.0) {
        writer.writeDouble(7, f);
    }
    f = message.getTotalvolumetraded();
    if (f !== 0) {
        writer.writeUint64(8, f);
    }
    f = message.getGrosstradeamount();
    if (f !== 0.0) {
        writer.writeDouble(9, f);
    }
    f = message.getContauctacctrdvol();
    if (f !== 0) {
        writer.writeUint64(10, f);
    }
    f = message.getContauctacctrdval();
    if (f !== 0.0) {
        writer.writeDouble(11, f);
    }
    f = message.getBlktrdacctrdvol();
    if (f !== 0) {
        writer.writeUint64(12, f);
    }
    f = message.getBlktrdacctrdval();
    if (f !== 0.0) {
        writer.writeDouble(13, f);
    }
    f = message.getFluctuationupperlimitissuecount();
    if (f !== 0) {
        writer.writeUint32(14, f);
    }
    f = message.getFluctuationupissuecount();
    if (f !== 0) {
        writer.writeUint32(15, f);
    }
    f = message.getFluctuationsteadinessissuecount();
    if (f !== 0) {
        writer.writeUint32(16, f);
    }
    f = message.getFluctuationdownissuecount();
    if (f !== 0) {
        writer.writeUint32(17, f);
    }
    f = message.getFluctuationlowerlimitissuecount();
    if (f !== 0) {
        writer.writeUint32(18, f);
    }
    f = message.getFluctuationupissuevolume();
    if (f !== 0) {
        writer.writeUint64(19, f);
    }
    f = message.getFluctuationsteadinessissuevolume();
    if (f !== 0) {
        writer.writeUint64(20, f);
    }
    f = message.getFluctuationdownissuevolume();
    if (f !== 0) {
        writer.writeUint64(21, f);
    }
    f = message.getHighestvalueindexes();
    if (f !== 0.0) {
        writer.writeDouble(22, f);
    }
    f = message.getLowestvalueindexes();
    if (f !== 0.0) {
        writer.writeDouble(23, f);
    }
    f = message.getChangedvalue();
    if (f !== 0.0) {
        writer.writeDouble(24, f);
    }
    f = message.getChangedratio();
    if (f !== 0.0) {
        writer.writeDouble(25, f);
    }
    f = message.getPriorvalueindexes();
    if (f !== 0.0) {
        writer.writeDouble(26, f);
    }
    f = message.getIndexname();
    if (f.length > 0) {
        writer.writeString(27, f);
    }
};

/**
 * @enum {number}
 */
proto.proto.mdds.v1.MarketIndex.MarketId = {
    MARKET_ID_UNSPECIFIED: 0,
    MARKET_ID_1: 1,
    MARKET_ID_2: 2,
};

/**
 * @enum {number}
 */
proto.proto.mdds.v1.MarketIndex.TradingSessionId = {
    TRADING_SESSION_UNSPECIFIED: 0,
    TRADING_SESSION_1: 1,
    TRADING_SESSION_2: 2,
};

/**
 * @enum {number}
 */
proto.proto.mdds.v1.MarketIndex.MarketIndexClass = {
    MARKET_INDEX_CLASS_UNSPECIFIED: 0,
    MARKET_INDEX_CLASS_1: 1,
    MARKET_INDEX_CLASS_2: 2,
};

/**
 * optional MarketId marketId = 1;
 * @return {!proto.proto.mdds.v1.MarketIndex.MarketId}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getMarketid = function () {
    return /** @type {!proto.proto.mdds.v1.MarketIndex.MarketId} */ (
        jspb.Message.getFieldWithDefault(this, 1, 0)
    );
};

/**
 * @param {!proto.proto.mdds.v1.MarketIndex.MarketId} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setMarketid = function (value) {
    return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional TradingSessionId tradingSessionId = 2;
 * @return {!proto.proto.mdds.v1.MarketIndex.TradingSessionId}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getTradingsessionid = function () {
    return /** @type {!proto.proto.mdds.v1.MarketIndex.TradingSessionId} */ (
        jspb.Message.getFieldWithDefault(this, 2, 0)
    );
};

/**
 * @param {!proto.proto.mdds.v1.MarketIndex.TradingSessionId} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setTradingsessionid = function (
    value
) {
    return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * optional MarketIndexClass marketIndexClass = 3;
 * @return {!proto.proto.mdds.v1.MarketIndex.MarketIndexClass}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getMarketindexclass = function () {
    return /** @type {!proto.proto.mdds.v1.MarketIndex.MarketIndexClass} */ (
        jspb.Message.getFieldWithDefault(this, 3, 0)
    );
};

/**
 * @param {!proto.proto.mdds.v1.MarketIndex.MarketIndexClass} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setMarketindexclass = function (
    value
) {
    return jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * optional string indexTypeCode = 4;
 * @return {string}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getIndextypecode = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 4, "")
    );
};

/**
 * @param {string} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setIndextypecode = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string currencyCode = 5;
 * @return {string}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getCurrencycode = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 5, "")
    );
};

/**
 * @param {string} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setCurrencycode = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional Timestamp transactTime = 6;
 * @return {?proto.proto.mdds.v1.Timestamp}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getTransacttime = function () {
    return /** @type{?proto.proto.mdds.v1.Timestamp} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.Timestamp, 6)
    );
};

/**
 * @param {?proto.proto.mdds.v1.Timestamp|undefined} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setTransacttime = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.clearTransacttime = function () {
    return this.setTransacttime(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.MarketIndex.prototype.hasTransacttime = function () {
    return jspb.Message.getField(this, 6) != null;
};

/**
 * optional double valueIndexes = 7;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getValueindexes = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setValueindexes = function (value) {
    return jspb.Message.setProto3FloatField(this, 7, value);
};

/**
 * optional uint64 totalVolumeTraded = 8;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getTotalvolumetraded = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setTotalvolumetraded = function (
    value
) {
    return jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * optional double grossTradeAmount = 9;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getGrosstradeamount = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setGrosstradeamount = function (
    value
) {
    return jspb.Message.setProto3FloatField(this, 9, value);
};

/**
 * optional uint64 contauctAccTrdVol = 10;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getContauctacctrdvol = function () {
    return /** @type {number} */ (
        jspb.Message.getFieldWithDefault(this, 10, 0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setContauctacctrdvol = function (
    value
) {
    return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional double contauctAccTrdVal = 11;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getContauctacctrdval = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setContauctacctrdval = function (
    value
) {
    return jspb.Message.setProto3FloatField(this, 11, value);
};

/**
 * optional uint64 blkTrdAccTrdVol = 12;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getBlktrdacctrdvol = function () {
    return /** @type {number} */ (
        jspb.Message.getFieldWithDefault(this, 12, 0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setBlktrdacctrdvol = function (
    value
) {
    return jspb.Message.setProto3IntField(this, 12, value);
};

/**
 * optional double blkTrdAccTrdVal = 13;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getBlktrdacctrdval = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setBlktrdacctrdval = function (
    value
) {
    return jspb.Message.setProto3FloatField(this, 13, value);
};

/**
 * optional uint32 fluctuationUpperLimitIssueCount = 14;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getFluctuationupperlimitissuecount =
    function () {
        return /** @type {number} */ (
            jspb.Message.getFieldWithDefault(this, 14, 0)
        );
    };

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setFluctuationupperlimitissuecount =
    function (value) {
        return jspb.Message.setProto3IntField(this, 14, value);
    };

/**
 * optional uint32 fluctuationUpIssueCount = 15;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getFluctuationupissuecount =
    function () {
        return /** @type {number} */ (
            jspb.Message.getFieldWithDefault(this, 15, 0)
        );
    };

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setFluctuationupissuecount =
    function (value) {
        return jspb.Message.setProto3IntField(this, 15, value);
    };

/**
 * optional uint32 fluctuationSteadinessIssueCount = 16;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getFluctuationsteadinessissuecount =
    function () {
        return /** @type {number} */ (
            jspb.Message.getFieldWithDefault(this, 16, 0)
        );
    };

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setFluctuationsteadinessissuecount =
    function (value) {
        return jspb.Message.setProto3IntField(this, 16, value);
    };

/**
 * optional uint32 fluctuationDownIssueCount = 17;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getFluctuationdownissuecount =
    function () {
        return /** @type {number} */ (
            jspb.Message.getFieldWithDefault(this, 17, 0)
        );
    };

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setFluctuationdownissuecount =
    function (value) {
        return jspb.Message.setProto3IntField(this, 17, value);
    };

/**
 * optional uint32 fluctuationLowerLimitIssueCount = 18;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getFluctuationlowerlimitissuecount =
    function () {
        return /** @type {number} */ (
            jspb.Message.getFieldWithDefault(this, 18, 0)
        );
    };

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setFluctuationlowerlimitissuecount =
    function (value) {
        return jspb.Message.setProto3IntField(this, 18, value);
    };

/**
 * optional uint64 fluctuationUpIssueVolume = 19;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getFluctuationupissuevolume =
    function () {
        return /** @type {number} */ (
            jspb.Message.getFieldWithDefault(this, 19, 0)
        );
    };

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setFluctuationupissuevolume =
    function (value) {
        return jspb.Message.setProto3IntField(this, 19, value);
    };

/**
 * optional uint64 fluctuationSteadinessIssueVolume = 20;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getFluctuationsteadinessissuevolume =
    function () {
        return /** @type {number} */ (
            jspb.Message.getFieldWithDefault(this, 20, 0)
        );
    };

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setFluctuationsteadinessissuevolume =
    function (value) {
        return jspb.Message.setProto3IntField(this, 20, value);
    };

/**
 * optional uint64 fluctuationDownIssueVolume = 21;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getFluctuationdownissuevolume =
    function () {
        return /** @type {number} */ (
            jspb.Message.getFieldWithDefault(this, 21, 0)
        );
    };

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setFluctuationdownissuevolume =
    function (value) {
        return jspb.Message.setProto3IntField(this, 21, value);
    };

/**
 * optional double highestValueIndexes = 22;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getHighestvalueindexes = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setHighestvalueindexes = function (
    value
) {
    return jspb.Message.setProto3FloatField(this, 22, value);
};

/**
 * optional double lowestValueIndexes = 23;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getLowestvalueindexes = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setLowestvalueindexes = function (
    value
) {
    return jspb.Message.setProto3FloatField(this, 23, value);
};

/**
 * optional double changedValue = 24;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getChangedvalue = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 24, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setChangedvalue = function (value) {
    return jspb.Message.setProto3FloatField(this, 24, value);
};

/**
 * optional double changedRatio = 25;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getChangedratio = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 25, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setChangedratio = function (value) {
    return jspb.Message.setProto3FloatField(this, 25, value);
};

/**
 * optional double priorValueIndexes = 26;
 * @return {number}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getPriorvalueindexes = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 26, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setPriorvalueindexes = function (
    value
) {
    return jspb.Message.setProto3FloatField(this, 26, value);
};

/**
 * optional string indexName = 27;
 * @return {string}
 */
proto.proto.mdds.v1.MarketIndex.prototype.getIndexname = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 27, "")
    );
};

/**
 * @param {string} value
 * @return {!proto.proto.mdds.v1.MarketIndex} returns this
 */
proto.proto.mdds.v1.MarketIndex.prototype.setIndexname = function (value) {
    return jspb.Message.setProto3StringField(this, 27, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.BoardEvent.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.BoardEvent.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.BoardEvent} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.BoardEvent.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.BoardEvent}
 */
proto.proto.mdds.v1.BoardEvent.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.BoardEvent();
    return proto.proto.mdds.v1.BoardEvent.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.BoardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.BoardEvent}
 */
proto.proto.mdds.v1.BoardEvent.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.BoardEvent.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.BoardEvent.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.BoardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.BoardEvent.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.SymbolBoardEvent.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.SymbolBoardEvent.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.SymbolBoardEvent} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.SymbolBoardEvent.toObject = function (
        includeInstance,
        msg
    ) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.SymbolBoardEvent}
 */
proto.proto.mdds.v1.SymbolBoardEvent.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.SymbolBoardEvent();
    return proto.proto.mdds.v1.SymbolBoardEvent.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.SymbolBoardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.SymbolBoardEvent}
 */
proto.proto.mdds.v1.SymbolBoardEvent.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.SymbolBoardEvent.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.SymbolBoardEvent.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.SymbolBoardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.SymbolBoardEvent.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.Tick.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.Tick.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.Tick} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.Tick.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                marketid: jspb.Message.getFieldWithDefault(msg, 1, 0),
                boardid: jspb.Message.getFieldWithDefault(msg, 2, 0),
                isin: jspb.Message.getFieldWithDefault(msg, 3, ""),
                symbol: jspb.Message.getFieldWithDefault(msg, 4, ""),
                matchprice: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    5,
                    0.0
                ),
                matchqtty: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    6,
                    0.0
                ),
                sendingtime:
                    (f = msg.getSendingtime()) &&
                    proto.proto.mdds.v1.Timestamp.toObject(includeInstance, f),
                boardidoriginal: jspb.Message.getFieldWithDefault(msg, 8, 0),
                tradingsessionid: jspb.Message.getFieldWithDefault(msg, 9, 0),
                totalvolumetraded: jspb.Message.getFieldWithDefault(msg, 10, 0),
                grosstradeamount: jspb.Message.getFloatingPointFieldWithDefault(
                    msg,
                    11,
                    0.0
                ),
                side: jspb.Message.getFieldWithDefault(msg, 12, 0),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.Tick}
 */
proto.proto.mdds.v1.Tick.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.Tick();
    return proto.proto.mdds.v1.Tick.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.Tick} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.Tick}
 */
proto.proto.mdds.v1.Tick.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMarketid(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBoardid(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setIsin(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSymbol(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setMatchprice(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setMatchqtty(value);
                break;
            case 7:
                var value = new proto.proto.mdds.v1.Timestamp();
                reader.readMessage(
                    value,
                    proto.proto.mdds.v1.Timestamp.deserializeBinaryFromReader
                );
                msg.setSendingtime(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setBoardidoriginal(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTradingsessionid(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readUint64());
                msg.setTotalvolumetraded(value);
                break;
            case 11:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setGrosstradeamount(value);
                break;
            case 12:
                var value = /** @type {!proto.proto.mdds.v1.Tick.Side} */ (
                    reader.readEnum()
                );
                msg.setSide(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.Tick.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.Tick.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.Tick} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.Tick.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getMarketid();
    if (f !== 0) {
        writer.writeInt32(1, f);
    }
    f = message.getBoardid();
    if (f !== 0) {
        writer.writeInt32(2, f);
    }
    f = message.getIsin();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getSymbol();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getMatchprice();
    if (f !== 0.0) {
        writer.writeDouble(5, f);
    }
    f = message.getMatchqtty();
    if (f !== 0.0) {
        writer.writeDouble(6, f);
    }
    f = message.getSendingtime();
    if (f != null) {
        writer.writeMessage(
            7,
            f,
            proto.proto.mdds.v1.Timestamp.serializeBinaryToWriter
        );
    }
    f = message.getBoardidoriginal();
    if (f !== 0) {
        writer.writeInt32(8, f);
    }
    f = message.getTradingsessionid();
    if (f !== 0) {
        writer.writeInt32(9, f);
    }
    f = message.getTotalvolumetraded();
    if (f !== 0) {
        writer.writeUint64(10, f);
    }
    f = message.getGrosstradeamount();
    if (f !== 0.0) {
        writer.writeDouble(11, f);
    }
    f = message.getSide();
    if (f !== 0.0) {
        writer.writeEnum(12, f);
    }
};

/**
 * @enum {number}
 */
proto.proto.mdds.v1.Tick.Side = {
    SIDE_UNSPECIFIED: 0,
    SIDE_BUY: 1,
    SIDE_SELL: 2,
};

/**
 * optional int32 marketId = 1;
 * @return {number}
 */
proto.proto.mdds.v1.Tick.prototype.getMarketid = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setMarketid = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 boardId = 2;
 * @return {number}
 */
proto.proto.mdds.v1.Tick.prototype.getBoardid = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setBoardid = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string isin = 3;
 * @return {string}
 */
proto.proto.mdds.v1.Tick.prototype.getIsin = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 3, "")
    );
};

/**
 * @param {string} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setIsin = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string symbol = 4;
 * @return {string}
 */
proto.proto.mdds.v1.Tick.prototype.getSymbol = function () {
    return /** @type {string} */ (
        jspb.Message.getFieldWithDefault(this, 4, "")
    );
};

/**
 * @param {string} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setSymbol = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional double matchPrice = 5;
 * @return {number}
 */
proto.proto.mdds.v1.Tick.prototype.getMatchprice = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setMatchprice = function (value) {
    return jspb.Message.setProto3FloatField(this, 5, value);
};

/**
 * optional double matchQtty = 6;
 * @return {number}
 */
proto.proto.mdds.v1.Tick.prototype.getMatchqtty = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setMatchqtty = function (value) {
    return jspb.Message.setProto3FloatField(this, 6, value);
};

/**
 * optional Timestamp sendingTime = 7;
 * @return {?proto.proto.mdds.v1.Timestamp}
 */
proto.proto.mdds.v1.Tick.prototype.getSendingtime = function () {
    return /** @type{?proto.proto.mdds.v1.Timestamp} */ (
        jspb.Message.getWrapperField(this, proto.proto.mdds.v1.Timestamp, 7)
    );
};

/**
 * @param {?proto.proto.mdds.v1.Timestamp|undefined} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setSendingtime = function (value) {
    return jspb.Message.setWrapperField(this, 7, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.clearSendingtime = function () {
    return this.setSendingtime(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.mdds.v1.Tick.prototype.hasSendingtime = function () {
    return jspb.Message.getField(this, 7) != null;
};

/**
 * optional int32 boardIdOriginal = 8;
 * @return {number}
 */
proto.proto.mdds.v1.Tick.prototype.getBoardidoriginal = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setBoardidoriginal = function (value) {
    return jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * optional int32 tradingSessionId = 9;
 * @return {number}
 */
proto.proto.mdds.v1.Tick.prototype.getTradingsessionid = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setTradingsessionid = function (value) {
    return jspb.Message.setProto3IntField(this, 9, value);
};

/**
 * optional uint64 totalVolumeTraded = 10;
 * @return {number}
 */
proto.proto.mdds.v1.Tick.prototype.getTotalvolumetraded = function () {
    return /** @type {number} */ (
        jspb.Message.getFieldWithDefault(this, 10, 0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setTotalvolumetraded = function (value) {
    return jspb.Message.setProto3IntField(this, 10, value);
};

/**
 * optional double grossTradeAmount = 11;
 * @return {number}
 */
proto.proto.mdds.v1.Tick.prototype.getGrosstradeamount = function () {
    return /** @type {number} */ (
        jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0)
    );
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setGrosstradeamount = function (value) {
    return jspb.Message.setProto3FloatField(this, 11, value);
};

/**
 * optional Side side = 12;
 * @return {!proto.proto.mdds.v1.Tick.Side}
 */
proto.proto.mdds.v1.Tick.prototype.getSide = function () {
    return /** @type {!proto.proto.mdds.v1.Tick.Side} */ (
        jspb.Message.getFieldWithDefault(this, 12, 0)
    );
};

/**
 * @param {!proto.proto.mdds.v1.Tick.Side} value
 * @return {!proto.proto.mdds.v1.Tick} returns this
 */
proto.proto.mdds.v1.Tick.prototype.setSide = function (value) {
    return jspb.Message.setProto3EnumField(this, 12, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.TopPrice.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.TopPrice.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.TopPrice} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.TopPrice.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.TopPrice}
 */
proto.proto.mdds.v1.TopPrice.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.TopPrice();
    return proto.proto.mdds.v1.TopPrice.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.TopPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.TopPrice}
 */
proto.proto.mdds.v1.TopPrice.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.TopPrice.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.TopPrice.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.TopPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.TopPrice.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.proto.mdds.v1.Timestamp.prototype.toObject = function (
        opt_includeInstance
    ) {
        return proto.proto.mdds.v1.Timestamp.toObject(
            opt_includeInstance,
            this
        );
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.proto.mdds.v1.Timestamp} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.proto.mdds.v1.Timestamp.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                seconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
                nanos: jspb.Message.getFieldWithDefault(msg, 2, 0),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.mdds.v1.Timestamp}
 */
proto.proto.mdds.v1.Timestamp.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.proto.mdds.v1.Timestamp();
    return proto.proto.mdds.v1.Timestamp.deserializeBinaryFromReader(
        msg,
        reader
    );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.mdds.v1.Timestamp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.mdds.v1.Timestamp}
 */
proto.proto.mdds.v1.Timestamp.deserializeBinaryFromReader = function (
    msg,
    reader
) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setSeconds(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setNanos(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.mdds.v1.Timestamp.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.proto.mdds.v1.Timestamp.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.mdds.v1.Timestamp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.mdds.v1.Timestamp.serializeBinaryToWriter = function (
    message,
    writer
) {
    var f = undefined;
    f = message.getSeconds();
    if (f !== 0) {
        writer.writeInt64(1, f);
    }
    f = message.getNanos();
    if (f !== 0) {
        writer.writeInt32(2, f);
    }
};

/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.proto.mdds.v1.Timestamp.prototype.getSeconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Timestamp} returns this
 */
proto.proto.mdds.v1.Timestamp.prototype.setSeconds = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional int32 nanos = 2;
 * @return {number}
 */
proto.proto.mdds.v1.Timestamp.prototype.getNanos = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.proto.mdds.v1.Timestamp} returns this
 */
proto.proto.mdds.v1.Timestamp.prototype.setNanos = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};

export const mdds_pb = proto.proto.mdds.v1;
