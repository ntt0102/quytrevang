class Co{appName="SmartOrder";version="2.0.1";publishDate="17/03/2023";developer="Tho PS";securities="vps";domain="https://quytrevang.nguyenvanxuanphu.com";domain1="http://localhost";endpoint={socket:"https://datafeed.vps.com.vn",getConfig:"/api/smart-order/get-config",setConfig:"/api/smart-order/set-config",getChart:"/api/smart-order/get-chart",report:"/api/smart-order/report",register:"/api/auth/create-account",login:"/api/auth/login",logout:"/api/auth/logout",user:"/api/auth/user"};timeFrames=[{text:"Tick",value:0},{text:"1 min",value:1},{text:"2 min",value:2},{text:"3 min",value:3},{text:"5 min",value:5},{text:"7 min",value:7},{text:"10 min",value:10},{text:"15 min",value:15},{text:"30 min",value:30},{text:"1 day",value:1440}];chartTypes=[{text:"Nến",value:"candlestick"},{text:"Đường",value:"line"},{text:"Thanh",value:"bar"}]}
class Al{constructor(){}s=(s="success",t="message",o=!0)=>{this.notify=new Notify({status:s,text:t,autoclose:o,position:"right bottom"})};h=()=>this.notify.close()}
class St{constructor(){this.i()}i=()=>new Promise((r,e)=>{var t=indexedDB.open("vpsDB",1);t.onupgradeneeded=e=>{console.log("onupgradeneeded"),this.store=e.target.result,this.store.createObjectStore("data",{keyPath:"time"}),this.store.createObjectStore("order",{keyPath:"kind"}),this.store.createObjectStore("marker",{keyPath:"time"}),this.store.createObjectStore("line",{keyPath:"price"}),this.store.createObjectStore("ruler",{keyPath:"point"}),this.store.createObjectStore("alert",{keyPath:"price"}),r()},t.onsuccess=e=>{console.log("onsuccess"),this.store=e.target.result,r()},t.onerror=()=>{console.log("onerror"),location.reload(),e()}});g=s=>{var n=this.store;return new Promise(function(r,e){var t,o=n.transaction(s,"readonly");Array.isArray(s)?(t=s.map(e=>o.objectStore(e)).map(a),Promise.all(t).then(e=>r(e))):a(o.objectStore(s)).then(e=>r(e))});function a(o){return new Promise(function(r,e){var t=o.getAll();t.onsuccess=e=>r(e.target.result),t.onerror=()=>e()})}};s=(e,r)=>{const t=this.store.transaction(e,"readwrite").objectStore(e);Array.isArray(r)?0<r.length&&r.forEach(e=>t.put(e)):t.put(r)};c=o=>{var s=this.store;return new Promise(function(e,r){var t=s.transaction(o,"readwrite").objectStore(o).clear();t.onsuccess=()=>{e()},t.onerror=e=>{console.error("Error to empty Object Store: "+o),r()}})}}
class Ch{ch={};se={};da={};or={entry:{},tp:{},sl:{}};li=[];ma=[];ru={start:{},end:{},point:0};al=[];cr={};hsCr=!1;hsNeDa=!1;auAl=new Audio(chrome.runtime.getURL("alert.wav"));U_C="rgb(38,166,154)";D_C="rgb(239,83,80)";constructor(e,t){this.g=e,this.cb=t,this.g.tSp=this.tSp,this.auAl.loop=!0}c=()=>{this.timeFrame=this.g.timeFrame,this.chartType=this.g.chartType,console.log("this.chartType: ",this.chartType),this.cCoEl(),this.cCh(),this.cDaAr(),this.cToAr(),this.cLeAr(),this.cFrAr(),this.g.isOpeningMarket&&(this.secIn=setInterval(()=>this.inSec(this),1e3),this.minIn=setInterval(()=>this.inMin(this),6e4),this.cnSk()),window.addEventListener("resize",()=>this.eChRe(this)),window.addEventListener("keydown",e=>this.eKePr(e,this))};r=()=>{window.removeEventListener("resize",()=>this.eChRe(this)),window.removeEventListener("keydown",e=>this.eKePr(e,this)),clearInterval(this.secIn),clearInterval(this.minIn),this.conEl.remove()};cCoEl=()=>{var e=document.createElement("div");document.body.append(e),e.id="lightWeightChartContainer",e.style.width="100vw",e.style.height="100vh",e.addEventListener("contextmenu",e=>this.eChCoMe(e,this)),e.addEventListener("click",e=>this.eChCl(e,this)),this.conEl=e};cCh=()=>{var e={localization:{dateFormat:"dd/MM/yyyy",locale:"vi-VN"},rightPriceScale:{visible:!0,scaleMargins:this.g.isVolume?{top:.1,bottom:.21}:{top:.2,bottom:.1}},leftPriceScale:{visible:!1},layout:{backgroundColor:"#000000",textColor:"#CCCCCC"},grid:{vertLines:{color:"#1B1E27",style:LightweightCharts.LineStyle.Dashed},horzLines:{color:"#1B1E27",style:LightweightCharts.LineStyle.Dashed}},crosshair:{mode:LightweightCharts.CrosshairMode.Normal},timeScale:{timeVisible:!0,rightOffset:20,minBarSpacing:.1}};this.ch=LightweightCharts.createChart(this.conEl,e),this.ch.subscribeCrosshairMove(e=>this.eChCrMo(e,this)),this.ch.subscribeCustomPriceLineDragged(e=>this.ePrLiDr(e,this)),this.se.volume=this.ch.addHistogramSeries({priceScaleId:"volume",color:"#FF00FF",priceFormat:{type:"volume"},scaleMargins:{top:.8,bottom:0},visible:this.g.isVolume}),this.cPrSe(),this.ch.timeScale().fitContent()};cPrSe=()=>{switch(this.chartType){case"candlestick":this.se.price=this.ch.addCandlestickSeries({priceFormat:{minMove:.1}});break;case"line":this.se.price=this.ch.addLineSeries({color:"white",priceFormat:{minMove:.1}});break;case"bar":this.se.price=this.ch.addBarSeries({thinBars:!1,priceFormat:{minMove:.1}})}};cDaAr=()=>{var e=document.createElement("div"),t=(e.id="dataAreaDiv",e.className="area",this.conEl.append(e),document.createElement("img")),t=(t.id="spinnerImg",t.style.opacity=0,t.src=chrome.runtime.getURL("spinner.gif"),e.append(t),this.spiIm=t,document.createElement("input")),s=(t.id="dateInput",t.type="date",t.value=moment().format("YYYY-MM-DD"),t.className="command",t.title="Dữ liệu của ngày",t.addEventListener("change",e=>{e.target.value&&this.lChDa()}),e.append(t),this.datIn=t,document.createElement("select"));s.id="chartTypeSelect",s.className="command",s.title="Loại biểu đồ giá",this.g.chartTypes.forEach((e,t)=>{var i=document.createElement("option");i.value=e.value,i.text=e.text,s.appendChild(i)}),s.value=this.chartType,s.addEventListener("change",e=>{this.chartType=e.target.value,this.ch.remove(),this.cCh(),this.se.price.setData(this.da.price),this.se.volume.setData(this.da.volume),this.gToDa()}),e.append(s),this.chaTySe=s;(s=document.createElement("select")).id="timeFrameSelect",s.className="command",s.title="Khung thời gian [Ctrl+0]",this.g.timeFrames.forEach((e,t)=>{var i=document.createElement("option");i.value=e.value,i.text=e.text,s.appendChild(i)}),s.value=this.timeFrame,s.addEventListener("change",e=>{this.timeFrame=e.target.value,this.lChDa().then(()=>this.ch.timeScale().resetTimeScale())}),e.append(s),this.timFrSe=s;t=document.createElement("div");t.id="refreshButton",t.className="command fa fa-refresh",t.title="Làm mới [Ctrl+M]",t.addEventListener("click",()=>this.lChDa()),e.append(t),this.refBu=t,(t=document.createElement("div")).id="clearButton",t.className="command fa fa-trash",t.title="Xoá ngày khác [Ctrl+,]",t.addEventListener("click",()=>{this.g.s.c("data"),this.lChDa()}),e.append(t),this.cleBu=t};cToAr=()=>{var e=document.createElement("div"),t=(e.id="toolAreaDiv",e.className="area",this.conEl.append(e),document.createElement("div"));t.id="drawLineButton",t.className="command fa fa-minus",t.title="Vẽ đường ngang [Ctrl+K][Ctrl+Shift+K]",t.addEventListener("click",e=>{var t=e.target.classList.contains("selected");document.querySelectorAll("#toolAreaDiv > .command").forEach(e=>e.classList.remove("selected")),t||e.target.classList.add("selected"),e.stopPropagation()}),t.addEventListener("contextmenu",e=>{this.rToLi(),e.target.classList.remove("selected"),e.preventDefault(),e.stopPropagation()}),e.append(t),this.draLiBu=t,(t=document.createElement("div")).id="draMaBu",t.className="command fa fa-map-marker",t.title="Vẽ đánh dấu [Ctrl+L][Ctrl+Shift+L]",t.addEventListener("click",e=>{var t=e.target.classList.contains("selected");document.querySelectorAll("#toolAreaDiv > .command").forEach(e=>e.classList.remove("selected")),t||e.target.classList.add("selected"),e.stopPropagation()}),t.addEventListener("contextmenu",e=>{this.rMa(),e.target.classList.remove("selected"),e.preventDefault(),e.stopPropagation()}),e.append(t),this.draMaBu=t,(t=document.createElement("div")).id="draRuBu",t.className="command fa fa-arrows-v",t.title="Thước đo giá [Ctrl+;][Ctrl+Shift+;]",t.addEventListener("click",e=>{var t=e.target.classList.contains("selected");document.querySelectorAll("#toolAreaDiv > .command").forEach(e=>e.classList.remove("selected")),t||(e.target.classList.add("selected"),this.rRu()),e.stopPropagation()}),t.addEventListener("contextmenu",e=>{this.rRu(),e.target.classList.remove("selected"),e.preventDefault(),e.stopPropagation()}),e.append(t),this.draRuBu=t,(t=document.createElement("div")).id="draAlBu",t.className="command fa fa-bell-o",t.title="Đặt cảnh báo [Ctrl+'][Ctrl+Shift+']",t.addEventListener("click",e=>{var t=e.target.classList.contains("selected");document.querySelectorAll("#toolAreaDiv > .command").forEach(e=>e.classList.remove("selected")),t||e.target.classList.add("selected"),e.stopPropagation()}),t.addEventListener("contextmenu",e=>{this.rAl(),e.target.classList.remove("selected"),e.preventDefault(),e.stopPropagation()}),e.append(t),this.draAlBu=t};cLeAr=()=>{var e=document.createElement("div"),t=(e.id="legendAreaDiv",this.conEl.append(e),document.createElement("p"));t.id="priceLegendP",e.append(t),this.priLeP=t,(t=document.createElement("p")).id="volumeLegendP",t.style.display=this.g.isVolume?"block":"none",e.append(t),this.volLeP=t};cFrAr=()=>{var e=this.conEl,t=document.createElement("button");t.id="cancelOrderButton",t.innerText="X",t.style.display="none",t.addEventListener("click",()=>{this.cb.cPo(),this.cb.cOr(),this.tCaOrBu(!1),this.rOrLi("entry"),this.rOrLi("tp"),this.rOrLi("sl"),this.g.s.c("order")}),e.append(t),this.canOrBu=t,(t=document.createElement("button")).id="entryOrderButton",t.innerText="Entry",t.style.display="none",t.addEventListener("click",()=>{this.cb.oEnPr(this.or),this.dOrLi("entry"),this.tCaOrBu(!0),this.hOrBu()}),e.append(t),this.entOrBu=t,(t=document.createElement("button")).id="tpslOrderButton",t.innerText="TP/SL",t.style.display="none",t.addEventListener("click",()=>{this.cb.oTpPr(this.or,!0),this.dOrLi("tp"),this.cb.oSlPr(this.or,!0),this.dOrLi("sl"),this.hOrBu()}),e.append(t),this.tpsOrBu=t,(t=document.createElement("div")).id="scrollButton",t.className="command fa fa-angle-double-right",t.addEventListener("click",()=>this.ch.timeScale().scrollToRealTime()),e.append(t)};eChCoMe=(e,t)=>{t.sOrBu(),e.preventDefault()};eChCl=(e,t)=>{t.hOrBu(),t.draLiBu.classList.contains("selected")?t.dToLi():t.draMaBu.classList.contains("selected")?t.dMa():t.draRuBu.classList.contains("selected")?t.dRu():t.draAlBu.classList.contains("selected")&&t.dAl()};eChCrMo=(e,t)=>{var i,s;e.time?(i=e.seriesPrices.get(t.se.price),s=e.seriesPrices.get(t.se.volume),"line"!=t.chType&&(i=i.close),t.uLe(i,s),t.hsCr=!0,t.cr.time=e.time,t.cr.price=i):(t.hsCr=!1,t.g.isM||(t.cr.time=null,t.cr.price=null)),null!=e.point&&(t.cr.x=e.point.x,t.cr.y=e.point.y)};ePrLiDr=(e,t)=>{var i,s=e.customPriceLine,r=s.options(),a=(r.price=t.fPr(r.price),+e.fromPriceString),c=r.price;switch(r.lineType){case"order":c!=a&&(i=!1,n=t.cb.gOrPo(),"entry"==r.kind?n||(i=!0,t.or[r.kind].price=c,t.cb.oEnPr(t.or),t.dOrLi(r.kind)):0<t.or.side*n&&(i=!0,t.or[r.kind].price=c,"tp"==r.kind?t.cb.oTpPr(t.or):t.cb.oSlPr(t.or),dOrLi(r.kind)),i||(s.applyOptions({price:a}),t.g.a.s("warning","Không được thay đổi.")));break;case"line":t.g.s.s("line",{price:a,removed:!0}),t.g.s.s("line",r),t.draLiBu.classList.remove("selected");break;case"ruler":1==r.point?(t.g.s.s("ruler",r),2==t.ru.point&&(n=+(c+ +t.ru.end.options().title).toFixed(1),t.ru.end.applyOptions({price:n}),t.g.s.s("ruler",t.ru.end.options()))):(i=(c-+t.ru.start.options().price).toFixed(1),s.applyOptions({title:i}),t.g.s.s("ruler",s.options()));break;case"alert":t.auAl.pause(),t.g.s.s("alert",{price:a,removed:!0});var n=t.da.price.slice(-1)[0].value;s.applyOptions({title:n<=c?">":"<"}),t.g.s.s("alert",s.options()),t.draAlBu.classList.remove("selected")}};sOrBu=()=>{var e,t;this.cb.gOrPo()?this.or.tp.hasOwnProperty("line")||(this.tpsOrBu.style.left=+(this.cr.x+10)+"px",this.tpsOrBu.style.top=+(this.cr.y+10)+"px",this.tpsOrBu.style.display="block"):this.or.entry.hasOwnProperty("line")||(t=(e=this.cCo2Pr(this.cr.y))>=this.da.price.slice(-1)[0].value?1:-1,this.or.entry.price=e,this.or.side=t,this.entOrBu.style.left=+(this.cr.x+10)+"px",this.entOrBu.style.top=+(this.cr.y+10)+"px",this.entOrBu.style.background=0<t?"green":"red",this.entOrBu.innerText=`${0<t?"Long":"Short"} `+e,this.entOrBu.style.display="block")};hOrBu=()=>{this.entOrBu.style.display="none",this.tpsOrBu.style.display="none"};dOrLi=e=>{var t,i;switch(e){case"entry":t="silver",i=0<this.or.side?"Long":"Short";break;case"tp":t="lime",i=Math.abs(this.or.tp.price-this.or.entry.price).toFixed(1);break;case"sl":t="red",i=Math.abs(this.or.sl.price-this.or.entry.price).toFixed(1)}this.or[e].hasOwnProperty("line")?this.or[e].line.applyOptions({price:this.or[e].price,title:i}):this.or[e].line=this.se.price.createPriceLine({lineType:"order",kind:e,price:this.or[e].price,color:t,lineWidth:1,lineStyle:LightweightCharts.LineStyle.Solid,title:i,draggable:!0}),this.g.s.s("order",{kind:e,price:+this.or[e].price,side:this.or.side})};rOrLi=e=>{this.or[e].hasOwnProperty("line")&&(this.se.price.removePriceLine(this.or[e].line),delete this.or[e].line)};dToLi=()=>{const t=this.fPr(this.cCo2Pr(this.cr.y));var e=this.li.findIndex(e=>{e=e.options();return e.type=+e.price==t});-1!=e?(e=this.li.splice(e,1),this.se.price.removePriceLine(e[0]),this.g.s.s("line",{price:t,removed:!0})):(e={lineType:"line",price:t,color:"aqua",lineWidth:1,lineStyle:LightweightCharts.LineStyle.Dotted,draggable:!0},this.li.push(this.se.price.createPriceLine(e)),this.g.s.s("line",e)),this.draLiBu.classList.remove("selected")};rToLi=()=>{this.li.forEach(e=>this.se.price.removePriceLine(e)),this.li=[],this.g.s.c("line")};dMa=()=>{var e,t;this.cr.time&&((e=this.ma.filter(e=>e.time!=this.cr.time)).length==this.ma.length?(t=this.cr.y>=this.se.price.priceToCoordinate(this.cr.price),this.ma.push({time:this.cr.time,position:t?"belowBar":"aboveBar",color:t?"lime":"red",shape:t?"arrowUp":"arrowDown"})):this.ma=e,this.se.price.setMarkers(this.ma),this.g.s.clear("marker").then(()=>this.g.s.s("marker",this.ma)),this.draMaBu.classList.remove("selected"))};rMa=()=>{this.ma=[],this.se.price.setMarkers([]),this.g.s.c("marker")};dRu=()=>{var e,t=this.cCo2Pr(this.cr.y),i={lineType:"ruler",price:t,color:"yellow",lineWidth:1,lineStyle:LightweightCharts.LineStyle.Dotted,draggable:!0};0==this.ru.point?(i.point=1,i.title="0",this.ru.start=this.se.price.createPriceLine(i),this.ru.point=1,this.g.s.s("ruler",i)):1==this.ru.point&&(e=+this.ru.start.options().price,i.point=2,i.title=(t-e).toFixed(1),this.ru.end=this.se.price.createPriceLine(i),this.ru.point=2,this.g.s.s("ruler",i),this.draRuBu.classList.remove("selected"))};rRu=()=>{0<this.ru.point&&(this.se.price.removePriceLine(this.ru.start),1<this.ru.point&&this.se.price.removePriceLine(this.ru.end),this.ru={start:{},end:{},point:0},this.g.s.c("ruler"))};dAl=()=>{const t=this.fPr(this.cCo2Pr(this.cr.y));var e=this.al.findIndex(e=>{e=e.options();return e.type=+e.price==t});-1!=e?(e=this.al.splice(e,1),this.se.price.removePriceLine(e[0]),this.g.s.s("alert",{price:t,removed:!0})):(e={lineType:"alert",price:t,title:t>=this.da.original.slice(-1)[0].price?">":"<",color:"#FF00FF",lineWidth:1,lineStyle:LightweightCharts.LineStyle.Dotted,draggable:!0},this.al.push(this.se.price.createPriceLine(e)),this.g.s.s("alert",e)),this.draAlBu.classList.remove("selected"),this.auAl.pause()};rAl=()=>{this.al.forEach(e=>this.se.price.removePriceLine(e)),this.al=[],this.g.s.c("alert"),this.auAl.pause()};tCaOrBu=e=>{e?(this.canOrBu.style.display="block",this.canOrBu.style.background=0<this.or.side?"green":"red"):this.canOrBu.style.display="none"};uLe=(e,t)=>{e&&(this.priLeP.innerText=e),t&&(this.volLeP.innerText=t.toLocaleString("en-US"))};cCo2Pr=e=>this.fPr(this.se.price.cCo2Pr(e));fPr=e=>+e.toFixed(1);lChDa=()=>new Promise(async(e,t)=>{this.tSp(!0);for(var i=await this.gSeDa();;){this.hsNeDa=!1;var s=await this.g.s.g("data");const r=new Set(i.map(e=>e.time)),a=[...i,...s.filter(e=>!r.has(e.time))].sort((e,t)=>e.time-t.time);if(!this.hsNeDa){this.g.s.c("data").then(()=>this.g.s.s("data",a)),this.da=a.reduce((e,t)=>this.cChDa(e,t),{original:[],price:[],volume:[]}),console.log("data",this.da),this.se.price.setData(this.da.price),this.se.volume.setData(this.da.volume),!this.hsCr&&this.da.original.length&&this.uLe(this.da.price.slice(-1)[0].value,this.da.volume.slice(-1)[0].value),this.tSp(!1),e();break}}});uChDa=e=>{this.hsNeDa=!0,this.da=this.cChDa(this.da,e);var t=this.da.price.slice(-1)[0],i=this.da.volume.slice(-1)[0];0<this.timeFrame?(this.se.price.setData(this.da.price),this.se.volume.setData(this.da.volume)):(this.se.price.update(t),this.se.volume.update(i)),this.hsCr||this.uLe(t.value,i.value),this.g.s.s("data",e),this.da.original.push(e)};gSeDa=()=>new Promise(async(e,t)=>{for(var i={date:this.datIn.value},s=this.g.domain+this.g.endpoint.getChart;;)try{e(await(await fetch(s,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.g.accessToken},body:JSON.stringify(i)})).json());break}catch(e){continue}});cChDa=(e,t)=>{var i,s,r,a,c=t.time+25200,n=this.U_C,l=t.volume,h=0,o=0,d=0;return 0<this.timeFrame&&(i=60*this.timeFrame,s=Math.floor(c/i),r=!1,(r=e.price.length&&(a=e.price.slice(-1)[0].time,s==Math.floor(a/i))?!0:r)?(h=(a=e.price.pop()).open,o=a.high,d=a.low,t.price<d&&(d=t.price),t.price>o&&(o=t.price),l+=e.volume.pop().value,n=t.price>=h?this.U_C:this.D_C):(h=t.price,o=t.price,d=t.price),c=s*i),e.original.push(t),e.price.push({time:c,value:t.price,open:h,high:o,low:d,close:t.price}),e.volume.push({time:c,value:l,color:n}),e};gToDa=()=>new Promise(async(e,t)=>{(await this.g.s.g("order")).map(e=>{this.or.side=e.side,this.or[e.kind].price=e.price,this.dOrLi(e.kind),"entry"==e.kind&&(this.cb.gOrPo()&&this.or.entry.line.applyOptions({draggable:!1}),this.tCaOrBu(!0))});(await this.g.s.g("line")).forEach(e=>{e.removed||this.li.push(this.se.price.createPriceLine(e))}),this.ma=await this.g.s.g("marker"),this.se.price.setMarkers(this.ma);var i=await this.g.s.g("ruler");2==i.length&&i.forEach(e=>{this.ru.point=2,1==e.point?this.ru.start=this.se.price.createPriceLine(e):this.ru.end=this.se.price.createPriceLine(e)}),(await this.g.s.g("alert")).forEach(e=>{e.removed||this.al.push(this.se.price.createPriceLine(e))}),e()});cnSk=()=>{var t=this,e={action:"join",list:t.g.symbol},i=io(t.g.endpoint.socket);i.on("connect",()=>i.emit("regs",JSON.stringify(e))),i.on("reconnect",()=>{t.lChDa(),t.isInSe()&&i.emit("regs",JSON.stringify(e))}),i.on("stockps",e=>{3220==e.id&&(e={time:moment(moment().format("YYYY-MM-DD")+" "+e.time).unix(),price:e.lastPrice,volume:e.lastVol},t.uChDa(e))})};inSec=i=>{i.cb.gOrPo()?i.or.entry.hasOwnProperty("line")&&!i.or.tp.hasOwnProperty("line")&&(i.cb.oTpPr(i.or,!0),i.dOrLi("tp"),i.cb.oSlPr(i.or,!0),i.dOrLi("sl"),i.or.entry.line.applyOptions({draggable:!1}),i.g.a.s("success","Đã mở vị thế.")):i.or.tp.hasOwnProperty("line")&&(i.cb.cOr(),i.tCaOrBu(!1),i.rOrLi("entry"),i.rOrLi("tp"),i.rOrLi("sl"),i.g.s.c("order"),i.g.a.s("success","Đã đóng vị thế.")),i.auAl.paused&&i.al.forEach(e=>{var t,e=e.options();!e.removed&&i.da.original.length&&(t=i.da.original.slice(-1)[0].price,">"==e.title&&t>=e.price||"<"==e.title&&t<=e.price)&&i.auAl.play()}),moment().unix()==i.g.time.start&&i.cnSk()};inMin=e=>{e.isInSe()&&e.lChDa()};isInSe=()=>moment().unix()>=self.g.time.start&&moment().unix()<=self.g.time.end;tVo=e=>{this.se.volume.applyOptions({visible:e}),this.volLeP.style.display=e?"block":"none",this.ch.applyOptions({rightPriceScale:{scaleMargins:e?{top:.1,bottom:.21}:{top:.2,bottom:.1}}})};tSp=e=>{this.spiIm.style.opacity=e?1:0};eChRe=e=>{e.ch.resize(window.innerWidth,window.innerHeight)};eKePr=(e,t)=>{try{if(e.ctrlKey||e.metaKey)if(e.shiftKey)39==e.keyCode&&t.ch.timeScale().scrollToRealTime();else switch(e.keyCode){case 38:t.ch.timeScale().applyOptions({barSpacing:t.ch.options().timeScale.barSpacing+.1});break;case 40:options.timeScale.barSpacing>options.timeScale.minBarSpacing&&t.ch.timeScale().applyOptions({barSpacing:t.ch.options().timeScale.barSpacing-.1});break;case 37:t.ch.timeScale().scrollToPosition(t.ch.timeScale().scrollPosition()-10);break;case 39:t.ch.timeScale().scrollToPosition(t.ch.timeScale().scrollPosition()+10);break;case 75:t.draLiBu.click();break;case 76:t.draMaBu.click();break;case 186:t.draRuBu.click();break;case 222:t.draAlBu.click();break;case 96:t.timFrSe.value=t.g.timeFrames[0].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 97:t.timFrSe.value=t.g.timeFrames[1].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 98:t.timFrSe.value=t.g.timeFrames[2].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 99:t.timFrSe.value=t.g.timeFrames[3].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 100:t.timFrSe.value=t.g.timeFrames[4].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 101:t.timFrSe.value=t.g.timeFrames[5].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 102:t.timFrSe.value=t.g.timeFrames[6].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 103:t.timFrSe.value=t.g.timeFrames[7].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 104:t.timFrSe.value=t.g.timeFrames[8].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 105:t.timFrSe.value=t.g.timeFrames[9].value,t.timFrSe.dispatchEvent(new Event("change"));break;case 77:t.refBu.click();break;case 188:t.cleBu.click()}}catch(e){}}}
class Po{T_K="SOAT";constructor(e,t){this.g=e,this.cb=t,this.cCoEl(),this.gDeId()}cCoEl=()=>{var e=document.createElement("div");e.id="optionViewContainer",document.body.append(e),this.conEl=e};cNoLoEl=()=>{this.cHeCo(),this.cLoCo(),this.cReCo()};cHeCo=()=>{var e=document.createElement("div"),t=(e.id="hearderContainer",this.conEl.append(e),this.heaCo=e,document.createElement("label"));e.append(t),t.className="title",t.innerText=this.g.appName};cLoCo=()=>{var e=document.createElement("div"),t=(e.id="loginContainer",e.className="section",e.style.display=this.g.isLi?"none":"block",this.conEl.append(e),this.logCo=e,document.createElement("form")),e=(e.append(t),t.id="loginForm",t.className="wrapper",t.addEventListener("submit",e=>this.lIn(e,this)),document.createElement("label")),e=(t.append(e),e.className="invalid",this.logMe=e,document.createElement("input")),n=(t.append(e),e.id="loginUsername",e.type="text",e.placeholder="Email hoặc Số điện thoại",e.required=!0,this.logUs=e,this.g.isLi||this.logUs.focus(),e=document.createElement("input"),t.append(e),e.id="loginPassword",e.type="password",e.placeholder="Mật khẩu",e.required=!0,this.logPa=e,document.createElement("div")),e=(t.append(n),e=document.createElement("input"),n.append(e),e.id="loginRememberMe",e.type="checkbox",this.logReMe=e,document.createElement("label")),n=(n.append(e),e.setAttribute("for","loginRememberMe"),e.innerHTML="&ensp;Lưu đăng nhập",document.createElement("button")),e=(t.append(n),n.id="loginSubmit",n.innerText="ĐĂNG NHẬP",n.type="submit",this.logSu=n,document.createElement("div")),n=(e.className="link-group",t.append(e),document.createElement("label")),n=(e.append(n),n.className="link",n.innerText="Đăng ký",n.addEventListener("click",e=>{this.logCo.style.display="none",this.regCo.style.display="block",this.regNa.focus()}),document.createElement("label"));e.append(n),n.className="link",n.innerText="Trang chủ",n.addEventListener("click",()=>window.open("https://www.w3schools.com"))};cReCo=()=>{var e=document.createElement("div"),t=(e.id="registerContainer",e.className="section",e.style.display="none",this.conEl.append(e),this.regCo=e,document.createElement("form")),e=(e.append(t),t.id="registerForm",t.className="wrapper",t.addEventListener("submit",e=>this.rAc(e,this)),document.createElement("label")),e=(t.append(e),e.className="invalid",this.regMe=e,document.createElement("input")),e=(t.append(e),e.id="registerName",e.type="text",e.placeholder="Tên",e.required=!0,this.regNa=e,e=document.createElement("input"),t.append(e),e.id="registerEmail",e.type="email",e.placeholder="Email",e.required=!0,this.regEm=e,e=document.createElement("input"),t.append(e),e.id="registerPhone",e.type="text",e.placeholder="Số điện thoại",e.required=!0,e.setAttribute("maxlength",10),e.setAttribute("pattern","[0-9]+"),this.regPh=e,e=document.createElement("input"),t.append(e),e.id="registerPassword",e.type="password",e.placeholder="Mật khẩu",e.required=!0,this.regPa=e,e=document.createElement("input"),t.append(e),e.id="registerConfirmPassword",e.type="password",e.placeholder="Xác nhận mật khẩu",e.required=!0,this.regCoPa=e,document.createElement("button")),e=(t.append(e),e.id="registerSubmit",e.innerText="ĐĂNG KÝ",e.type="submit",this.regSu=e,document.createElement("div")),t=(e.className="link-group",t.append(e),document.createElement("label")),t=(e.append(t),t.className="link",t.innerText="Đăng nhập",t.addEventListener("click",e=>{this.regCo.style.display="none",this.logCo.style.display="block",this.logUs.focus()}),document.createElement("label"));e.append(t),t.className="link",t.innerText="Trang chủ",t.addEventListener("click",()=>window.open("https://www.w3schools.com"))};cLoEl=()=>{this.cInCo(),this.cOpCo(),this.cAbCo(),this.logCo.style.display="none",this.regCo.style.display="none",this.infCo.style.display="block"};cInCo=()=>{{var e=document.createElement("div"),t=(e.id="infoContainer",e.className="section",e.style.display=this.g.isLi?"block":"none",this.conEl.append(e),this.infCo=e,document.createElement("div"));t.className="wrapper",e.append(t);var e,n=((e=document.createElement("div")).className="list",t.append(e),document.createElement("label")),a=(e.append(n),n.className="title",n.innerText="Thông tin tài khoản:",document.createElement("div")),i=(a.className="item",e.append(a),document.createElement("span")),s=(i.innerText="Tên:",a.append(i),document.createElement("span")),a,i,s,a,i,s,a,i;s.innerText=this.g.user.name,a.append(s),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Email:",a.append(i),(s=document.createElement("span")).innerText=this.g.user.email,a.append(s),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Điện thoại:",a.append(i),(s=document.createElement("span")).innerText=this.g.user.phone,a.append(s),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Ngày đăng ký:",a.append(i)}(s=document.createElement("span")).innerText=moment(this.g.registerDate).format("DD/MM/YYYY"),a.append(s);(e=document.createElement("div")).className="list",t.append(e),n=document.createElement("label");e.append(n),n.className="title",n.innerText="Thông tin gói dịch vụ:",(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Ngày bắt đầu:",a.append(i),(s=document.createElement("span")).innerText=moment(this.g.startDate).format("DD/MM/YYYY"),a.append(s),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Ngày hết hạn:",a.append(i),(s=document.createElement("span")).innerText=moment(this.g.expiresDate).format("DD/MM/YYYY"),a.append(s),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Số lượng thiết bị:",a.append(i);(s=document.createElement("span")).innerText=this.g.deviceLimit,a.append(s);n=document.createElement("button"),t.append(n),n.innerText="ĐĂNG XUẤT",n.addEventListener("click",()=>this.lOu(this)),e=document.createElement("div"),e.className="link-group",t.append(e),i=document.createElement("label"),e.append(i),i.className="link",i.innerText="Cài đặt",i.addEventListener("click",e=>{this.infCo.style.display="none",this.optCo.style.display="block"}),i=document.createElement("label");e.append(i),i.className="link",i.innerText="Cập nhật",i.addEventListener("click",e=>{this.infCo.style.display="none",this.aboCo.style.display="block"})};cOpCo=()=>{var e=document.createElement("div"),t=(e.id="optionContainer",e.className="section",e.style.display="none",this.conEl.append(e),this.optCo=e,document.createElement("form")),e=(e.append(t),t.id="optionForm",t.className="wrapper",t.addEventListener("submit",e=>this.sSeCo(e,this).then(e=>{this.optSu.innerText="LƯU CÀI ĐẶT",this.optSu.disabled=!1,e?this.g.a.s("success","Lưu cài đặt thành công"):this.g.a.s("error","Lưu cài đặt thất bại"),this.cb.tVo(this.isVolCh.checked)})),document.createElement("div")),n=(e.className="list",t.append(e),document.createElement("div")),a=(n.className="item",e.append(n),document.createElement("span")),i=(a.innerText="Khung thời gian:",n.append(a),document.createElement("select")),s=(i.style.width="69px",this.g.timeFrames.forEach((e,t)=>{var n=document.createElement("option");n.value=e.value,n.text=e.text,i.appendChild(n)}),i.value=this.g.timeFrame,this.timFrSe=i,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Loại biểu đồ:",n.append(a),i=document.createElement("select"),this.g.chartTypes.forEach((e,t)=>{var n=document.createElement("option");n.value=e.value,n.text=e.text,i.appendChild(n)}),i.value=this.g.chartType,this.chaTySe=i,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Số hợp đồng:",n.append(a),document.createElement("input"));s.type="number",s.style.width="69px",s.style.height="21px",s.value=this.g.contractNumber,this.conNuIn=s,n.append(s),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Điểm chốt lời:",n.append(a),(s=document.createElement("input")).type="number",s.style.width="69px",s.style.height="21px",s.value=this.g.takeProfit,this.takPrIn=s,n.append(s),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Điểm cắt lỗ:",n.append(a);(s=document.createElement("input")).type="number",s.style.width="69px",s.style.height="21px",s.value=this.g.stopLoss,this.stoLoIn=s,n.append(s),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Hiển thị biểu đồ khối lượng:",n.append(a),(s=document.createElement("input")).type="checkbox",s.style.width="17px",s.checked=!!this.g.isVolume,this.isVolCh=s,n.append(s),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Mở biểu đồ khi khởi động:",n.append(a),(s=document.createElement("input")).type="checkbox",s.style.width="17px",s.checked=!!this.g.isViewChart,this.isVieChCh=s,n.append(s);e=document.createElement("button"),t.append(e),e.id="optionSubmit",e.innerText="LƯU CÀI ĐẶT",e.type="submit",this.optSu=e,a=document.createElement("label");t.append(a),a.className="link",a.innerText="Trở về",a.addEventListener("click",e=>{this.optCo.style.display="none",this.infCo.style.display="block"})};cAbCo=()=>{{var e=document.createElement("div"),t=(e.id="aboutContainer",e.className="section",e.style.display="none",this.conEl.append(e),this.aboCo=e,document.createElement("div"));t.className="wrapper",e.append(t);var e,n=((e=document.createElement("div")).className="list",t.append(e),document.createElement("div")),a=(n.className="item",e.append(n),document.createElement("span")),i=(a.innerText="Phiên bản:",n.append(a),document.createElement("span")),n;i.innerText=this.g.version,n.append(i),(n=document.createElement("div")).className="item",e.append(n)}(a=document.createElement("span")).innerText="Ngày xuất bản:",n.append(a),(i=document.createElement("span")).innerText=this.g.publishDate,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Nhà phát triển:",n.append(a),(i=document.createElement("span")).innerText=this.g.developer,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Số điện thoại:",n.append(a),(i=document.createElement("span")).innerText=this.g.contact.phone,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Email:",n.append(a);(i=document.createElement("span")).innerText=this.g.contact.email,n.append(i),this.g.version!=this.g.latestVersion&&((e=document.createElement("div")).className="download",t.append(e),a=document.createElement("label"),e.append(a),a.innerHTML="Đã có phiên bản cập nhật mới.",n=document.createElement("button"),e.append(n),n.innerText="TẢI XUỐNG",n.addEventListener("click",e=>this.lOu(e,this)));i=document.createElement("div"),i.className="link-group",t.append(i),a=document.createElement("label"),i.append(a),a.className="link",a.innerText="Trở về",a.addEventListener("click",e=>{this.aboCo.style.display="none",this.infCo.style.display="block"}),a=document.createElement("label");i.append(a),a.className="link",a.innerText="Trang chủ",a.addEventListener("click",()=>window.open("https://www.w3schools.com"))};rLoEl=()=>{this.infCo.remove(),this.optCo.remove(),this.aboCo.remove()};rAc=(e,t)=>{if(e.preventDefault(),t.regCoPa.value!=t.regPa.value)return!(t.regMe.innerText="Mật khẩu không khớp");t.regSu.innerText="Đang đăng ký...",t.regSu.disabled=!0,t.regMe.innerText="";var e={name:t.regNa.value,email:t.regEm.value,phone:t.regPh.value,password:t.regPa.value,deviceId:t.g.deviceId,chanel:t.g.appName},n=this.g.domain+this.g.endpoint.register;fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)}).then(async e=>{t.regSu.innerText="ĐĂNG KÝ",t.regSu.disabled=!1,e.isOk?(t.sTo(e.token),t.g.accessToken=e.token.access_token,t.g.user=e.user,await t.cb.loggedin(),t.g.a.s("success","Đăng ký thành công"),t.regNa.value="",t.regEm.value="",t.regPh.value="",t.regPa.value="",t.regCoPa.value=""):"emailExist"==e.message?t.regMe.innerText="Emai này đã đăng ký":"phoneExist"==e.message&&(t.regMe.innerText="Số điện thoại này đã đăng ký")}).catch(e=>{console.log(e),t.g.a.s("error","Đăng ký lỗi"),t.regSu.innerText="ĐĂNG KÝ",t.regSu.disabled=!1})};lIn=(e,t)=>{e.preventDefault(),t.logSu.innerText="Đang đăng nhập...",t.logSu.disabled=!0,t.logMe.innerText="";var e={username:t.logUs.value,password:t.logPa.value,rememberMe:t.logReMe.value,deviceId:t.g.deviceId,chanel:t.g.appName},n=this.g.domain+this.g.endpoint.login;fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)}).then(async e=>{t.logSu.innerText="ĐĂNG NHẬP",t.logSu.disabled=!1,e.isOk?(t.sTo(e.token),t.g.accessToken=e.token.access_token,t.g.user=e.user,t.logUs.value="",t.logPa.value="",await t.cb.loggedin()):"unauthorized"==e.message?t.logMe.innerText="Sai thông tin đăng nhập":"unsetup"==e.message?t.logMe.innerText="Lỗi khởi tạo tài khoản":"expired"==e.message?t.logMe.innerText="Quá hạn sử dụng dịch vụ":"deviceLimit"==e.message&&(t.logMe.innerText="Quá giới hạn thiết bị")}).catch(e=>{t.g.a.s("error","Đăng nhập lỗi"),t.logSu.innerText="ĐĂNG NHẬP",t.logSu.disabled=!1})};lOu=e=>{var t=this.g.domain+this.g.endpoint.logout;fetch(t,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+e.g.accessToken}}).then(()=>{e.rTo(),e.infCo.style.display="none",e.logCo.style.display="block",e.cb.loggedout(),e.logUs.focus()})};gU=()=>new Promise(t=>{var e;this.g.accessToken=this.gTo(),this.g.accessToken?(e=this.g.domain+this.g.endpoint.user,fetch(e,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.g.accessToken}}).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)}).then(e=>{console.log("gU: ",e),this.g.user=e,this.g.isLi=!!e.code,t()}).catch(e=>t())):t()});gSeCo=()=>new Promise((n,e)=>{var t=this.g.domain+this.g.endpoint.getConfig;fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.g.accessToken},body:JSON.stringify({securities:this.g.securities})}).then(e=>e.json()).then(e=>{console.log("serverConfig",e);for(const t in e)this.g[t]=e[t];n()}).catch(e=>{console.log(e),confirm("Get server config error. Refresh now?")&&location.reload()})});sSeCo=(e,a)=>(e.preventDefault(),new Promise(t=>{a.optSu.innerText="Đang lưu cài đặt...",a.optSu.disabled=!0;var e={timeFrame:+a.timFrSe.value,chartType:a.chaTySe.value,contractNumber:+a.conNuIn.value,takeProfit:+a.takPrIn.value,stopLoss:+a.stoLoIn.value,isVolume:a.isVolCh.checked,isViewChart:a.isVieChCh.checked},n=(console.log("data:",e),this.g.domain+this.g.endpoint.setConfig);fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.g.accessToken},body:JSON.stringify(e)}).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)}).then(async e=>{console.log("setConfig: ",e),t(e.isOk)}).catch(e=>t(!1))}));sTo=e=>localStorage.setItem(this.T_K,JSON.stringify(e));rTo=()=>localStorage.removeItem(this.T_K);gTo=()=>{var e=JSON.parse(localStorage.getItem(this.T_K));return!(!e||!moment().isBefore(e.expires_at))&&e.access_token};gDeId=()=>new Promise(t=>{FingerprintJS.load().then(e=>e.get()).then(e=>{this.g.deviceId=e.visitorId,t()})});t=()=>{this.conEl.classList.contains("show")?this.conEl.classList.remove("show"):this.conEl.classList.add("show")}}
class Me{constructor(t,e){this.g=t,this.cb=e,this.cCoEl(),this.cNoLoEl()}cCoEl=()=>{var t=document.createElement("div");t.id="menuContainer",document.body.append(t),this.conEl=t};cLoEl=()=>{var t=document.createElement("button");t.id="lightWeightButton",t.classList="fa fa-line-chart",t.title="LightWeight Chart",t.addEventListener("click",this.cb.toggleLightWeightChart),this.conEl.prepend(t),this.ligWeBu=t,(t=document.createElement("button")).id="tradingViewButton",t.classList="fa fa-bar-chart",t.title="TradingView Chart",t.addEventListener("click",this.cb.toggleTradingViewChart),this.conEl.prepend(t),this.traViBu=t,this.g.isOpeningMarket&&((t=document.createElement("button")).id="reportButton",t.classList="fa fa-flag-checkered",t.title="Report",t.addEventListener("click",()=>this.rTrRe(this)),this.conEl.append(t),this.repBu=t),this.interval=setInterval(()=>{this.bLiWeBu(this),moment().unix()==this.g.time.end&&this.rTrRe(this)},1e3)};rLoEl=()=>{this.traViBu.remove(),this.ligWeBu.remove(),this.repBu.remove(),clearInterval(this.interval)};cNoLoEl=()=>{var t=document.createElement("button");t.id="settingButton",t.classList="fa fa-cog",t.title="Cài đặt",t.addEventListener("click",this.cb.togglePopup),this.conEl.append(t),this.setBu=t};bLiWeBu=t=>{t.ligWeBu.classList.contains("dark")?t.ligWeBu.classList.remove("dark"):t.ligWeBu.classList.add("dark")};rTrRe=e=>{var t,i;e.g.isOpeningMarket&&!e.g.isReportedResult&&(e.g.isReportedResult=!0,e.g.tSp(!0),t=e.g.domain+e.g.endpoint.report,i=e.cb.getReportData(),fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then(t=>{if(t.ok)return t.json();throw new Error(t.statusText)}).then(t=>{e.g.isReportedResult=t.isOk,t.isOk&&(t.isExecuted?e.g.a.s("success","Báo cáo đã gửi thành công."):e.g.a.s("warning","Đã gửi báo cáo")),e.g.tSp(!1)}).catch(t=>{e.g.isReportedResult=!1,e.g.a.s("error","Gửi báo cáo thất bại"),e.g.tSp(!1)}))};dDe=()=>{this.g.isLi?this.g.isViewChart&&this.ligWeBu.click():this.setBu.click()}}
class So{constructor(){this.g=new Co,console.log("ggggggggg: ",this.g),this.g.a=new Al,this.g.s=new St,this.g.isM=navigator.userAgentData.mobile,this.c=new Ch(this.g,{gOrPo:this.gOrPoCb,cPo:this.cPoCb,oEnPr:this.oEnPrCb,oTpPr:this.oTpPrCb,oSlPr:this.oSlPrCb,cOr:this.cOrCb}),this.p=new Po(this.g,{loggedin:this.liCb,loggedout:this.loCb,tVo:this.c.tVo}),this.m=new Me(this.g,{toggleTradingViewChart:this.tTrViCb,toggleLightWeightChart:this.tLiWeCb,togglePopup:this.p.t,getReportData:this.gReDaCb}),this.rFuEv()}init=async()=>{this.g.a.s("warning","Đang khởi tạo SmartOrder . . .",!1),this.p.cNoLoEl(),await this.p.gU(),this.g.isLi&&(await this.p.gSeCo(),console.log("g-server: ",this.g),await this.liCb(),document.getElementById("sohopdong").value=this.g.contractNumber,document.getElementById("right_price").value="MTL"),this.m.dDe(),this.g.a.h()};liCb=async()=>{this.c.c(),await this.c.lChDa(),await this.c.gToDa(),this.p.cLoEl(),this.m.cLoEl(),this.c.cnSk()};loCb=()=>{this.m.rLoEl(),this.p.rLoEl(),this.c.r()};tTrViCb=()=>{var e=document.getElementById("left_order_type"),t=document.getElementById("right_order_type"),n=document.querySelector("#mainFooter .foot_tab:nth-child(1)"),i=document.querySelector("#mainFooter .foot_tab:nth-child(2)");n.classList.remove("fa","fa-check-circle"),i.classList.remove("fa","fa-question-circle"),document.body.classList.contains("tradingview-chart")?(document.body.classList.remove("tradingview-chart"),document.body.classList.remove("full-chart"),e.innerText="Lệnh thường",t.innerText="Lệnh điều kiện",n.innerText="DANH SÁCH LỆNH",i.innerText="DANH SÁCH LỆNH ĐIỀU KIỆN"):(document.body.classList.add("tradingview-chart"),document.body.classList.add("full-chart"),document.body.classList.remove("lightweight-chart"),e.innerText="LT",t.innerText="LĐK",n.innerText="LỆNH THƯỜNG",i.innerText="L. ĐIỀU KIỆN")};tLiWeCb=()=>{var e=document.getElementById("left_order_type"),t=document.getElementById("right_order_type"),n=document.querySelector("#mainFooter .foot_tab:nth-child(1)"),i=document.querySelector("#mainFooter .foot_tab:nth-child(2)");document.body.classList.contains("lightweight-chart")?(document.body.classList.remove("lightweight-chart"),document.body.classList.remove("full-chart"),e.innerText="Lệnh thường",t.innerText="Lệnh điều kiện",n.classList.remove("fa","fa-check-circle"),n.innerText="DANH SÁCH LỆNH",i.classList.remove("fa","fa-question-circle"),i.innerText="DANH SÁCH LỆNH ĐIỀU KIỆN"):(document.body.classList.add("lightweight-chart"),document.body.classList.add("full-chart"),document.body.classList.remove("tradingview-chart"),e.innerText="LT",t.innerText="LĐK",n.classList.add("fa","fa-check-circle"),n.innerText="",i.classList.add("fa","fa-question-circle"),i.innerText="")};gReDaCb=()=>({revenue:+document.getElementById("vmAccInfo").innerText.replaceAll(",",""),fees:+document.getElementById("othersAccInfo").innerText.replaceAll(",","")});gOrPoCb=()=>{var e=document.querySelector(`#danhmuc_${this.g.symbol} > td:nth-child(2)`);return!e||(e=e.innerText,isNaN(e))?0:+e};cPoCb=()=>{var e=this.gOrPoCb();e&&(document.getElementById("select_normal_order_wrapper").click(),document.getElementById("right_price").value="MTL",document.getElementById("sohopdong").value=Math.abs(e),document.getElementById("btn_"+(0<e?"short":"long")).click())};oEnPrCb=e=>{this.cSc("onCancelAllOrderPending('order_condition')"),document.getElementById("select_condition_order_wrapper").click(),document.getElementById("right_stopOrderIndex").value=e.entry.price,document.getElementById("right_price").value="MTL",document.getElementById("right_selStopOrderType").value=0<e.side?"SOL":"SOU",setTimeout(()=>{document.getElementById("btn_"+(0<e.side?"long":"short")).click()},1e3)};oTpPrCb=(e,t=!1)=>{this.cSc("onCancelAllOrderPending('order')"),t&&(e.tp.price=+e.entry.price+e.side*this.g.takeProfit),setTimeout(()=>{document.getElementById("select_normal_order_wrapper").click(),document.getElementById("right_price").value=e.tp.price,document.getElementById("btn_"+(e.side<0?"long":"short")).click()},1e3)};oSlPrCb=(e,t=!1)=>{this.cSc("onCancelAllOrderPending('order_condition')"),t&&(e.sl.price=+e.entry.price-e.side*this.g.stopLoss),setTimeout(()=>{document.getElementById("select_condition_order_wrapper").click(),document.getElementById("right_stopOrderIndex").value=e.sl.price,document.getElementById("right_price").value="MTL",document.getElementById("right_selStopOrderType").value=e.side<0?"SOL":"SOU",document.getElementById("btn_"+(e.side<0?"long":"short")).click()},1e3)};cOrCb=()=>{this.cSc("onCancelAllOrderPending('order_condition')"),this.cSc("onCancelAllOrderPending('order')")};cSc=e=>{var t=document.createElement("button");t.setAttribute("onclick",e),t.click()};rFuEv=()=>{document.querySelector(".timeStamp").addEventListener("dblclick",()=>{document.fullscreenElement?document.exitFullscreen():document.documentElement.requestFullscreen()})}}var so=new So;so.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
