class Alert{constructor(){}show=(t="success",s="message",o=!0)=>{this.notify=new Notify({status:t,text:s,autoclose:o,position:"right bottom"})};hide=()=>this.notify.close()}
class Store{constructor(){this.create()}create=()=>new Promise((r,e)=>{var t=indexedDB.open("vpsDB",1);t.onupgradeneeded=e=>{console.log("onupgradeneeded"),this.store=e.target.result,this.store.createObjectStore("data",{keyPath:"time"}),this.store.createObjectStore("order",{keyPath:"kind"}),this.store.createObjectStore("marker",{keyPath:"time"}),this.store.createObjectStore("line",{keyPath:"price"}),this.store.createObjectStore("ruler",{keyPath:"point"}),this.store.createObjectStore("alert",{keyPath:"price"}),r()},t.onsuccess=e=>{console.log("onsuccess"),this.store=e.target.result,r()},t.onerror=()=>{console.log("onerror"),location.reload(),e()}});get=s=>{var a=this.store;return new Promise(function(r,e){var t,o=a.transaction(s,"readonly");Array.isArray(s)?(t=s.map(e=>o.objectStore(e)).map(n),Promise.all(t).then(e=>r(e))):n(o.objectStore(s)).then(e=>r(e))});function n(o){return new Promise(function(r,e){var t=o.getAll();t.onsuccess=e=>r(e.target.result),t.onerror=()=>e()})}};set=(e,r)=>{const t=this.store.transaction(e,"readwrite").objectStore(e);Array.isArray(r)?0<r.length&&r.forEach(e=>t.put(e)):t.put(r)};clear=o=>{var s=this.store;return new Promise(function(e,r){var t=s.transaction(o,"readwrite").objectStore(o).clear();t.onsuccess=()=>{e()},t.onerror=e=>{console.error("Error to empty Object Store: "+o),r()}})}}
class Chart{chart={};series={};data={};order={entry:{},tp:{},sl:{}};lines=[];markers=[];ruler={start:{},end:{},point:0};alerts=[];crosshair={};hasCrosshair=!1;hasNewData=!1;alertAudio=new Audio(chrome.runtime.getURL("alert.wav"));constructor(e,t){this.global=e,this.callback=t,this.timeFrame=e.timeFrame,this.global.toggleSpinner=this.toggleSpinner,this.alertAudio.loop=!0}createChart=()=>{this.createLightWeightChart(),this.createDataArea(),this.createToolArea(),this.createLegendArea(),this.createFreeArea(),this.secInterval=setInterval(()=>this.intervalHandler(this),1e3),this.minInterval=setInterval(()=>this.refreshDataInSession(this),6e4),window.addEventListener("resize",()=>this.resize(this)),window.addEventListener("keydown",e=>this.keyEvent(e,this))};removeChart=()=>{window.removeEventListener("resize",()=>this.resize(this)),window.removeEventListener("keydown",e=>this.keyEvent(e,this)),clearInterval(this.secInterval),clearInterval(this.minInterval),this.containerElement.remove()};createLightWeightChart=()=>{var e={localization:{dateFormat:"dd/MM/yyyy",locale:"vi-VN"},rightPriceScale:{visible:!0},leftPriceScale:{visible:!1},layout:{backgroundColor:"#181C27",textColor:"#A2A6AE"},grid:{vertLines:{color:"#30333F"},horzLines:{color:"#30333F"}},crosshair:{mode:LightweightCharts.CrosshairMode.Normal},timeScale:{timeVisible:!0,rightOffset:20,minBarSpacing:.1}},t=document.createElement("div");document.body.append(t),t.id="lightWeightChartContainer",t.style.width="100vw",t.style.height="100vh",t.addEventListener("contextmenu",e=>this.chartContextmenu(e,this)),t.addEventListener("click",e=>this.chartClick(e,this)),this.chart=LightweightCharts.createChart(t,e),this.chart.subscribeCrosshairMove(e=>this.crosshairMove(e,this)),this.chart.subscribeCustomPriceLineDragged(e=>this.priceLineDrag(e,this)),this.series.volume=this.chart.addLineSeries({priceScaleId:"volume",color:"#FF00FF",priceFormat:{minMove:1},scaleMargins:{top:.6,bottom:0},visible:!1}),this.series.price=this.chart.addLineSeries({color:"white",priceFormat:{minMove:.1}}),this.chart.timeScale().fitContent(),this.containerElement=t};createDataArea=()=>{var e=document.createElement("div"),t=(e.id="dataAreaDiv",e.className="area",this.containerElement.append(e),document.createElement("img")),t=(t.id="spinnerImg",t.style.opacity=0,t.src=chrome.runtime.getURL("spinner.gif"),e.append(t),this.spinnerImg=t,document.createElement("input")),i=(t.id="dateInput",t.type="date",t.value=moment().format("YYYY-MM-DD"),t.className="command",t.addEventListener("change",e=>{e.target.value&&this.loadChartData()}),e.append(t),this.dateInput=t,document.createElement("select")),t=(i.id="timeFrameSelect",i.className="command",[{text:"Tick",value:0},{text:"1 min",value:1},{text:"5 min",value:5},{text:"30 min",value:30},{text:"1 day",value:1440}].forEach((e,t)=>{var r=document.createElement("option");r.value=e.value,r.text=e.text,i.appendChild(r)}),i.value=this.timeFrame,i.addEventListener("change",e=>{this.timeFrame=e.target.value,this.loadChartData().then(()=>this.chart.timeScale().resetTimeScale())}),e.append(i),document.createElement("div"));t.id="refreshButton",t.className="command fa fa-refresh",t.title="Refresh chart",t.addEventListener("click",()=>this.loadChartData()),e.append(t),(t=document.createElement("div")).id="clearButton",t.className="command fa fa-trash",t.title="Delete local data",t.addEventListener("click",()=>{this.global.store.clear("data"),this.loadChartData()}),e.append(t)};createToolArea=()=>{var e=document.createElement("div"),t=(e.id="toolAreaDiv",e.className="area",this.containerElement.append(e),document.createElement("div"));t.id="drawLineButton",t.className="command fa fa-minus",t.addEventListener("click",e=>{var t=e.target.classList.contains("selected");document.querySelectorAll("#toolAreaDiv > .command").forEach(e=>e.classList.remove("selected")),t||e.target.classList.add("selected"),e.stopPropagation()}),t.addEventListener("contextmenu",e=>{this.removeToolLines(),e.target.classList.remove("selected"),e.preventDefault(),e.stopPropagation()}),e.append(t),this.drawLineButton=t,(t=document.createElement("div")).id="drawMarkerButton",t.className="command fa fa-map-marker",t.addEventListener("click",e=>{var t=e.target.classList.contains("selected");document.querySelectorAll("#toolAreaDiv > .command").forEach(e=>e.classList.remove("selected")),t||e.target.classList.add("selected"),e.stopPropagation()}),t.addEventListener("contextmenu",e=>{this.removeMarkers(),e.target.classList.remove("selected"),e.preventDefault(),e.stopPropagation()}),e.append(t),this.drawMarkerButton=t,(t=document.createElement("div")).id="drawRulerButton",t.className="command fa fa-arrows-v",t.addEventListener("click",e=>{var t=e.target.classList.contains("selected");document.querySelectorAll("#toolAreaDiv > .command").forEach(e=>e.classList.remove("selected")),t||(e.target.classList.add("selected"),this.removeRuler()),e.stopPropagation()}),t.addEventListener("contextmenu",e=>{this.removeRuler(),e.target.classList.remove("selected"),e.preventDefault(),e.stopPropagation()}),e.append(t),this.drawRulerButton=t,(t=document.createElement("div")).id="drawAlertButton",t.className="command fa fa-bell-o",t.addEventListener("click",e=>{var t=e.target.classList.contains("selected");document.querySelectorAll("#toolAreaDiv > .command").forEach(e=>e.classList.remove("selected")),t||e.target.classList.add("selected"),e.stopPropagation()}),t.addEventListener("contextmenu",e=>{this.removeAlerts(),e.target.classList.remove("selected"),e.preventDefault(),e.stopPropagation()}),e.append(t),this.drawAlertButton=t};createLegendArea=()=>{var e=document.createElement("div"),t=(e.id="legendAreaDiv",this.containerElement.append(e),document.createElement("p"));t.id="priceLegendP",e.append(t),this.priceLegendP=t,(t=document.createElement("p")).id="volumeLegendP",e.append(t),this.volumeLegendP=t};createFreeArea=()=>{var e=this.containerElement,t=document.createElement("button");t.id="cancelOrderButton",t.innerText="X",t.style.display="none",t.addEventListener("click",()=>{this.closePosition(),this.cancelOrder(),this.toggleCancelOrderButton(!1),this.removeOrderLine("entry"),this.removeOrderLine("tp"),this.removeOrderLine("sl"),this.global.store.clear("order")}),e.append(t),this.cancelOrderButton=t,(t=document.createElement("button")).id="entryOrderButton",t.innerText="Entry",t.style.display="none",t.addEventListener("click",()=>{this.orderEntryPrice(this.order),this.drawOrderLine("entry"),this.toggleCancelOrderButton(!0),this.hideOrderButton()}),e.append(t),this.entryOrderButton=t,(t=document.createElement("button")).id="tpslOrderButton",t.innerText="TP/SL",t.style.display="none",t.addEventListener("click",()=>{this.orderTpPrice(this.order,!0),this.drawOrderLine("tp"),this.orderSlPrice(this.order,!0),this.drawOrderLine("sl"),this.hideOrderButton()}),e.append(t),this.tpslOrderButton=t,(t=document.createElement("div")).id="scrollButton",t.className="command fa fa-angle-double-right",t.addEventListener("click",()=>this.chart.timeScale().scrollToRealTime()),e.append(t)};chartContextmenu=(e,t)=>{t.showOrderButton(),e.preventDefault()};chartClick=(e,t)=>{t.hideOrderButton(),t.drawLineButton.classList.contains("selected")?t.drawToolLine():t.drawMarkerButton.classList.contains("selected")?t.drawMarker():t.drawRulerButton.classList.contains("selected")?t.drawRuler():t.drawAlertButton.classList.contains("selected")&&t.drawAlert()};crosshairMove=(e,t)=>{e.time?(t.updateLegend(e.seriesPrices.get(t.series.price),e.seriesPrices.get(t.series.volume)),t.hasCrosshair=!0,t.crosshair.time=e.time,t.crosshair.price=e.seriesPrices.get(t.series.price)):(t.hasCrosshair=!1,t.global.isMobile||(t.crosshair.time=null,t.crosshair.price=null)),null!=e.point&&(t.crosshair.x=e.point.x,t.crosshair.y=e.point.y)};priceLineDrag=(e,t)=>{var r,i,s=e.customPriceLine.options(),a=(s.price=t.formatPrice(s.price),+e.fromPriceString),o=s.price;switch(s.lineType){case"order":o!=a&&(i=!1,r=t.callback.getOrderPosition(),"entry"==s.kind?r||(i=!0,t.order[s.kind].price=o,t.orderEntryPrice(t.order),t.drawOrderLine(s.kind)):0<t.order.side*r&&(i=!0,t.order[s.kind].price=o,"tp"==s.kind?t.orderTpPrice(t.order):t.orderSlPrice(t.order),drawOrderLine(s.kind)),i||(t.order[s.kind].line.applyOptions({price:a}),t.global.alert.show("warning","Không được thay đổi.")));break;case"line":t.global.store.set("line",{price:a,removed:!0}),t.global.store.set("line",s),t.drawLineButton.classList.remove("selected");break;case"ruler":1==s.point?(t.global.store.set("ruler",s),2==t.ruler.point&&(r=+(o+ +t.ruler.end.options().title).toFixed(1),t.ruler.end.applyOptions({price:r}),t.global.store.set("ruler",t.ruler.end.options()))):(t.global.store.set("ruler",s),i=+t.ruler.start.options().price,t.ruler.end.applyOptions({title:(o-i).toFixed(1)}));break;case"alert":t.alertAudio.pause(),t.global.store.set("alert",{price:a,removed:!0}),t.global.store.set("alert",s),t.drawAlertButton.classList.remove("selected")}};showOrderButton=()=>{var e,t;this.callback.getOrderPosition()?this.order.tp.hasOwnProperty("line")||(this.tpslOrderButton.style.left=+(this.crosshair.x+10)+"px",this.tpslOrderButton.style.top=+(this.crosshair.y+10)+"px",this.tpslOrderButton.style.display="block"):this.order.entry.hasOwnProperty("line")||(t=(e=this.coordinateToPrice(this.crosshair.y))>=this.data.price.slice(-1)[0].value?1:-1,this.order.entry.price=e,this.order.side=t,this.entryOrderButton.style.left=+(this.crosshair.x+10)+"px",this.entryOrderButton.style.top=+(this.crosshair.y+10)+"px",this.entryOrderButton.style.background=0<t?"green":"red",this.entryOrderButton.innerText=`${0<t?"Long":"Short"} `+e,this.entryOrderButton.style.display="block")};hideOrderButton=()=>{this.entryOrderButton.style.display="none",this.tpslOrderButton.style.display="none"};drawOrderLine=e=>{var t,r;switch(e){case"entry":t="silver",r=0<this.order.side?"Long":"Short";break;case"tp":t="lime",r=Math.abs(this.order.tp.price-this.order.entry.price).toFixed(1);break;case"sl":t="red",r=Math.abs(this.order.sl.price-this.order.entry.price).toFixed(1)}this.order[e].hasOwnProperty("line")?this.order[e].line.applyOptions({price:this.order[e].price,title:r}):this.order[e].line=this.series.price.createPriceLine({lineType:"order",kind:e,price:this.order[e].price,color:t,lineWidth:1,lineStyle:LightweightCharts.LineStyle.Solid,title:r,draggable:!0}),this.global.store.set("order",{kind:e,price:+this.order[e].price,side:this.order.side})};removeOrderLine=e=>{this.order[e].hasOwnProperty("line")&&(this.series.price.removePriceLine(this.order[e].line),delete this.order[e].line)};drawToolLine=()=>{const t=this.formatPrice(this.coordinateToPrice(this.crosshair.y));var e=this.lines.findIndex(e=>{e=e.options();return e.type=+e.price==t});-1!=e?(e=this.lines.splice(e,1),this.series.price.removePriceLine(e[0]),this.global.store.set("line",{price:t,removed:!0})):(e={lineType:"line",price:t,color:"aqua",lineWidth:1,lineStyle:LightweightCharts.LineStyle.Solid,draggable:!0},this.lines.push(this.series.price.createPriceLine(e)),this.global.store.set("line",e)),this.drawLineButton.classList.remove("selected")};removeToolLines=()=>{this.lines.forEach(e=>this.series.price.removePriceLine(e)),this.lines=[],this.global.store.clear("line")};drawMarker=()=>{var e,t;this.crosshair.time&&((e=this.markers.filter(e=>e.time!=this.crosshair.time)).length==this.markers.length?(t=this.crosshair.y>=this.series.price.priceToCoordinate(this.crosshair.price),this.markers.push({time:this.crosshair.time,position:t?"belowBar":"aboveBar",color:t?"lime":"red",shape:t?"arrowUp":"arrowDown"})):this.markers=e,this.series.price.setMarkers(this.markers),this.global.store.clear("marker").then(()=>this.global.store.set("marker",this.markers)),this.drawMarkerButton.classList.remove("selected"))};removeMarkers=()=>{this.markers=[],this.series.price.setMarkers([]),this.global.store.clear("marker")};drawRuler=()=>{var e,t=this.coordinateToPrice(this.crosshair.y),r={lineType:"ruler",price:t,color:"yellow",lineWidth:1,lineStyle:LightweightCharts.LineStyle.Solid,draggable:!0};0==this.ruler.point?(r.point=1,r.title="0",this.ruler.start=this.series.price.createPriceLine(r),this.ruler.point=1,this.global.store.set("ruler",r)):1==this.ruler.point&&(e=+this.ruler.start.options().price,r.point=2,r.title=(t-e).toFixed(1),this.ruler.end=this.series.price.createPriceLine(r),this.ruler.point=2,this.global.store.set("ruler",r),this.drawRulerButton.classList.remove("selected"))};removeRuler=()=>{0<this.ruler.point&&(this.series.price.removePriceLine(this.ruler.start),1<this.ruler.point&&this.series.price.removePriceLine(this.ruler.end),this.ruler={start:{},end:{},point:0},this.global.store.clear("ruler"))};drawAlert=()=>{const t=this.formatPrice(this.coordinateToPrice(this.crosshair.y));var e=this.alerts.findIndex(e=>{e=e.options();return e.type=+e.price==t});-1!=e?(e=this.alerts.splice(e,1),this.series.price.removePriceLine(e[0]),this.global.store.set("alert",{price:t,removed:!0})):(e={lineType:"alert",price:t,title:t>=this.data.original.slice(-1)[0].price?">":"<",color:"#FF00FF",lineWidth:1,lineStyle:LightweightCharts.LineStyle.Solid,draggable:!0},this.alerts.push(this.series.price.createPriceLine(e)),this.global.store.set("alert",e)),this.drawAlertButton.classList.remove("selected"),this.alertAudio.pause()};removeAlerts=()=>{this.alerts.forEach(e=>this.series.price.removePriceLine(e)),this.alerts=[],this.global.store.clear("alert"),this.alertAudio.pause()};toggleCancelOrderButton=e=>{e?(this.cancelOrderButton.style.display="block",this.cancelOrderButton.style.background=0<this.order.side?"green":"red"):this.cancelOrderButton.style.display="none"};updateLegend=(e,t)=>{e&&(this.priceLegendP.innerText=e),t&&(this.volumeLegendP.innerText=t.toLocaleString("en-US"))};coordinateToPrice=e=>this.formatPrice(this.series.price.coordinateToPrice(e));formatPrice=e=>+e.toFixed(1);loadChartData=()=>new Promise(async(e,t)=>{this.toggleSpinner(!0);for(var r=await this.getServerData();;){this.hasNewData=!1;var i=await this.global.store.get("data");const s=new Set(r.map(e=>e.time)),a=[...r,...i.filter(e=>!s.has(e.time))].sort((e,t)=>e.time-t.time);if(!this.hasNewData){this.global.store.clear("data").then(()=>this.global.store.set("data",a)),this.data=a.reduce((e,t)=>this.generateChartData(e,t),{original:[],price:[],volume:[]}),this.series.price.setData(this.data.price),this.series.volume.setData(this.data.volume),!this.hasCrosshair&&this.data.original.length&&this.updateLegend(this.data.price.slice(-1)[0].value,this.data.volume.slice(-1)[0].value),this.toggleSpinner(!1),e();break}}});updateChartData=e=>{this.hasNewData=!0,this.data=this.generateChartData(this.data,e);var t=this.data.price.slice(-1)[0],r=this.data.volume.slice(-1)[0];0<this.timeFrame?(this.series.price.setData(this.data.price),this.series.volume.setData(this.data.volume)):(this.series.price.update(t),this.series.volume.update(r)),this.hasCrosshair||this.updateLegend(t.value,r.value),this.global.store.set("data",e),this.data.original.push(e)};getServerData=()=>new Promise(async(e,t)=>{for(var r={date:this.dateInput.value},i=this.global.domain+this.global.endpoint.getChart;;)try{e(await(await fetch(i,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.global.accessToken},body:JSON.stringify(r)})).json());break}catch(e){continue}});generateChartData=(e,t)=>{var r,i,s,a,o=t.time+25200,n=t.volume;return 0<this.timeFrame&&(r=60*this.timeFrame,i=Math.floor(o/r),s=!1,(s=e.price.length&&(a=e.price.slice(-1)[0].time,i==Math.floor(a/r))?!0:s)&&(e.price.pop(),n+=e.volume.pop().value),o=i*r),e.original.push(t),e.price.push({time:o,value:t.price}),e.volume.push({time:o,value:n}),e};getToolsData=()=>new Promise(async(e,t)=>{(await this.global.store.get("order")).map(e=>{this.order.side=e.side,this.order[e.kind].price=e.price,this.drawOrderLine(e.kind),"entry"==e.kind&&(this.callback.getOrderPosition()&&this.order.entry.line.applyOptions({draggable:!1}),this.toggleCancelOrderButton(!0))});(await this.global.store.get("line")).forEach(e=>{e.removed||this.lines.push(this.series.price.createPriceLine(e))}),this.markers=await this.global.store.get("marker"),this.series.price.setMarkers(this.markers);var r=await this.global.store.get("ruler");2==r.length&&r.forEach(e=>{this.ruler.point=2,1==e.point?this.ruler.start=this.series.price.createPriceLine(e):this.ruler.end=this.series.price.createPriceLine(e)}),(await this.global.store.get("alert")).forEach(e=>{e.removed||this.alerts.push(this.series.price.createPriceLine(e))}),e()});connectSocket=()=>{var t=this,e={action:"join",list:t.global.symbol},r=io(t.global.endpoint.socket);r.on("connect",()=>r.emit("regs",JSON.stringify(e))),r.on("reconnect",()=>{t.refreshDataInSession(t)&&r.emit("regs",JSON.stringify(e))}),r.on("stockps",e=>{3220==e.id&&(e={time:moment(moment().format("YYYY-MM-DD")+" "+e.time).unix(),price:e.lastPrice,volume:e.lastVol},t.updateChartData(e))})};intervalHandler=r=>{r.callback.getOrderPosition()?r.order.entry.hasOwnProperty("line")&&!r.order.tp.hasOwnProperty("line")&&(r.orderTpPrice(r.order,!0),r.drawOrderLine("tp"),r.orderSlPrice(r.order,!0),r.drawOrderLine("sl"),r.order.entry.line.applyOptions({draggable:!1}),r.global.alert.show("success","Đã mở vị thế.")):r.order.tp.hasOwnProperty("line")&&(r.cancelOrder(),r.toggleCancelOrderButton(!1),r.removeOrderLine("entry"),r.removeOrderLine("tp"),r.removeOrderLine("sl"),r.global.store.clear("order"),r.global.alert.show("success","Đã đóng vị thế.")),r.alertAudio.paused&&r.alerts.forEach(e=>{var t,e=e.options();!e.removed&&r.data.original.length&&(t=r.data.original.slice(-1)[0].price,">"==e.title&&t>=e.price||"<"==e.title&&t<=e.price)&&r.alertAudio.play()}),moment().unix()==r.global.time.start&&r.connectSocket()};refreshDataInSession=e=>moment().unix()>=e.global.time.start&&moment().unix()<=e.global.time.end&&(e.loadChartData(),!0);toggleSpinner=e=>{this.spinnerImg.style.opacity=e?1:0};resize=e=>{e.chart.resize(window.innerWidth,window.innerHeight)};keyEvent=(e,t)=>{var r;e.ctrlKey||e.metaKey?e.shiftKey?39==e.keyCode&&t.chart.timeScale().scrollToRealTime():38==e.keyCode?(r=t.chart.options(),t.chart.timeScale().applyOptions({barSpacing:r.timeScale.barSpacing+.1})):40==e.keyCode?(r=t.chart.options()).timeScale.barSpacing>r.timeScale.minBarSpacing&&t.chart.timeScale().applyOptions({barSpacing:r.timeScale.barSpacing-.1}):37==e.keyCode?(r=t.chart.timeScale().scrollPosition(),t.chart.timeScale().scrollToPosition(r-10)):39==e.keyCode?(r=t.chart.timeScale().scrollPosition(),t.chart.timeScale().scrollToPosition(r+10)):97==e.keyCode?t.drawLineButton.click():98==e.keyCode?t.drawMarkerButton.click():99==e.keyCode?t.drawRulerButton.click():100==e.keyCode&&t.drawAlertButton.click():27===e.which&&t.removeOrderButton()};base64ToArrayUnit8=e=>{for(var t=window.atob(e),r=t.length,i=new Uint8Array(r),s=0;s<r;s++)i[s]=t.charCodeAt(s);return i}}
class Popup{TOKEN_KEY="SOAT";constructor(e,t){this.global=e,this.callback=t,this.createContainerElement(),this.getDeviceId()}createContainerElement=()=>{var e=document.createElement("div");e.id="optionViewContainer",document.body.append(e),this.containerElement=e};createNoLoginElement=()=>{this.createHearderContainer(),this.createLoginContainer(),this.createRegisterContainer()};createHearderContainer=()=>{var e=document.createElement("div"),t=(e.id="hearderContainer",this.containerElement.append(e),this.hearderContainer=e,document.createElement("label"));e.append(t),t.className="title",t.innerText=this.global.appName};createLoginContainer=()=>{var e=document.createElement("div"),t=(e.id="loginContainer",e.className="section",e.style.display=this.global.isLoggedin?"none":"block",this.containerElement.append(e),this.loginContainer=e,document.createElement("form")),e=(e.append(t),t.id="loginForm",t.className="wrapper",t.addEventListener("submit",e=>this.login(e,this)),document.createElement("label")),e=(t.append(e),e.className="invalid",this.loginMessage=e,document.createElement("input")),n=(t.append(e),e.id="loginUsername",e.type="text",e.placeholder="Email hoặc Số điện thoại",e.required=!0,this.loginUsername=e,this.global.isLoggedin||this.loginUsername.focus(),e=document.createElement("input"),t.append(e),e.id="loginPassword",e.type="password",e.placeholder="Mật khẩu",e.required=!0,this.loginPassword=e,document.createElement("div")),e=(t.append(n),e=document.createElement("input"),n.append(e),e.id="loginRememberMe",e.type="checkbox",this.loginRememberMe=e,document.createElement("label")),n=(n.append(e),e.setAttribute("for","loginRememberMe"),e.innerHTML="&ensp;Lưu đăng nhập",document.createElement("button")),e=(t.append(n),n.id="loginSubmit",n.innerText="ĐĂNG NHẬP",n.type="submit",this.loginSubmit=n,document.createElement("div")),n=(e.className="link-group",t.append(e),document.createElement("label")),n=(e.append(n),n.className="link",n.innerText="Đăng ký",n.addEventListener("click",e=>{this.loginContainer.style.display="none",this.registerContainer.style.display="block",this.registerName.focus()}),document.createElement("label"));e.append(n),n.className="link",n.innerText="Trang chủ",n.addEventListener("click",()=>window.open("https://www.w3schools.com"))};createRegisterContainer=()=>{var e=document.createElement("div"),t=(e.id="registerContainer",e.className="section",e.style.display="none",this.containerElement.append(e),this.registerContainer=e,document.createElement("form")),e=(e.append(t),t.id="registerForm",t.className="wrapper",t.addEventListener("submit",e=>this.register(e,this)),document.createElement("label")),e=(t.append(e),e.className="invalid",this.registerMessage=e,document.createElement("input")),e=(t.append(e),e.id="registerName",e.type="text",e.placeholder="Tên",e.required=!0,this.registerName=e,e=document.createElement("input"),t.append(e),e.id="registerEmail",e.type="email",e.placeholder="Email",e.required=!0,this.registerEmail=e,e=document.createElement("input"),t.append(e),e.id="registerPhone",e.type="text",e.placeholder="Số điện thoại",e.required=!0,e.setAttribute("maxlength",10),e.setAttribute("pattern","[0-9]+"),this.registerPhone=e,e=document.createElement("input"),t.append(e),e.id="registerPassword",e.type="password",e.placeholder="Mật khẩu",e.required=!0,this.registerPassword=e,e=document.createElement("input"),t.append(e),e.id="registerConfirmPassword",e.type="password",e.placeholder="Xác nhận mật khẩu",e.required=!0,this.registerConfirmPassword=e,document.createElement("button")),e=(t.append(e),e.id="registerSubmit",e.innerText="ĐĂNG KÝ",e.type="submit",this.registerSubmit=e,document.createElement("div")),t=(e.className="link-group",t.append(e),document.createElement("label")),t=(e.append(t),t.className="link",t.innerText="Đăng nhập",t.addEventListener("click",e=>{this.registerContainer.style.display="none",this.loginContainer.style.display="block",this.loginUsername.focus()}),document.createElement("label"));e.append(t),t.className="link",t.innerText="Trang chủ",t.addEventListener("click",()=>window.open("https://www.w3schools.com"))};createLoggedinElement=()=>{this.createInfoContainer(),this.createOptionContainer(),this.createAboutContainer(),this.loginContainer.style.display="none",this.registerContainer.style.display="none",this.infoContainer.style.display="block"};createInfoContainer=()=>{{var e=document.createElement("div"),t=(e.id="infoContainer",e.className="section",e.style.display=this.global.isLoggedin?"block":"none",this.containerElement.append(e),this.infoContainer=e,document.createElement("div"));t.className="wrapper",e.append(t);var e,n=((e=document.createElement("div")).className="list",t.append(e),document.createElement("label")),a=(e.append(n),n.className="title",n.innerText="Thông tin tài khoản:",document.createElement("div")),i=(a.className="item",e.append(a),document.createElement("span")),o=(i.innerText="Tên:",a.append(i),document.createElement("span")),a,i,o,a,i,o,a,i;o.innerText=this.global.user.name,a.append(o),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Email:",a.append(i),(o=document.createElement("span")).innerText=this.global.user.email,a.append(o),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Điện thoại:",a.append(i),(o=document.createElement("span")).innerText=this.global.user.phone,a.append(o),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Ngày đăng ký:",a.append(i)}(o=document.createElement("span")).innerText=moment(this.global.registerDate).format("DD/MM/YYYY"),a.append(o);(e=document.createElement("div")).className="list",t.append(e),n=document.createElement("label");e.append(n),n.className="title",n.innerText="Thông tin gói dịch vụ:",(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Ngày bắt đầu:",a.append(i),(o=document.createElement("span")).innerText=moment(this.global.startDate).format("DD/MM/YYYY"),a.append(o),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Ngày hết hạn:",a.append(i),(o=document.createElement("span")).innerText=moment(this.global.expiresDate).format("DD/MM/YYYY"),a.append(o),(a=document.createElement("div")).className="item",e.append(a),(i=document.createElement("span")).innerText="Số lượng thiết bị:",a.append(i);(o=document.createElement("span")).innerText=this.global.deviceLimit,a.append(o);n=document.createElement("button"),t.append(n),n.innerText="ĐĂNG XUẤT",n.addEventListener("click",()=>this.logout(this)),e=document.createElement("div"),e.className="link-group",t.append(e),i=document.createElement("label"),e.append(i),i.className="link",i.innerText="Cài đặt",i.addEventListener("click",e=>{this.infoContainer.style.display="none",this.optionContainer.style.display="block"}),i=document.createElement("label");e.append(i),i.className="link",i.innerText="Cập nhật",i.addEventListener("click",e=>{this.infoContainer.style.display="none",this.aboutContainer.style.display="block"})};createOptionContainer=()=>{var e=document.createElement("div"),t=(e.id="optionContainer",e.className="section",e.style.display="none",this.containerElement.append(e),this.optionContainer=e,document.createElement("form")),e=(e.append(t),t.id="optionForm",t.className="wrapper",t.addEventListener("submit",e=>this.setServerConfig(e,this).then(e=>{e?this.global.alert.show("success","Lưu cài đặt thành công"):this.global.alert.show("error","Lưu cài đặt thất bại")})),document.createElement("div")),n=(e.className="list",t.append(e),document.createElement("div")),a=(n.className="item",e.append(n),document.createElement("span")),i=(a.innerText="Khung thời gian:",n.append(a),document.createElement("select")),o=(i.style.width="69px",[{text:"Tick",value:0},{text:"1 min",value:1},{text:"5 min",value:5},{text:"30 min",value:30},{text:"1 day",value:1440}].forEach((e,t)=>{var n=document.createElement("option");n.value=e.value,n.text=e.text,i.appendChild(n)}),i.value=this.global.timeFrame,this.timeFrameSelect=i,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Loại biểu đồ:",n.append(a),i=document.createElement("select"),[{text:"Đường",value:0},{text:"Nến",value:1},{text:"Thanh",value:2}].forEach((e,t)=>{var n=document.createElement("option");n.value=e.value,n.text=e.text,i.appendChild(n)}),i.value=this.global.chartType,this.chartTypeSelect=i,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Số hợp đồng:",n.append(a),document.createElement("input"));o.type="number",o.style.width="69px",o.style.height="21px",o.value=this.global.contractNumber,this.contractNumberInput=o,n.append(o),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Điểm chốt lời:",n.append(a),(o=document.createElement("input")).type="number",o.style.width="69px",o.style.height="21px",o.value=this.global.takeProfit,this.takeProfitInput=o,n.append(o),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Điểm cắt lỗ:",n.append(a);(o=document.createElement("input")).type="number",o.style.width="69px",o.style.height="21px",o.value=this.global.stopLoss,this.stopLossInput=o,n.append(o),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Hiển thị biểu đồ khối lượng:",n.append(a),(o=document.createElement("input")).type="checkbox",o.style.width="17px",o.value=!!this.global.isVolume,this.isVolumeCheckbox=o,n.append(o),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Mở biểu đồ khi khởi động:",n.append(a),(o=document.createElement("input")).type="checkbox",o.style.width="17px",o.value=!!this.global.isViewChart,this.isViewChartCheckbox=o,n.append(o),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Bật chế độ toàn màn hình:",n.append(a),(o=document.createElement("input")).type="checkbox",o.style.width="17px",o.value=!!this.global.isFullscreen,this.isFullscreenCheckbox=o,n.append(o);e=document.createElement("button"),t.append(e),e.id="optionSubmit",e.innerText="LƯU CÀI ĐẶT",e.type="submit",this.optionSubmit=e,a=document.createElement("label");t.append(a),a.className="link",a.innerText="Trở về",a.addEventListener("click",e=>{this.optionContainer.style.display="none",this.infoContainer.style.display="block"})};createAboutContainer=()=>{{var e=document.createElement("div"),t=(e.id="aboutContainer",e.className="section",e.style.display="none",this.containerElement.append(e),this.aboutContainer=e,document.createElement("div"));t.className="wrapper",e.append(t);var e,n=((e=document.createElement("div")).className="list",t.append(e),document.createElement("div")),a=(n.className="item",e.append(n),document.createElement("span")),i=(a.innerText="Phiên bản:",n.append(a),document.createElement("span")),n;i.innerText=this.global.version,n.append(i),(n=document.createElement("div")).className="item",e.append(n)}(a=document.createElement("span")).innerText="Ngày xuất bản:",n.append(a),(i=document.createElement("span")).innerText=this.global.publishDate,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Nhà phát triển:",n.append(a),(i=document.createElement("span")).innerText=this.global.developer,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Số điện thoại:",n.append(a),(i=document.createElement("span")).innerText=this.global.contact.phone,n.append(i),(n=document.createElement("div")).className="item",e.append(n),(a=document.createElement("span")).innerText="Email:",n.append(a);(i=document.createElement("span")).innerText=this.global.contact.email,n.append(i),this.global.version!=this.global.latestVersion&&((e=document.createElement("div")).className="download",t.append(e),a=document.createElement("label"),e.append(a),a.innerHTML="Đã có phiên bản cập nhật mới.",n=document.createElement("button"),e.append(n),n.innerText="TẢI XUỐNG",n.addEventListener("click",e=>this.logout(e,this)));i=document.createElement("div"),i.className="link-group",t.append(i),a=document.createElement("label"),i.append(a),a.className="link",a.innerText="Trở về",a.addEventListener("click",e=>{this.aboutContainer.style.display="none",this.infoContainer.style.display="block"}),a=document.createElement("label");i.append(a),a.className="link",a.innerText="Trang chủ",a.addEventListener("click",()=>window.open("https://www.w3schools.com"))};removeLoggedinElement=()=>{this.infoContainer.remove(),this.optionContainer.remove(),this.aboutContainer.remove()};register=(e,t)=>{if(e.preventDefault(),t.registerConfirmPassword.value!=t.registerPassword.value)return!(t.registerMessage.innerText="Mật khẩu không khớp");t.registerSubmit.innerText="Đang đăng ký...",t.registerSubmit.disabled=!0,t.registerMessage.innerText="";var e={name:t.registerName.value,email:t.registerEmail.value,phone:t.registerPhone.value,password:t.registerPassword.value,deviceId:t.global.deviceId,chanel:t.global.appName},n=this.global.domain+this.global.endpoint.register;fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)}).then(async e=>{t.registerSubmit.innerText="ĐĂNG KÝ",t.registerSubmit.disabled=!1,e.isOk?(t.setToken(e.token),t.global.accessToken=e.token.access_token,t.global.user=e.user,await t.callback.loggedin(),t.global.alert.show("success","Đăng ký thành công"),t.registerName.value="",t.registerEmail.value="",t.registerPhone.value="",t.registerPassword.value="",t.registerConfirmPassword.value=""):"emailExist"==e.message?t.registerMessage.innerText="Emai này đã đăng ký":"phoneExist"==e.message&&(t.registerMessage.innerText="Số điện thoại này đã đăng ký")}).catch(e=>{t.global.alert.show("error","Đăng ký lỗi"),t.registerSubmit.innerText="ĐĂNG KÝ",t.registerSubmit.disabled=!1})};login=(e,t)=>{e.preventDefault(),t.loginSubmit.innerText="Đang đăng nhập...",t.loginSubmit.disabled=!0,t.loginMessage.innerText="";var e={username:t.loginUsername.value,password:t.loginPassword.value,rememberMe:t.loginRememberMe.value,deviceId:t.global.deviceId,chanel:t.global.appName},n=this.global.domain+this.global.endpoint.login;fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)}).then(async e=>{t.loginSubmit.innerText="ĐĂNG NHẬP",t.loginSubmit.disabled=!1,e.isOk?(t.setToken(e.token),t.global.accessToken=e.token.access_token,t.global.user=e.user,t.loginUsername.value="",t.loginPassword.value="",await t.callback.loggedin()):"unauthorized"==e.message?t.loginMessage.innerText="Sai thông tin đăng nhập":"unsetup"==e.message?t.loginMessage.innerText="Lỗi khởi tạo tài khoản":"expired"==e.message?t.loginMessage.innerText="Quá hạn sử dụng dịch vụ":"deviceLimit"==e.message&&(t.loginMessage.innerText="Quá giới hạn thiết bị")}).catch(e=>{t.global.alert.show("error","Đăng nhập lỗi"),t.loginSubmit.innerText="ĐĂNG NHẬP",t.loginSubmit.disabled=!1})};logout=e=>{var t=this.global.domain+this.global.endpoint.logout;fetch(t,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+e.global.accessToken}}).then(()=>{e.removeToken(),e.infoContainer.style.display="none",e.loginContainer.style.display="block",e.callback.loggedout(),e.loginUsername.focus()})};getUser=()=>new Promise(t=>{var e;this.global.accessToken=this.getToken(),this.global.accessToken?(e=this.global.domain+this.global.endpoint.user,fetch(e,{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.global.accessToken}}).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)}).then(e=>{console.log("getUser: ",e),this.global.user=e,this.global.isLoggedin=!!e.code,t()}).catch(e=>t())):t()});getLocalConfig=()=>new Promise((n,e)=>{var t=chrome.runtime.getURL("config.json");fetch(t).then(e=>e.json()).then(e=>{for(const t in e)this.global[t]=e[t];n()}).catch(()=>{console.log(err),confirm("Get local config error. Refresh now?")&&location.reload()})});getServerConfig=()=>new Promise((n,e)=>{var t=this.global.domain+this.global.endpoint.getConfig;fetch(t,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.global.accessToken},body:JSON.stringify({securities:this.global.securities})}).then(e=>e.json()).then(e=>{console.log("serverConfig",e);for(const t in e)"endpoint"==t?this.global.endpoint.socket=e.endpoint.socket:this.global[t]=e[t];n()}).catch(e=>{console.log(e),confirm("Get server config error. Refresh now?")&&location.reload()})});setServerConfig=(e,a)=>(e.preventDefault(),new Promise(t=>{a.optionSubmit.innerText="Đang lưu cài đặt...",a.optionSubmit.disabled=!0;var e={timeFrame:a.timeFrameSelect.value,chartType:a.chartTypeSelect.value,contractNumber:a.contractNumberInput.value,takeProfit:a.takeProfitInput.deviceId,stopLoss:a.stopLossInput.appName,isVolume:a.isVolumeCheckbox.appName,isViewChart:a.isViewChartCheckbox.appName,isFullscreen:a.isFullscreenCheckbox.appName},n=this.global.domain+this.global.endpoint.setConfig;fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+a.global.accessToken},body:JSON.stringify(e)}).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)}).then(async e=>{console.log("setConfig: ",e),a.loginSubmit.innerText="LƯU CÀI ĐẶT",a.loginSubmit.disabled=!1,t(e.isOk)})}));setToken=e=>localStorage.setItem(this.TOKEN_KEY,JSON.stringify(e));removeToken=()=>localStorage.removeItem(this.TOKEN_KEY);getToken=()=>{var e=JSON.parse(localStorage.getItem(this.TOKEN_KEY));return!(!e||!moment().isBefore(e.expires_at))&&e.access_token};getDeviceId=()=>new Promise(t=>{FingerprintJS.load().then(e=>e.get()).then(e=>{this.global.deviceId=e.visitorId,t()})});toggle=()=>{this.containerElement.classList.contains("show")?this.containerElement.classList.remove("show"):this.containerElement.classList.add("show")}}
class Menu{constructor(t,e){this.global=t,this.callback=e,this.createContainerElement(),this.createNoLoginElement()}createContainerElement=()=>{var t=document.createElement("div");t.id="menuContainer",document.body.append(t),this.containerElement=t};createLoggedinElement=()=>{var t=document.createElement("button");t.id="lightWeightButton",t.classList="fa fa-line-chart",t.title="LightWeight Chart",t.addEventListener("click",this.callback.toggleLightWeightChart),this.containerElement.prepend(t),this.lightWeightButton=t,(t=document.createElement("button")).id="tradingViewButton",t.classList="fa fa-bar-chart",t.title="TradingView Chart",t.addEventListener("click",this.callback.toggleTradingViewChart),this.containerElement.prepend(t),this.tradingViewButton=t,(t=document.createElement("button")).id="reportButton",t.classList="fa fa-flag-checkered",t.title="Report",t.addEventListener("click",()=>this.reportTradingResult(this)),this.containerElement.append(t),this.reportButton=t,this.interval=setInterval(()=>{this.blinkLightWeightButton(this),moment().unix()==this.global.time.end&&this.reportTradingResult(this)},1e3)};removeLoggedinElement=()=>{this.tradingViewButton.remove(),this.lightWeightButton.remove(),this.reportButton.remove(),clearInterval(this.interval)};createNoLoginElement=()=>{var t=document.createElement("button");t.id="settingButton",t.classList="fa fa-cog",t.title="Cài đặt",t.addEventListener("click",this.callback.togglePopup),this.containerElement.append(t),this.settingButton=t};blinkLightWeightButton=t=>{t.lightWeightButton.classList.contains("dark")?t.lightWeightButton.classList.remove("dark"):t.lightWeightButton.classList.add("dark")};reportTradingResult=e=>{var t,i;e.global.isOpeningMarket&&!e.global.isReportedResult&&(e.global.isReportedResult=!0,e.global.toggleSpinner(!0),t=e.global.domain+e.global.endpoint.report,i=e.callback.getReportData(),fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then(t=>{if(t.ok)return t.json();throw new Error(t.statusText)}).then(t=>{e.global.isReportedResult=t.isOk,t.isOk&&(t.isExecuted?e.global.alert.show("success","Báo cáo đã gửi thành công."):e.global.alert.show("warning","Đã gửi báo cáo")),e.global.toggleSpinner(!1)}).catch(t=>{e.global.isReportedResult=!1,e.global.alert.show("error","Gửi báo cáo thất bại"),e.global.toggleSpinner(!1)}))};displayDefault=()=>{this.global.isLoggedin?this.global.isViewChart&&this.lightWeightButton.click():this.settingButton.click()}}
class SmartOrder{constructor(){this.global=new Object,this.global.alert=new Alert,this.global.store=new Store,this.global.isMobile=navigator.userAgentData.mobile,this.chart=new Chart(this.global,{getOrderPosition:this.getOrderPositionCallback,closePosition:this.closePositionCallback,orderEntryPrice:this.orderEntryPriceCallback,orderTpPrice:this.orderTpPriceCallback,orderSlPrice:this.orderSlPriceCallback,cancelOrder:this.cancelOrderCallback}),this.popup=new Popup(this.global,{loggedin:this.loggedinCallback,loggedout:this.loggedoutCallback}),this.menu=new Menu(this.global,{toggleTradingViewChart:this.toggleTradingViewCallback,toggleLightWeightChart:this.toggleLightWeightCallback,togglePopup:this.popup.toggle,getReportData:this.getReportDataCallback}),this.registerFullscreenEvent()}init=async()=>{this.global.alert.show("warning","Đang khởi tạo SmartOrder ...",!1),await this.popup.getLocalConfig(),console.log("global-local: ",this.global),this.popup.createNoLoginElement(),await this.popup.getUser(),this.global.isLoggedin&&(await this.popup.getServerConfig(),console.log("global-server: ",this.global),await this.loggedinCallback(),document.getElementById("sohopdong").value=this.global.contractNumber,document.getElementById("right_price").value="MTL"),this.menu.displayDefault(),this.global.alert.hide()};loggedinCallback=async()=>{this.menu.createLoggedinElement(),this.popup.createLoggedinElement(),this.chart.createChart(),await this.chart.loadChartData(),await this.chart.getToolsData(),this.chart.connectSocket()};loggedoutCallback=()=>{this.menu.removeLoggedinElement(),this.popup.removeLoggedinElement(),this.chart.removeChart()};toggleTradingViewCallback=()=>{document.getElementById("left_order_type"),document.getElementById("right_order_type");var e=document.querySelector("#mainFooter .foot_tab:nth-child(1)"),t=document.querySelector("#mainFooter .foot_tab:nth-child(2)");e.classList.remove("fa","fa-check-circle"),t.classList.remove("fa","fa-question-circle"),document.body.classList.contains("tradingview-chart")?(document.body.classList.remove("tradingview-chart"),document.body.classList.remove("full-chart")):(document.body.classList.add("tradingview-chart"),document.body.classList.add("full-chart"),document.body.classList.remove("lightweight-chart"))};toggleLightWeightCallback=()=>{document.getElementById("left_order_type"),document.getElementById("right_order_type"),document.querySelector("#mainFooter .foot_tab:nth-child(1)"),document.querySelector("#mainFooter .foot_tab:nth-child(2)");document.body.classList.contains("lightweight-chart")?(document.body.classList.remove("lightweight-chart"),document.body.classList.remove("full-chart")):(document.body.classList.add("lightweight-chart"),document.body.classList.add("full-chart"),document.body.classList.remove("tradingview-chart"))};getReportDataCallback=()=>({revenue:+document.getElementById("vmAccInfo").innerText.replaceAll(",",""),fees:+document.getElementById("othersAccInfo").innerText.replaceAll(",","")});getOrderPositionCallback=()=>{var e=document.querySelector(`#danhmuc_${this.global.symbol} > td:nth-child(2)`);return!e||(e=e.innerText,isNaN(e))?0:+e};closePositionCallback=()=>{var e=this.getOrderPosition();e&&(document.getElementById("select_normal_order_wrapper").click(),document.getElementById("right_price").value="MTL",document.getElementById("sohopdong").value=Math.abs(e),document.getElementById("btn_"+(0<e?"short":"long")).click())};orderEntryPriceCallback=e=>{this.callScript("onCancelAllOrderPending('order_condition')"),document.getElementById("select_condition_order_wrapper").click(),document.getElementById("right_stopOrderIndex").value=e.entry.price,document.getElementById("right_price").value="MTL",document.getElementById("right_selStopOrderType").value=0<e.side?"SOL":"SOU",setTimeout(()=>{document.getElementById("btn_"+(0<e.side?"long":"short")).click()},1e3)};orderTpPriceCallback=(e,t=!1)=>{this.callScript("onCancelAllOrderPending('order')"),t&&(e.tp.price=+e.entry.price+e.side*this.global.takeProfit),setTimeout(()=>{document.getElementById("select_normal_order_wrapper").click(),document.getElementById("right_price").value=e.tp.price,document.getElementById("btn_"+(e.side<0?"long":"short")).click()},1e3)};orderSlPriceCallback=(e,t=!1)=>{this.callScript("onCancelAllOrderPending('order_condition')"),t&&(e.sl.price=+e.entry.price-e.side*this.global.stopLoss),setTimeout(()=>{document.getElementById("select_condition_order_wrapper").click(),document.getElementById("right_stopOrderIndex").value=e.sl.price,document.getElementById("right_price").value="MTL",document.getElementById("right_selStopOrderType").value=e.side<0?"SOL":"SOU",document.getElementById("btn_"+(e.side<0?"long":"short")).click()},1e3)};cancelOrderCallback=()=>{this.callScript("onCancelAllOrderPending('order_condition')"),this.callScript("onCancelAllOrderPending('order')")};callScript=e=>{var t=document.createElement("button");t.setAttribute("onclick",e),t.click()};registerFullscreenEvent=()=>{document.querySelector(".timeStamp").addEventListener("dblclick",()=>{document.fullscreenElement?document.exitFullscreen():document.documentElement.requestFullscreen()})}}var so=new SmartOrder;so.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
