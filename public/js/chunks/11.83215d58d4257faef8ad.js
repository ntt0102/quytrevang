(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[11],{

/***/ "./node_modules/devextreme-vue/chart.js":
/*!**********************************************!*\
  !*** ./node_modules/devextreme-vue/chart.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*!\n * devextreme-vue\n * Version: 21.2.7\n * Build date: Mon Apr 11 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-vue\n */\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DxLegendTitle = exports.DxLegend = exports.DxLabel = exports.DxImage = exports.DxHoverStyle = exports.DxHorizontalLineLabel = exports.DxHorizontalLine = exports.DxHeight = exports.DxHatching = exports.DxGrid = exports.DxFormat = exports.DxFont = exports.DxExport = exports.DxDragBoxStyle = exports.DxDataPrepareSettings = exports.DxCrosshair = exports.DxConstantLineStyle = exports.DxConstantLineLabel = exports.DxConstantLine = exports.DxConnector = exports.DxCommonSeriesSettingsSelectionStyle = exports.DxCommonSeriesSettingsLabel = exports.DxCommonSeriesSettingsHoverStyle = exports.DxCommonSeriesSettings = exports.DxCommonPaneSettings = exports.DxCommonAxisSettingsTitle = exports.DxCommonAxisSettingsLabel = exports.DxCommonAxisSettingsConstantLineStyleLabel = exports.DxCommonAxisSettingsConstantLineStyle = exports.DxCommonAxisSettings = exports.DxCommonAnnotationSettings = exports.DxChartTitleSubtitle = exports.DxChartTitle = exports.DxBreakStyle = exports.DxBreak = exports.DxBorder = exports.DxAxisTitle = exports.DxAxisLabel = exports.DxAxisConstantLineStyleLabel = exports.DxAxisConstantLineStyle = exports.DxArgumentFormat = exports.DxArgumentAxis = exports.DxAnnotationImage = exports.DxAnnotationBorder = exports.DxAnnotation = exports.DxAnimation = exports.DxAggregationInterval = exports.DxAggregation = exports.DxAdaptiveLayout = exports.DxChart = void 0;\nexports.DxZoomAndPan = exports.DxWidth = exports.DxWholeRange = exports.DxVisualRange = exports.DxVerticalLine = exports.DxValueErrorBar = exports.DxValueAxis = exports.DxUrl = exports.DxTooltipBorder = exports.DxTooltip = exports.DxTitle = exports.DxTickInterval = exports.DxTick = exports.DxSubtitle = exports.DxStripStyleLabel = exports.DxStripStyle = exports.DxStripLabel = exports.DxStrip = exports.DxSize = exports.DxShadow = exports.DxSeriesTemplate = exports.DxSeriesBorder = exports.DxSeries = exports.DxSelectionStyle = exports.DxScrollBar = exports.DxReduction = exports.DxPointSelectionStyle = exports.DxPointImage = exports.DxPointHoverStyle = exports.DxPointBorder = exports.DxPoint = exports.DxPaneBorder = exports.DxPane = exports.DxMinVisualRangeLength = exports.DxMinorTickInterval = exports.DxMinorTick = exports.DxMinorGrid = exports.DxMargin = exports.DxLoadingIndicator = exports.DxLength = exports.DxLegendTitleSubtitle = void 0;\nvar chart_1 = __importDefault(__webpack_require__(/*! devextreme/viz/chart */ \"./node_modules/devextreme/esm/viz/chart.js\"));\nvar index_1 = __webpack_require__(/*! ./core/index */ \"./node_modules/devextreme-vue/core/index.js\");\nvar index_2 = __webpack_require__(/*! ./core/index */ \"./node_modules/devextreme-vue/core/index.js\");\nvar DxChart = index_1.createComponent({\n    props: {\n        adaptiveLayout: Object,\n        adjustOnZoom: Boolean,\n        animation: [Boolean, Object],\n        annotations: Array,\n        argumentAxis: Object,\n        autoHidePointMarkers: Boolean,\n        barGroupPadding: Number,\n        barGroupWidth: Number,\n        commonAnnotationSettings: Object,\n        commonAxisSettings: Object,\n        commonPaneSettings: Object,\n        commonSeriesSettings: Object,\n        containerBackgroundColor: String,\n        crosshair: Object,\n        customizeAnnotation: Function,\n        customizeLabel: Function,\n        customizePoint: Function,\n        dataPrepareSettings: Object,\n        dataSource: [Array, Object, String],\n        defaultPane: String,\n        disabled: Boolean,\n        elementAttr: Object,\n        export: Object,\n        legend: Object,\n        loadingIndicator: Object,\n        margin: Object,\n        maxBubbleSize: Number,\n        minBubbleSize: Number,\n        negativesAsZeroes: Boolean,\n        onArgumentAxisClick: Function,\n        onDisposing: Function,\n        onDone: Function,\n        onDrawn: Function,\n        onExported: Function,\n        onExporting: Function,\n        onFileSaving: Function,\n        onIncidentOccurred: Function,\n        onInitialized: Function,\n        onLegendClick: Function,\n        onOptionChanged: Function,\n        onPointClick: Function,\n        onPointHoverChanged: Function,\n        onPointSelectionChanged: Function,\n        onSeriesClick: Function,\n        onSeriesHoverChanged: Function,\n        onSeriesSelectionChanged: Function,\n        onTooltipHidden: Function,\n        onTooltipShown: Function,\n        onZoomEnd: Function,\n        onZoomStart: Function,\n        palette: [Array, String],\n        paletteExtensionMode: String,\n        panes: [Array, Object],\n        pathModified: Boolean,\n        pointSelectionMode: String,\n        redrawOnResize: Boolean,\n        resizePanesOnZoom: Boolean,\n        resolveLabelOverlapping: String,\n        rotated: Boolean,\n        rtlEnabled: Boolean,\n        scrollBar: Object,\n        series: [Array, Object],\n        seriesSelectionMode: String,\n        seriesTemplate: Object,\n        size: Object,\n        stickyHovering: Boolean,\n        synchronizeMultiAxes: Boolean,\n        theme: String,\n        title: [Object, String],\n        tooltip: Object,\n        valueAxis: [Array, Object],\n        zoomAndPan: Object\n    },\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:adaptiveLayout\": null,\n        \"update:adjustOnZoom\": null,\n        \"update:animation\": null,\n        \"update:annotations\": null,\n        \"update:argumentAxis\": null,\n        \"update:autoHidePointMarkers\": null,\n        \"update:barGroupPadding\": null,\n        \"update:barGroupWidth\": null,\n        \"update:commonAnnotationSettings\": null,\n        \"update:commonAxisSettings\": null,\n        \"update:commonPaneSettings\": null,\n        \"update:commonSeriesSettings\": null,\n        \"update:containerBackgroundColor\": null,\n        \"update:crosshair\": null,\n        \"update:customizeAnnotation\": null,\n        \"update:customizeLabel\": null,\n        \"update:customizePoint\": null,\n        \"update:dataPrepareSettings\": null,\n        \"update:dataSource\": null,\n        \"update:defaultPane\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:export\": null,\n        \"update:legend\": null,\n        \"update:loadingIndicator\": null,\n        \"update:margin\": null,\n        \"update:maxBubbleSize\": null,\n        \"update:minBubbleSize\": null,\n        \"update:negativesAsZeroes\": null,\n        \"update:onArgumentAxisClick\": null,\n        \"update:onDisposing\": null,\n        \"update:onDone\": null,\n        \"update:onDrawn\": null,\n        \"update:onExported\": null,\n        \"update:onExporting\": null,\n        \"update:onFileSaving\": null,\n        \"update:onIncidentOccurred\": null,\n        \"update:onInitialized\": null,\n        \"update:onLegendClick\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onPointClick\": null,\n        \"update:onPointHoverChanged\": null,\n        \"update:onPointSelectionChanged\": null,\n        \"update:onSeriesClick\": null,\n        \"update:onSeriesHoverChanged\": null,\n        \"update:onSeriesSelectionChanged\": null,\n        \"update:onTooltipHidden\": null,\n        \"update:onTooltipShown\": null,\n        \"update:onZoomEnd\": null,\n        \"update:onZoomStart\": null,\n        \"update:palette\": null,\n        \"update:paletteExtensionMode\": null,\n        \"update:panes\": null,\n        \"update:pathModified\": null,\n        \"update:pointSelectionMode\": null,\n        \"update:redrawOnResize\": null,\n        \"update:resizePanesOnZoom\": null,\n        \"update:resolveLabelOverlapping\": null,\n        \"update:rotated\": null,\n        \"update:rtlEnabled\": null,\n        \"update:scrollBar\": null,\n        \"update:series\": null,\n        \"update:seriesSelectionMode\": null,\n        \"update:seriesTemplate\": null,\n        \"update:size\": null,\n        \"update:stickyHovering\": null,\n        \"update:synchronizeMultiAxes\": null,\n        \"update:theme\": null,\n        \"update:title\": null,\n        \"update:tooltip\": null,\n        \"update:valueAxis\": null,\n        \"update:zoomAndPan\": null,\n    },\n    computed: {\n        instance: function () {\n            return this.$_instance;\n        }\n    },\n    beforeCreate: function () {\n        this.$_WidgetClass = chart_1.default;\n        this.$_hasAsyncTemplate = true;\n        this.$_expectedChildren = {\n            adaptiveLayout: { isCollectionItem: false, optionName: \"adaptiveLayout\" },\n            animation: { isCollectionItem: false, optionName: \"animation\" },\n            annotation: { isCollectionItem: true, optionName: \"annotations\" },\n            argumentAxis: { isCollectionItem: false, optionName: \"argumentAxis\" },\n            chartTitle: { isCollectionItem: false, optionName: \"title\" },\n            commonAnnotationSettings: { isCollectionItem: false, optionName: \"commonAnnotationSettings\" },\n            commonAxisSettings: { isCollectionItem: false, optionName: \"commonAxisSettings\" },\n            commonPaneSettings: { isCollectionItem: false, optionName: \"commonPaneSettings\" },\n            commonSeriesSettings: { isCollectionItem: false, optionName: \"commonSeriesSettings\" },\n            crosshair: { isCollectionItem: false, optionName: \"crosshair\" },\n            dataPrepareSettings: { isCollectionItem: false, optionName: \"dataPrepareSettings\" },\n            export: { isCollectionItem: false, optionName: \"export\" },\n            legend: { isCollectionItem: false, optionName: \"legend\" },\n            loadingIndicator: { isCollectionItem: false, optionName: \"loadingIndicator\" },\n            margin: { isCollectionItem: false, optionName: \"margin\" },\n            pane: { isCollectionItem: true, optionName: \"panes\" },\n            scrollBar: { isCollectionItem: false, optionName: \"scrollBar\" },\n            series: { isCollectionItem: true, optionName: \"series\" },\n            seriesTemplate: { isCollectionItem: false, optionName: \"seriesTemplate\" },\n            size: { isCollectionItem: false, optionName: \"size\" },\n            title: { isCollectionItem: false, optionName: \"title\" },\n            tooltip: { isCollectionItem: false, optionName: \"tooltip\" },\n            valueAxis: { isCollectionItem: true, optionName: \"valueAxis\" },\n            zoomAndPan: { isCollectionItem: false, optionName: \"zoomAndPan\" }\n        };\n    }\n});\nexports.DxChart = DxChart;\nvar DxAdaptiveLayout = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:height\": null,\n        \"update:keepLabels\": null,\n        \"update:width\": null,\n    },\n    props: {\n        height: Number,\n        keepLabels: Boolean,\n        width: Number\n    }\n});\nexports.DxAdaptiveLayout = DxAdaptiveLayout;\nDxAdaptiveLayout.$_optionName = \"adaptiveLayout\";\nvar DxAggregation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculate\": null,\n        \"update:enabled\": null,\n        \"update:method\": null,\n    },\n    props: {\n        calculate: Function,\n        enabled: Boolean,\n        method: String\n    }\n});\nexports.DxAggregation = DxAggregation;\nDxAggregation.$_optionName = \"aggregation\";\nvar DxAggregationInterval = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:days\": null,\n        \"update:hours\": null,\n        \"update:milliseconds\": null,\n        \"update:minutes\": null,\n        \"update:months\": null,\n        \"update:quarters\": null,\n        \"update:seconds\": null,\n        \"update:weeks\": null,\n        \"update:years\": null,\n    },\n    props: {\n        days: Number,\n        hours: Number,\n        milliseconds: Number,\n        minutes: Number,\n        months: Number,\n        quarters: Number,\n        seconds: Number,\n        weeks: Number,\n        years: Number\n    }\n});\nexports.DxAggregationInterval = DxAggregationInterval;\nDxAggregationInterval.$_optionName = \"aggregationInterval\";\nvar DxAnimation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:enabled\": null,\n        \"update:maxPointCountSupported\": null,\n    },\n    props: {\n        duration: Number,\n        easing: String,\n        enabled: Boolean,\n        maxPointCountSupported: Number\n    }\n});\nexports.DxAnimation = DxAnimation;\nDxAnimation.$_optionName = \"animation\";\nvar DxAnnotation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowDragging\": null,\n        \"update:argument\": null,\n        \"update:arrowLength\": null,\n        \"update:arrowWidth\": null,\n        \"update:axis\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:customizeTooltip\": null,\n        \"update:data\": null,\n        \"update:description\": null,\n        \"update:font\": null,\n        \"update:height\": null,\n        \"update:image\": null,\n        \"update:name\": null,\n        \"update:offsetX\": null,\n        \"update:offsetY\": null,\n        \"update:opacity\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:series\": null,\n        \"update:shadow\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:textOverflow\": null,\n        \"update:tooltipEnabled\": null,\n        \"update:tooltipTemplate\": null,\n        \"update:type\": null,\n        \"update:value\": null,\n        \"update:width\": null,\n        \"update:wordWrap\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        allowDragging: Boolean,\n        argument: {},\n        arrowLength: Number,\n        arrowWidth: Number,\n        axis: String,\n        border: Object,\n        color: String,\n        customizeTooltip: Function,\n        data: {},\n        description: String,\n        font: Object,\n        height: Number,\n        image: [Object, String],\n        name: String,\n        offsetX: Number,\n        offsetY: Number,\n        opacity: Number,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        series: String,\n        shadow: Object,\n        template: {},\n        text: String,\n        textOverflow: String,\n        tooltipEnabled: Boolean,\n        tooltipTemplate: {},\n        type: String,\n        value: {},\n        width: Number,\n        wordWrap: String,\n        x: Number,\n        y: Number\n    }\n});\nexports.DxAnnotation = DxAnnotation;\nDxAnnotation.$_optionName = \"annotations\";\nDxAnnotation.$_isCollectionItem = true;\nDxAnnotation.$_expectedChildren = {\n    annotationBorder: { isCollectionItem: false, optionName: \"border\" },\n    annotationImage: { isCollectionItem: false, optionName: \"image\" },\n    border: { isCollectionItem: false, optionName: \"border\" },\n    font: { isCollectionItem: false, optionName: \"font\" },\n    image: { isCollectionItem: false, optionName: \"image\" },\n    shadow: { isCollectionItem: false, optionName: \"shadow\" }\n};\nvar DxAnnotationBorder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:cornerRadius\": null,\n        \"update:dashStyle\": null,\n        \"update:opacity\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        cornerRadius: Number,\n        dashStyle: String,\n        opacity: Number,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxAnnotationBorder = DxAnnotationBorder;\nDxAnnotationBorder.$_optionName = \"border\";\nvar DxAnnotationImage = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:height\": null,\n        \"update:url\": null,\n        \"update:width\": null,\n    },\n    props: {\n        height: Number,\n        url: String,\n        width: Number\n    }\n});\nexports.DxAnnotationImage = DxAnnotationImage;\nDxAnnotationImage.$_optionName = \"image\";\nvar DxArgumentAxis = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:aggregateByCategory\": null,\n        \"update:aggregatedPointsPosition\": null,\n        \"update:aggregationGroupWidth\": null,\n        \"update:aggregationInterval\": null,\n        \"update:allowDecimals\": null,\n        \"update:argumentType\": null,\n        \"update:axisDivisionFactor\": null,\n        \"update:breaks\": null,\n        \"update:breakStyle\": null,\n        \"update:categories\": null,\n        \"update:color\": null,\n        \"update:constantLines\": null,\n        \"update:constantLineStyle\": null,\n        \"update:customPosition\": null,\n        \"update:customPositionAxis\": null,\n        \"update:discreteAxisDivisionMode\": null,\n        \"update:endOnTick\": null,\n        \"update:grid\": null,\n        \"update:holidays\": null,\n        \"update:hoverMode\": null,\n        \"update:inverted\": null,\n        \"update:label\": null,\n        \"update:linearThreshold\": null,\n        \"update:logarithmBase\": null,\n        \"update:maxValueMargin\": null,\n        \"update:minorGrid\": null,\n        \"update:minorTick\": null,\n        \"update:minorTickCount\": null,\n        \"update:minorTickInterval\": null,\n        \"update:minValueMargin\": null,\n        \"update:minVisualRangeLength\": null,\n        \"update:offset\": null,\n        \"update:opacity\": null,\n        \"update:placeholderSize\": null,\n        \"update:position\": null,\n        \"update:singleWorkdays\": null,\n        \"update:strips\": null,\n        \"update:stripStyle\": null,\n        \"update:tick\": null,\n        \"update:tickInterval\": null,\n        \"update:title\": null,\n        \"update:type\": null,\n        \"update:valueMarginsEnabled\": null,\n        \"update:visible\": null,\n        \"update:visualRange\": null,\n        \"update:visualRangeUpdateMode\": null,\n        \"update:wholeRange\": null,\n        \"update:width\": null,\n        \"update:workdaysOnly\": null,\n        \"update:workWeek\": null,\n    },\n    props: {\n        aggregateByCategory: Boolean,\n        aggregatedPointsPosition: String,\n        aggregationGroupWidth: Number,\n        aggregationInterval: [Number, Object, String],\n        allowDecimals: Boolean,\n        argumentType: String,\n        axisDivisionFactor: Number,\n        breaks: Array,\n        breakStyle: Object,\n        categories: Array,\n        color: String,\n        constantLines: Array,\n        constantLineStyle: Object,\n        customPosition: {},\n        customPositionAxis: String,\n        discreteAxisDivisionMode: String,\n        endOnTick: Boolean,\n        grid: Object,\n        holidays: Array,\n        hoverMode: String,\n        inverted: Boolean,\n        label: Object,\n        linearThreshold: Number,\n        logarithmBase: Number,\n        maxValueMargin: Number,\n        minorGrid: Object,\n        minorTick: Object,\n        minorTickCount: Number,\n        minorTickInterval: [Number, Object, String],\n        minValueMargin: Number,\n        minVisualRangeLength: [Number, Object, String],\n        offset: Number,\n        opacity: Number,\n        placeholderSize: Number,\n        position: String,\n        singleWorkdays: Array,\n        strips: Array,\n        stripStyle: Object,\n        tick: Object,\n        tickInterval: [Number, Object, String],\n        title: [Object, String],\n        type: String,\n        valueMarginsEnabled: Boolean,\n        visible: Boolean,\n        visualRange: [Array, Object],\n        visualRangeUpdateMode: String,\n        wholeRange: [Array, Object],\n        width: Number,\n        workdaysOnly: Boolean,\n        workWeek: Array\n    }\n});\nexports.DxArgumentAxis = DxArgumentAxis;\nDxArgumentAxis.$_optionName = \"argumentAxis\";\nDxArgumentAxis.$_expectedChildren = {\n    aggregationInterval: { isCollectionItem: false, optionName: \"aggregationInterval\" },\n    axisConstantLineStyle: { isCollectionItem: false, optionName: \"constantLineStyle\" },\n    axisLabel: { isCollectionItem: false, optionName: \"label\" },\n    axisTitle: { isCollectionItem: false, optionName: \"title\" },\n    break: { isCollectionItem: true, optionName: \"breaks\" },\n    breakStyle: { isCollectionItem: false, optionName: \"breakStyle\" },\n    constantLine: { isCollectionItem: true, optionName: \"constantLines\" },\n    constantLineStyle: { isCollectionItem: false, optionName: \"constantLineStyle\" },\n    grid: { isCollectionItem: false, optionName: \"grid\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    minorGrid: { isCollectionItem: false, optionName: \"minorGrid\" },\n    minorTick: { isCollectionItem: false, optionName: \"minorTick\" },\n    minorTickInterval: { isCollectionItem: false, optionName: \"minorTickInterval\" },\n    minVisualRangeLength: { isCollectionItem: false, optionName: \"minVisualRangeLength\" },\n    strip: { isCollectionItem: true, optionName: \"strips\" },\n    stripStyle: { isCollectionItem: false, optionName: \"stripStyle\" },\n    tick: { isCollectionItem: false, optionName: \"tick\" },\n    tickInterval: { isCollectionItem: false, optionName: \"tickInterval\" },\n    title: { isCollectionItem: false, optionName: \"title\" },\n    visualRange: { isCollectionItem: false, optionName: \"visualRange\" },\n    wholeRange: { isCollectionItem: false, optionName: \"wholeRange\" }\n};\nvar DxArgumentFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxArgumentFormat = DxArgumentFormat;\nDxArgumentFormat.$_optionName = \"argumentFormat\";\nvar DxAxisConstantLineStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:label\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        label: Object,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        width: Number\n    }\n});\nexports.DxAxisConstantLineStyle = DxAxisConstantLineStyle;\nDxAxisConstantLineStyle.$_optionName = \"constantLineStyle\";\nvar DxAxisConstantLineStyleLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:position\": null,\n        \"update:verticalAlignment\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        font: Object,\n        horizontalAlignment: String,\n        position: String,\n        verticalAlignment: String,\n        visible: Boolean\n    }\n});\nexports.DxAxisConstantLineStyleLabel = DxAxisConstantLineStyleLabel;\nDxAxisConstantLineStyleLabel.$_optionName = \"label\";\nvar DxAxisLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:customizeHint\": null,\n        \"update:customizeText\": null,\n        \"update:displayMode\": null,\n        \"update:font\": null,\n        \"update:format\": null,\n        \"update:indentFromAxis\": null,\n        \"update:overlappingBehavior\": null,\n        \"update:position\": null,\n        \"update:rotationAngle\": null,\n        \"update:staggeringSpacing\": null,\n        \"update:template\": null,\n        \"update:textOverflow\": null,\n        \"update:visible\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        alignment: String,\n        customizeHint: Function,\n        customizeText: Function,\n        displayMode: String,\n        font: Object,\n        format: [Object, Function, String],\n        indentFromAxis: Number,\n        overlappingBehavior: String,\n        position: String,\n        rotationAngle: Number,\n        staggeringSpacing: Number,\n        template: {},\n        textOverflow: String,\n        visible: Boolean,\n        wordWrap: String\n    }\n});\nexports.DxAxisLabel = DxAxisLabel;\nDxAxisLabel.$_optionName = \"label\";\nvar DxAxisTitle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:font\": null,\n        \"update:margin\": null,\n        \"update:text\": null,\n        \"update:textOverflow\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        alignment: String,\n        font: Object,\n        margin: Number,\n        text: String,\n        textOverflow: String,\n        wordWrap: String\n    }\n});\nexports.DxAxisTitle = DxAxisTitle;\nDxAxisTitle.$_optionName = \"title\";\nvar DxBorder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:bottom\": null,\n        \"update:color\": null,\n        \"update:cornerRadius\": null,\n        \"update:dashStyle\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:right\": null,\n        \"update:top\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        bottom: Boolean,\n        color: String,\n        cornerRadius: Number,\n        dashStyle: String,\n        left: Boolean,\n        opacity: Number,\n        right: Boolean,\n        top: Boolean,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxBorder = DxBorder;\nDxBorder.$_optionName = \"border\";\nvar DxBreak = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:endValue\": null,\n        \"update:startValue\": null,\n    },\n    props: {\n        endValue: {},\n        startValue: {}\n    }\n});\nexports.DxBreak = DxBreak;\nDxBreak.$_optionName = \"breaks\";\nDxBreak.$_isCollectionItem = true;\nvar DxBreakStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:line\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        line: String,\n        width: Number\n    }\n});\nexports.DxBreakStyle = DxBreakStyle;\nDxBreakStyle.$_optionName = \"breakStyle\";\nvar DxChartTitle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:margin\": null,\n        \"update:placeholderSize\": null,\n        \"update:subtitle\": null,\n        \"update:text\": null,\n        \"update:textOverflow\": null,\n        \"update:verticalAlignment\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        font: Object,\n        horizontalAlignment: String,\n        margin: [Number, Object],\n        placeholderSize: Number,\n        subtitle: [Object, String],\n        text: String,\n        textOverflow: String,\n        verticalAlignment: String,\n        wordWrap: String\n    }\n});\nexports.DxChartTitle = DxChartTitle;\nDxChartTitle.$_optionName = \"title\";\nDxChartTitle.$_expectedChildren = {\n    chartTitleSubtitle: { isCollectionItem: false, optionName: \"subtitle\" },\n    font: { isCollectionItem: false, optionName: \"font\" },\n    margin: { isCollectionItem: false, optionName: \"margin\" },\n    subtitle: { isCollectionItem: false, optionName: \"subtitle\" }\n};\nvar DxChartTitleSubtitle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:offset\": null,\n        \"update:text\": null,\n        \"update:textOverflow\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        font: Object,\n        offset: Number,\n        text: String,\n        textOverflow: String,\n        wordWrap: String\n    }\n});\nexports.DxChartTitleSubtitle = DxChartTitleSubtitle;\nDxChartTitleSubtitle.$_optionName = \"subtitle\";\nDxChartTitleSubtitle.$_expectedChildren = {\n    font: { isCollectionItem: false, optionName: \"font\" }\n};\nvar DxCommonAnnotationSettings = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowDragging\": null,\n        \"update:argument\": null,\n        \"update:arrowLength\": null,\n        \"update:arrowWidth\": null,\n        \"update:axis\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:customizeTooltip\": null,\n        \"update:data\": null,\n        \"update:description\": null,\n        \"update:font\": null,\n        \"update:height\": null,\n        \"update:image\": null,\n        \"update:offsetX\": null,\n        \"update:offsetY\": null,\n        \"update:opacity\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:series\": null,\n        \"update:shadow\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:textOverflow\": null,\n        \"update:tooltipEnabled\": null,\n        \"update:tooltipTemplate\": null,\n        \"update:type\": null,\n        \"update:value\": null,\n        \"update:width\": null,\n        \"update:wordWrap\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        allowDragging: Boolean,\n        argument: {},\n        arrowLength: Number,\n        arrowWidth: Number,\n        axis: String,\n        border: Object,\n        color: String,\n        customizeTooltip: Function,\n        data: {},\n        description: String,\n        font: Object,\n        height: Number,\n        image: [Object, String],\n        offsetX: Number,\n        offsetY: Number,\n        opacity: Number,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        series: String,\n        shadow: Object,\n        template: {},\n        text: String,\n        textOverflow: String,\n        tooltipEnabled: Boolean,\n        tooltipTemplate: {},\n        type: String,\n        value: {},\n        width: Number,\n        wordWrap: String,\n        x: Number,\n        y: Number\n    }\n});\nexports.DxCommonAnnotationSettings = DxCommonAnnotationSettings;\nDxCommonAnnotationSettings.$_optionName = \"commonAnnotationSettings\";\nvar DxCommonAxisSettings = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:aggregatedPointsPosition\": null,\n        \"update:allowDecimals\": null,\n        \"update:breakStyle\": null,\n        \"update:color\": null,\n        \"update:constantLineStyle\": null,\n        \"update:discreteAxisDivisionMode\": null,\n        \"update:endOnTick\": null,\n        \"update:grid\": null,\n        \"update:inverted\": null,\n        \"update:label\": null,\n        \"update:maxValueMargin\": null,\n        \"update:minorGrid\": null,\n        \"update:minorTick\": null,\n        \"update:minValueMargin\": null,\n        \"update:opacity\": null,\n        \"update:placeholderSize\": null,\n        \"update:stripStyle\": null,\n        \"update:tick\": null,\n        \"update:title\": null,\n        \"update:valueMarginsEnabled\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        aggregatedPointsPosition: String,\n        allowDecimals: Boolean,\n        breakStyle: Object,\n        color: String,\n        constantLineStyle: Object,\n        discreteAxisDivisionMode: String,\n        endOnTick: Boolean,\n        grid: Object,\n        inverted: Boolean,\n        label: Object,\n        maxValueMargin: Number,\n        minorGrid: Object,\n        minorTick: Object,\n        minValueMargin: Number,\n        opacity: Number,\n        placeholderSize: Number,\n        stripStyle: Object,\n        tick: Object,\n        title: Object,\n        valueMarginsEnabled: Boolean,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxCommonAxisSettings = DxCommonAxisSettings;\nDxCommonAxisSettings.$_optionName = \"commonAxisSettings\";\nDxCommonAxisSettings.$_expectedChildren = {\n    commonAxisSettingsConstantLineStyle: { isCollectionItem: false, optionName: \"constantLineStyle\" },\n    commonAxisSettingsLabel: { isCollectionItem: false, optionName: \"label\" },\n    commonAxisSettingsTitle: { isCollectionItem: false, optionName: \"title\" },\n    constantLineStyle: { isCollectionItem: false, optionName: \"constantLineStyle\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    title: { isCollectionItem: false, optionName: \"title\" }\n};\nvar DxCommonAxisSettingsConstantLineStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:label\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        label: Object,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        width: Number\n    }\n});\nexports.DxCommonAxisSettingsConstantLineStyle = DxCommonAxisSettingsConstantLineStyle;\nDxCommonAxisSettingsConstantLineStyle.$_optionName = \"constantLineStyle\";\nDxCommonAxisSettingsConstantLineStyle.$_expectedChildren = {\n    commonAxisSettingsConstantLineStyleLabel: { isCollectionItem: false, optionName: \"label\" },\n    label: { isCollectionItem: false, optionName: \"label\" }\n};\nvar DxCommonAxisSettingsConstantLineStyleLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:position\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        font: Object,\n        position: String,\n        visible: Boolean\n    }\n});\nexports.DxCommonAxisSettingsConstantLineStyleLabel = DxCommonAxisSettingsConstantLineStyleLabel;\nDxCommonAxisSettingsConstantLineStyleLabel.$_optionName = \"label\";\nvar DxCommonAxisSettingsLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:displayMode\": null,\n        \"update:font\": null,\n        \"update:indentFromAxis\": null,\n        \"update:overlappingBehavior\": null,\n        \"update:position\": null,\n        \"update:rotationAngle\": null,\n        \"update:staggeringSpacing\": null,\n        \"update:template\": null,\n        \"update:textOverflow\": null,\n        \"update:visible\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        alignment: String,\n        displayMode: String,\n        font: Object,\n        indentFromAxis: Number,\n        overlappingBehavior: String,\n        position: String,\n        rotationAngle: Number,\n        staggeringSpacing: Number,\n        template: {},\n        textOverflow: String,\n        visible: Boolean,\n        wordWrap: String\n    }\n});\nexports.DxCommonAxisSettingsLabel = DxCommonAxisSettingsLabel;\nDxCommonAxisSettingsLabel.$_optionName = \"label\";\nvar DxCommonAxisSettingsTitle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:font\": null,\n        \"update:margin\": null,\n        \"update:textOverflow\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        alignment: String,\n        font: Object,\n        margin: Number,\n        textOverflow: String,\n        wordWrap: String\n    }\n});\nexports.DxCommonAxisSettingsTitle = DxCommonAxisSettingsTitle;\nDxCommonAxisSettingsTitle.$_optionName = \"title\";\nvar DxCommonPaneSettings = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:backgroundColor\": null,\n        \"update:border\": null,\n    },\n    props: {\n        backgroundColor: String,\n        border: Object\n    }\n});\nexports.DxCommonPaneSettings = DxCommonPaneSettings;\nDxCommonPaneSettings.$_optionName = \"commonPaneSettings\";\nDxCommonPaneSettings.$_expectedChildren = {\n    border: { isCollectionItem: false, optionName: \"border\" },\n    paneBorder: { isCollectionItem: false, optionName: \"border\" }\n};\nvar DxCommonSeriesSettings = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:aggregation\": null,\n        \"update:area\": null,\n        \"update:argumentField\": null,\n        \"update:axis\": null,\n        \"update:bar\": null,\n        \"update:barOverlapGroup\": null,\n        \"update:barPadding\": null,\n        \"update:barWidth\": null,\n        \"update:border\": null,\n        \"update:bubble\": null,\n        \"update:candlestick\": null,\n        \"update:closeValueField\": null,\n        \"update:color\": null,\n        \"update:cornerRadius\": null,\n        \"update:dashStyle\": null,\n        \"update:fullstackedarea\": null,\n        \"update:fullstackedbar\": null,\n        \"update:fullstackedline\": null,\n        \"update:fullstackedspline\": null,\n        \"update:fullstackedsplinearea\": null,\n        \"update:highValueField\": null,\n        \"update:hoverMode\": null,\n        \"update:hoverStyle\": null,\n        \"update:ignoreEmptyPoints\": null,\n        \"update:innerColor\": null,\n        \"update:label\": null,\n        \"update:line\": null,\n        \"update:lowValueField\": null,\n        \"update:maxLabelCount\": null,\n        \"update:minBarSize\": null,\n        \"update:opacity\": null,\n        \"update:openValueField\": null,\n        \"update:pane\": null,\n        \"update:point\": null,\n        \"update:rangearea\": null,\n        \"update:rangebar\": null,\n        \"update:rangeValue1Field\": null,\n        \"update:rangeValue2Field\": null,\n        \"update:reduction\": null,\n        \"update:scatter\": null,\n        \"update:selectionMode\": null,\n        \"update:selectionStyle\": null,\n        \"update:showInLegend\": null,\n        \"update:sizeField\": null,\n        \"update:spline\": null,\n        \"update:splinearea\": null,\n        \"update:stack\": null,\n        \"update:stackedarea\": null,\n        \"update:stackedbar\": null,\n        \"update:stackedline\": null,\n        \"update:stackedspline\": null,\n        \"update:stackedsplinearea\": null,\n        \"update:steparea\": null,\n        \"update:stepline\": null,\n        \"update:stock\": null,\n        \"update:tagField\": null,\n        \"update:type\": null,\n        \"update:valueErrorBar\": null,\n        \"update:valueField\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        aggregation: Object,\n        area: {},\n        argumentField: String,\n        axis: String,\n        bar: {},\n        barOverlapGroup: String,\n        barPadding: Number,\n        barWidth: Number,\n        border: Object,\n        bubble: {},\n        candlestick: {},\n        closeValueField: String,\n        color: String,\n        cornerRadius: Number,\n        dashStyle: String,\n        fullstackedarea: {},\n        fullstackedbar: {},\n        fullstackedline: {},\n        fullstackedspline: {},\n        fullstackedsplinearea: {},\n        highValueField: String,\n        hoverMode: String,\n        hoverStyle: Object,\n        ignoreEmptyPoints: Boolean,\n        innerColor: String,\n        label: Object,\n        line: {},\n        lowValueField: String,\n        maxLabelCount: Number,\n        minBarSize: Number,\n        opacity: Number,\n        openValueField: String,\n        pane: String,\n        point: Object,\n        rangearea: {},\n        rangebar: {},\n        rangeValue1Field: String,\n        rangeValue2Field: String,\n        reduction: Object,\n        scatter: {},\n        selectionMode: String,\n        selectionStyle: Object,\n        showInLegend: Boolean,\n        sizeField: String,\n        spline: {},\n        splinearea: {},\n        stack: String,\n        stackedarea: {},\n        stackedbar: {},\n        stackedline: {},\n        stackedspline: {},\n        stackedsplinearea: {},\n        steparea: {},\n        stepline: {},\n        stock: {},\n        tagField: String,\n        type: String,\n        valueErrorBar: Object,\n        valueField: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxCommonSeriesSettings = DxCommonSeriesSettings;\nDxCommonSeriesSettings.$_optionName = \"commonSeriesSettings\";\nDxCommonSeriesSettings.$_expectedChildren = {\n    aggregation: { isCollectionItem: false, optionName: \"aggregation\" },\n    border: { isCollectionItem: false, optionName: \"border\" },\n    commonSeriesSettingsHoverStyle: { isCollectionItem: false, optionName: \"hoverStyle\" },\n    commonSeriesSettingsLabel: { isCollectionItem: false, optionName: \"label\" },\n    commonSeriesSettingsSelectionStyle: { isCollectionItem: false, optionName: \"selectionStyle\" },\n    hoverStyle: { isCollectionItem: false, optionName: \"hoverStyle\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    point: { isCollectionItem: false, optionName: \"point\" },\n    reduction: { isCollectionItem: false, optionName: \"reduction\" },\n    selectionStyle: { isCollectionItem: false, optionName: \"selectionStyle\" },\n    seriesBorder: { isCollectionItem: false, optionName: \"border\" },\n    valueErrorBar: { isCollectionItem: false, optionName: \"valueErrorBar\" }\n};\nvar DxCommonSeriesSettingsHoverStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:hatching\": null,\n        \"update:width\": null,\n    },\n    props: {\n        border: Object,\n        color: String,\n        dashStyle: String,\n        hatching: Object,\n        width: Number\n    }\n});\nexports.DxCommonSeriesSettingsHoverStyle = DxCommonSeriesSettingsHoverStyle;\nDxCommonSeriesSettingsHoverStyle.$_optionName = \"hoverStyle\";\nDxCommonSeriesSettingsHoverStyle.$_expectedChildren = {\n    border: { isCollectionItem: false, optionName: \"border\" },\n    hatching: { isCollectionItem: false, optionName: \"hatching\" },\n    seriesBorder: { isCollectionItem: false, optionName: \"border\" }\n};\nvar DxCommonSeriesSettingsLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:argumentFormat\": null,\n        \"update:backgroundColor\": null,\n        \"update:border\": null,\n        \"update:connector\": null,\n        \"update:customizeText\": null,\n        \"update:font\": null,\n        \"update:format\": null,\n        \"update:horizontalOffset\": null,\n        \"update:position\": null,\n        \"update:rotationAngle\": null,\n        \"update:showForZeroValues\": null,\n        \"update:verticalOffset\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        alignment: String,\n        argumentFormat: [Object, Function, String],\n        backgroundColor: String,\n        border: Object,\n        connector: Object,\n        customizeText: Function,\n        font: Object,\n        format: [Object, Function, String],\n        horizontalOffset: Number,\n        position: String,\n        rotationAngle: Number,\n        showForZeroValues: Boolean,\n        verticalOffset: Number,\n        visible: Boolean\n    }\n});\nexports.DxCommonSeriesSettingsLabel = DxCommonSeriesSettingsLabel;\nDxCommonSeriesSettingsLabel.$_optionName = \"label\";\nDxCommonSeriesSettingsLabel.$_expectedChildren = {\n    argumentFormat: { isCollectionItem: false, optionName: \"argumentFormat\" },\n    border: { isCollectionItem: false, optionName: \"border\" },\n    connector: { isCollectionItem: false, optionName: \"connector\" },\n    font: { isCollectionItem: false, optionName: \"font\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    seriesBorder: { isCollectionItem: false, optionName: \"border\" }\n};\nvar DxCommonSeriesSettingsSelectionStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:hatching\": null,\n        \"update:width\": null,\n    },\n    props: {\n        border: Object,\n        color: String,\n        dashStyle: String,\n        hatching: Object,\n        width: Number\n    }\n});\nexports.DxCommonSeriesSettingsSelectionStyle = DxCommonSeriesSettingsSelectionStyle;\nDxCommonSeriesSettingsSelectionStyle.$_optionName = \"selectionStyle\";\nDxCommonSeriesSettingsSelectionStyle.$_expectedChildren = {\n    border: { isCollectionItem: false, optionName: \"border\" },\n    hatching: { isCollectionItem: false, optionName: \"hatching\" },\n    seriesBorder: { isCollectionItem: false, optionName: \"border\" }\n};\nvar DxConnector = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxConnector = DxConnector;\nDxConnector.$_optionName = \"connector\";\nvar DxConstantLine = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:displayBehindSeries\": null,\n        \"update:extendAxis\": null,\n        \"update:label\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:value\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        displayBehindSeries: Boolean,\n        extendAxis: Boolean,\n        label: Object,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        value: {},\n        width: Number\n    }\n});\nexports.DxConstantLine = DxConstantLine;\nDxConstantLine.$_optionName = \"constantLines\";\nDxConstantLine.$_isCollectionItem = true;\nvar DxConstantLineLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:position\": null,\n        \"update:text\": null,\n        \"update:verticalAlignment\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        font: Object,\n        horizontalAlignment: String,\n        position: String,\n        text: String,\n        verticalAlignment: String,\n        visible: Boolean\n    }\n});\nexports.DxConstantLineLabel = DxConstantLineLabel;\nDxConstantLineLabel.$_optionName = \"label\";\nvar DxConstantLineStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:label\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        label: Object,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        width: Number\n    }\n});\nexports.DxConstantLineStyle = DxConstantLineStyle;\nDxConstantLineStyle.$_optionName = \"constantLineStyle\";\nvar DxCrosshair = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:enabled\": null,\n        \"update:horizontalLine\": null,\n        \"update:label\": null,\n        \"update:opacity\": null,\n        \"update:verticalLine\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        enabled: Boolean,\n        horizontalLine: [Boolean, Object],\n        label: Object,\n        opacity: Number,\n        verticalLine: [Boolean, Object],\n        width: Number\n    }\n});\nexports.DxCrosshair = DxCrosshair;\nDxCrosshair.$_optionName = \"crosshair\";\nDxCrosshair.$_expectedChildren = {\n    horizontalLine: { isCollectionItem: false, optionName: \"horizontalLine\" },\n    horizontalLineLabel: { isCollectionItem: false, optionName: \"label\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    verticalLine: { isCollectionItem: false, optionName: \"verticalLine\" }\n};\nvar DxDataPrepareSettings = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:checkTypeForAllData\": null,\n        \"update:convertToAxisDataType\": null,\n        \"update:sortingMethod\": null,\n    },\n    props: {\n        checkTypeForAllData: Boolean,\n        convertToAxisDataType: Boolean,\n        sortingMethod: [Boolean, Function]\n    }\n});\nexports.DxDataPrepareSettings = DxDataPrepareSettings;\nDxDataPrepareSettings.$_optionName = \"dataPrepareSettings\";\nvar DxDragBoxStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:opacity\": null,\n    },\n    props: {\n        color: String,\n        opacity: Number\n    }\n});\nexports.DxDragBoxStyle = DxDragBoxStyle;\nDxDragBoxStyle.$_optionName = \"dragBoxStyle\";\nvar DxExport = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:backgroundColor\": null,\n        \"update:enabled\": null,\n        \"update:fileName\": null,\n        \"update:formats\": null,\n        \"update:margin\": null,\n        \"update:printingEnabled\": null,\n        \"update:proxyUrl\": null,\n        \"update:svgToCanvas\": null,\n    },\n    props: {\n        backgroundColor: String,\n        enabled: Boolean,\n        fileName: String,\n        formats: Array,\n        margin: Number,\n        printingEnabled: Boolean,\n        proxyUrl: String,\n        svgToCanvas: Function\n    }\n});\nexports.DxExport = DxExport;\nDxExport.$_optionName = \"export\";\nvar DxFont = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:family\": null,\n        \"update:opacity\": null,\n        \"update:size\": null,\n        \"update:weight\": null,\n    },\n    props: {\n        color: String,\n        family: String,\n        opacity: Number,\n        size: [Number, String],\n        weight: Number\n    }\n});\nexports.DxFont = DxFont;\nDxFont.$_optionName = \"font\";\nvar DxFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxFormat = DxFormat;\nDxFormat.$_optionName = \"format\";\nvar DxGrid = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:opacity\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        opacity: Number,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxGrid = DxGrid;\nDxGrid.$_optionName = \"grid\";\nvar DxHatching = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:direction\": null,\n        \"update:opacity\": null,\n        \"update:step\": null,\n        \"update:width\": null,\n    },\n    props: {\n        direction: String,\n        opacity: Number,\n        step: Number,\n        width: Number\n    }\n});\nexports.DxHatching = DxHatching;\nDxHatching.$_optionName = \"hatching\";\nvar DxHeight = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:rangeMaxPoint\": null,\n        \"update:rangeMinPoint\": null,\n    },\n    props: {\n        rangeMaxPoint: Number,\n        rangeMinPoint: Number\n    }\n});\nexports.DxHeight = DxHeight;\nDxHeight.$_optionName = \"height\";\nvar DxHorizontalLine = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:label\": null,\n        \"update:opacity\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        label: Object,\n        opacity: Number,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxHorizontalLine = DxHorizontalLine;\nDxHorizontalLine.$_optionName = \"horizontalLine\";\nDxHorizontalLine.$_expectedChildren = {\n    horizontalLineLabel: { isCollectionItem: false, optionName: \"label\" },\n    label: { isCollectionItem: false, optionName: \"label\" }\n};\nvar DxHorizontalLineLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:backgroundColor\": null,\n        \"update:customizeText\": null,\n        \"update:font\": null,\n        \"update:format\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        backgroundColor: String,\n        customizeText: Function,\n        font: Object,\n        format: [Object, Function, String],\n        visible: Boolean\n    }\n});\nexports.DxHorizontalLineLabel = DxHorizontalLineLabel;\nDxHorizontalLineLabel.$_optionName = \"label\";\nvar DxHoverStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:hatching\": null,\n        \"update:size\": null,\n        \"update:width\": null,\n    },\n    props: {\n        border: Object,\n        color: String,\n        dashStyle: String,\n        hatching: Object,\n        size: Number,\n        width: Number\n    }\n});\nexports.DxHoverStyle = DxHoverStyle;\nDxHoverStyle.$_optionName = \"hoverStyle\";\nvar DxImage = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:height\": null,\n        \"update:url\": null,\n        \"update:width\": null,\n    },\n    props: {\n        height: Number,\n        url: String,\n        width: Number\n    }\n});\nexports.DxImage = DxImage;\nDxImage.$_optionName = \"image\";\nvar DxLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:argumentFormat\": null,\n        \"update:backgroundColor\": null,\n        \"update:border\": null,\n        \"update:connector\": null,\n        \"update:customizeHint\": null,\n        \"update:customizeText\": null,\n        \"update:displayMode\": null,\n        \"update:font\": null,\n        \"update:format\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:horizontalOffset\": null,\n        \"update:indentFromAxis\": null,\n        \"update:overlappingBehavior\": null,\n        \"update:position\": null,\n        \"update:rotationAngle\": null,\n        \"update:showForZeroValues\": null,\n        \"update:staggeringSpacing\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:textOverflow\": null,\n        \"update:verticalAlignment\": null,\n        \"update:verticalOffset\": null,\n        \"update:visible\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        alignment: String,\n        argumentFormat: [Object, Function, String],\n        backgroundColor: String,\n        border: Object,\n        connector: Object,\n        customizeHint: Function,\n        customizeText: Function,\n        displayMode: String,\n        font: Object,\n        format: [Object, Function, String],\n        horizontalAlignment: String,\n        horizontalOffset: Number,\n        indentFromAxis: Number,\n        overlappingBehavior: String,\n        position: String,\n        rotationAngle: Number,\n        showForZeroValues: Boolean,\n        staggeringSpacing: Number,\n        template: {},\n        text: String,\n        textOverflow: String,\n        verticalAlignment: String,\n        verticalOffset: Number,\n        visible: Boolean,\n        wordWrap: String\n    }\n});\nexports.DxLabel = DxLabel;\nDxLabel.$_optionName = \"label\";\nvar DxLegend = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:backgroundColor\": null,\n        \"update:border\": null,\n        \"update:columnCount\": null,\n        \"update:columnItemSpacing\": null,\n        \"update:customizeHint\": null,\n        \"update:customizeItems\": null,\n        \"update:customizeText\": null,\n        \"update:font\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:hoverMode\": null,\n        \"update:itemsAlignment\": null,\n        \"update:itemTextPosition\": null,\n        \"update:margin\": null,\n        \"update:markerSize\": null,\n        \"update:markerTemplate\": null,\n        \"update:orientation\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:position\": null,\n        \"update:rowCount\": null,\n        \"update:rowItemSpacing\": null,\n        \"update:title\": null,\n        \"update:verticalAlignment\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        backgroundColor: String,\n        border: Object,\n        columnCount: Number,\n        columnItemSpacing: Number,\n        customizeHint: Function,\n        customizeItems: Function,\n        customizeText: Function,\n        font: Object,\n        horizontalAlignment: String,\n        hoverMode: String,\n        itemsAlignment: String,\n        itemTextPosition: String,\n        margin: [Number, Object],\n        markerSize: Number,\n        markerTemplate: {},\n        orientation: String,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        position: String,\n        rowCount: Number,\n        rowItemSpacing: Number,\n        title: [Object, String],\n        verticalAlignment: String,\n        visible: Boolean\n    }\n});\nexports.DxLegend = DxLegend;\nDxLegend.$_optionName = \"legend\";\nDxLegend.$_expectedChildren = {\n    annotationBorder: { isCollectionItem: false, optionName: \"border\" },\n    border: { isCollectionItem: false, optionName: \"border\" },\n    font: { isCollectionItem: false, optionName: \"font\" },\n    legendTitle: { isCollectionItem: false, optionName: \"title\" },\n    margin: { isCollectionItem: false, optionName: \"margin\" },\n    title: { isCollectionItem: false, optionName: \"title\" }\n};\nvar DxLegendTitle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:margin\": null,\n        \"update:placeholderSize\": null,\n        \"update:subtitle\": null,\n        \"update:text\": null,\n        \"update:verticalAlignment\": null,\n    },\n    props: {\n        font: Object,\n        horizontalAlignment: String,\n        margin: Object,\n        placeholderSize: Number,\n        subtitle: [Object, String],\n        text: String,\n        verticalAlignment: String\n    }\n});\nexports.DxLegendTitle = DxLegendTitle;\nDxLegendTitle.$_optionName = \"title\";\nDxLegendTitle.$_expectedChildren = {\n    font: { isCollectionItem: false, optionName: \"font\" },\n    legendTitleSubtitle: { isCollectionItem: false, optionName: \"subtitle\" },\n    margin: { isCollectionItem: false, optionName: \"margin\" },\n    subtitle: { isCollectionItem: false, optionName: \"subtitle\" }\n};\nvar DxLegendTitleSubtitle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:offset\": null,\n        \"update:text\": null,\n    },\n    props: {\n        font: Object,\n        offset: Number,\n        text: String\n    }\n});\nexports.DxLegendTitleSubtitle = DxLegendTitleSubtitle;\nDxLegendTitleSubtitle.$_optionName = \"subtitle\";\nDxLegendTitleSubtitle.$_expectedChildren = {\n    font: { isCollectionItem: false, optionName: \"font\" }\n};\nvar DxLength = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:days\": null,\n        \"update:hours\": null,\n        \"update:milliseconds\": null,\n        \"update:minutes\": null,\n        \"update:months\": null,\n        \"update:quarters\": null,\n        \"update:seconds\": null,\n        \"update:weeks\": null,\n        \"update:years\": null,\n    },\n    props: {\n        days: Number,\n        hours: Number,\n        milliseconds: Number,\n        minutes: Number,\n        months: Number,\n        quarters: Number,\n        seconds: Number,\n        weeks: Number,\n        years: Number\n    }\n});\nexports.DxLength = DxLength;\nDxLength.$_optionName = \"length\";\nvar DxLoadingIndicator = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:backgroundColor\": null,\n        \"update:enabled\": null,\n        \"update:font\": null,\n        \"update:show\": null,\n        \"update:text\": null,\n    },\n    props: {\n        backgroundColor: String,\n        enabled: Boolean,\n        font: Object,\n        show: Boolean,\n        text: String\n    }\n});\nexports.DxLoadingIndicator = DxLoadingIndicator;\nDxLoadingIndicator.$_optionName = \"loadingIndicator\";\nDxLoadingIndicator.$_expectedChildren = {\n    font: { isCollectionItem: false, optionName: \"font\" }\n};\nvar DxMargin = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:bottom\": null,\n        \"update:left\": null,\n        \"update:right\": null,\n        \"update:top\": null,\n    },\n    props: {\n        bottom: Number,\n        left: Number,\n        right: Number,\n        top: Number\n    }\n});\nexports.DxMargin = DxMargin;\nDxMargin.$_optionName = \"margin\";\nvar DxMinorGrid = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:opacity\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        opacity: Number,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxMinorGrid = DxMinorGrid;\nDxMinorGrid.$_optionName = \"minorGrid\";\nvar DxMinorTick = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:length\": null,\n        \"update:opacity\": null,\n        \"update:shift\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        length: Number,\n        opacity: Number,\n        shift: Number,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxMinorTick = DxMinorTick;\nDxMinorTick.$_optionName = \"minorTick\";\nvar DxMinorTickInterval = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:days\": null,\n        \"update:hours\": null,\n        \"update:milliseconds\": null,\n        \"update:minutes\": null,\n        \"update:months\": null,\n        \"update:quarters\": null,\n        \"update:seconds\": null,\n        \"update:weeks\": null,\n        \"update:years\": null,\n    },\n    props: {\n        days: Number,\n        hours: Number,\n        milliseconds: Number,\n        minutes: Number,\n        months: Number,\n        quarters: Number,\n        seconds: Number,\n        weeks: Number,\n        years: Number\n    }\n});\nexports.DxMinorTickInterval = DxMinorTickInterval;\nDxMinorTickInterval.$_optionName = \"minorTickInterval\";\nvar DxMinVisualRangeLength = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:days\": null,\n        \"update:hours\": null,\n        \"update:milliseconds\": null,\n        \"update:minutes\": null,\n        \"update:months\": null,\n        \"update:quarters\": null,\n        \"update:seconds\": null,\n        \"update:weeks\": null,\n        \"update:years\": null,\n    },\n    props: {\n        days: Number,\n        hours: Number,\n        milliseconds: Number,\n        minutes: Number,\n        months: Number,\n        quarters: Number,\n        seconds: Number,\n        weeks: Number,\n        years: Number\n    }\n});\nexports.DxMinVisualRangeLength = DxMinVisualRangeLength;\nDxMinVisualRangeLength.$_optionName = \"minVisualRangeLength\";\nvar DxPane = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:backgroundColor\": null,\n        \"update:border\": null,\n        \"update:height\": null,\n        \"update:name\": null,\n    },\n    props: {\n        backgroundColor: String,\n        border: Object,\n        height: [Number, String],\n        name: String\n    }\n});\nexports.DxPane = DxPane;\nDxPane.$_optionName = \"panes\";\nDxPane.$_isCollectionItem = true;\nvar DxPaneBorder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:bottom\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:right\": null,\n        \"update:top\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        bottom: Boolean,\n        color: String,\n        dashStyle: String,\n        left: Boolean,\n        opacity: Number,\n        right: Boolean,\n        top: Boolean,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxPaneBorder = DxPaneBorder;\nDxPaneBorder.$_optionName = \"border\";\nvar DxPoint = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:hoverMode\": null,\n        \"update:hoverStyle\": null,\n        \"update:image\": null,\n        \"update:selectionMode\": null,\n        \"update:selectionStyle\": null,\n        \"update:size\": null,\n        \"update:symbol\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        border: Object,\n        color: String,\n        hoverMode: String,\n        hoverStyle: Object,\n        image: [Object, String],\n        selectionMode: String,\n        selectionStyle: Object,\n        size: Number,\n        symbol: String,\n        visible: Boolean\n    }\n});\nexports.DxPoint = DxPoint;\nDxPoint.$_optionName = \"point\";\nDxPoint.$_expectedChildren = {\n    border: { isCollectionItem: false, optionName: \"border\" },\n    hoverStyle: { isCollectionItem: false, optionName: \"hoverStyle\" },\n    image: { isCollectionItem: false, optionName: \"image\" },\n    pointBorder: { isCollectionItem: false, optionName: \"border\" },\n    pointHoverStyle: { isCollectionItem: false, optionName: \"hoverStyle\" },\n    pointImage: { isCollectionItem: false, optionName: \"image\" },\n    pointSelectionStyle: { isCollectionItem: false, optionName: \"selectionStyle\" },\n    selectionStyle: { isCollectionItem: false, optionName: \"selectionStyle\" }\n};\nvar DxPointBorder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxPointBorder = DxPointBorder;\nDxPointBorder.$_optionName = \"border\";\nvar DxPointHoverStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:size\": null,\n    },\n    props: {\n        border: Object,\n        color: String,\n        size: Number\n    }\n});\nexports.DxPointHoverStyle = DxPointHoverStyle;\nDxPointHoverStyle.$_optionName = \"hoverStyle\";\nDxPointHoverStyle.$_expectedChildren = {\n    border: { isCollectionItem: false, optionName: \"border\" },\n    pointBorder: { isCollectionItem: false, optionName: \"border\" }\n};\nvar DxPointImage = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:height\": null,\n        \"update:url\": null,\n        \"update:width\": null,\n    },\n    props: {\n        height: [Number, Object],\n        url: [Object, String],\n        width: [Number, Object]\n    }\n});\nexports.DxPointImage = DxPointImage;\nDxPointImage.$_optionName = \"image\";\nDxPointImage.$_expectedChildren = {\n    height: { isCollectionItem: false, optionName: \"height\" },\n    url: { isCollectionItem: false, optionName: \"url\" },\n    width: { isCollectionItem: false, optionName: \"width\" }\n};\nvar DxPointSelectionStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:size\": null,\n    },\n    props: {\n        border: Object,\n        color: String,\n        size: Number\n    }\n});\nexports.DxPointSelectionStyle = DxPointSelectionStyle;\nDxPointSelectionStyle.$_optionName = \"selectionStyle\";\nDxPointSelectionStyle.$_expectedChildren = {\n    border: { isCollectionItem: false, optionName: \"border\" },\n    pointBorder: { isCollectionItem: false, optionName: \"border\" }\n};\nvar DxReduction = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:level\": null,\n    },\n    props: {\n        color: String,\n        level: String\n    }\n});\nexports.DxReduction = DxReduction;\nDxReduction.$_optionName = \"reduction\";\nvar DxScrollBar = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:offset\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        offset: Number,\n        opacity: Number,\n        position: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxScrollBar = DxScrollBar;\nDxScrollBar.$_optionName = \"scrollBar\";\nvar DxSelectionStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:hatching\": null,\n        \"update:size\": null,\n        \"update:width\": null,\n    },\n    props: {\n        border: Object,\n        color: String,\n        dashStyle: String,\n        hatching: Object,\n        size: Number,\n        width: Number\n    }\n});\nexports.DxSelectionStyle = DxSelectionStyle;\nDxSelectionStyle.$_optionName = \"selectionStyle\";\nvar DxSeries = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:aggregation\": null,\n        \"update:argumentField\": null,\n        \"update:axis\": null,\n        \"update:barOverlapGroup\": null,\n        \"update:barPadding\": null,\n        \"update:barWidth\": null,\n        \"update:border\": null,\n        \"update:closeValueField\": null,\n        \"update:color\": null,\n        \"update:cornerRadius\": null,\n        \"update:dashStyle\": null,\n        \"update:highValueField\": null,\n        \"update:hoverMode\": null,\n        \"update:hoverStyle\": null,\n        \"update:ignoreEmptyPoints\": null,\n        \"update:innerColor\": null,\n        \"update:label\": null,\n        \"update:lowValueField\": null,\n        \"update:maxLabelCount\": null,\n        \"update:minBarSize\": null,\n        \"update:name\": null,\n        \"update:opacity\": null,\n        \"update:openValueField\": null,\n        \"update:pane\": null,\n        \"update:point\": null,\n        \"update:rangeValue1Field\": null,\n        \"update:rangeValue2Field\": null,\n        \"update:reduction\": null,\n        \"update:selectionMode\": null,\n        \"update:selectionStyle\": null,\n        \"update:showInLegend\": null,\n        \"update:sizeField\": null,\n        \"update:stack\": null,\n        \"update:tag\": null,\n        \"update:tagField\": null,\n        \"update:type\": null,\n        \"update:valueErrorBar\": null,\n        \"update:valueField\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        aggregation: Object,\n        argumentField: String,\n        axis: String,\n        barOverlapGroup: String,\n        barPadding: Number,\n        barWidth: Number,\n        border: Object,\n        closeValueField: String,\n        color: String,\n        cornerRadius: Number,\n        dashStyle: String,\n        highValueField: String,\n        hoverMode: String,\n        hoverStyle: Object,\n        ignoreEmptyPoints: Boolean,\n        innerColor: String,\n        label: Object,\n        lowValueField: String,\n        maxLabelCount: Number,\n        minBarSize: Number,\n        name: String,\n        opacity: Number,\n        openValueField: String,\n        pane: String,\n        point: Object,\n        rangeValue1Field: String,\n        rangeValue2Field: String,\n        reduction: Object,\n        selectionMode: String,\n        selectionStyle: Object,\n        showInLegend: Boolean,\n        sizeField: String,\n        stack: String,\n        tag: {},\n        tagField: String,\n        type: String,\n        valueErrorBar: Object,\n        valueField: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxSeries = DxSeries;\nDxSeries.$_optionName = \"series\";\nDxSeries.$_isCollectionItem = true;\nvar DxSeriesBorder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxSeriesBorder = DxSeriesBorder;\nDxSeriesBorder.$_optionName = \"border\";\nvar DxSeriesTemplate = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customizeSeries\": null,\n        \"update:nameField\": null,\n    },\n    props: {\n        customizeSeries: Function,\n        nameField: String\n    }\n});\nexports.DxSeriesTemplate = DxSeriesTemplate;\nDxSeriesTemplate.$_optionName = \"seriesTemplate\";\nvar DxShadow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:blur\": null,\n        \"update:color\": null,\n        \"update:offsetX\": null,\n        \"update:offsetY\": null,\n        \"update:opacity\": null,\n    },\n    props: {\n        blur: Number,\n        color: String,\n        offsetX: Number,\n        offsetY: Number,\n        opacity: Number\n    }\n});\nexports.DxShadow = DxShadow;\nDxShadow.$_optionName = \"shadow\";\nvar DxSize = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:height\": null,\n        \"update:width\": null,\n    },\n    props: {\n        height: Number,\n        width: Number\n    }\n});\nexports.DxSize = DxSize;\nDxSize.$_optionName = \"size\";\nvar DxStrip = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:endValue\": null,\n        \"update:label\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:startValue\": null,\n    },\n    props: {\n        color: String,\n        endValue: {},\n        label: Object,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        startValue: {}\n    }\n});\nexports.DxStrip = DxStrip;\nDxStrip.$_optionName = \"strips\";\nDxStrip.$_isCollectionItem = true;\nvar DxStripLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:text\": null,\n        \"update:verticalAlignment\": null,\n    },\n    props: {\n        font: Object,\n        horizontalAlignment: String,\n        text: String,\n        verticalAlignment: String\n    }\n});\nexports.DxStripLabel = DxStripLabel;\nDxStripLabel.$_optionName = \"label\";\nvar DxStripStyle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:label\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n    },\n    props: {\n        label: Object,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number\n    }\n});\nexports.DxStripStyle = DxStripStyle;\nDxStripStyle.$_optionName = \"stripStyle\";\nDxStripStyle.$_expectedChildren = {\n    label: { isCollectionItem: false, optionName: \"label\" },\n    stripStyleLabel: { isCollectionItem: false, optionName: \"label\" }\n};\nvar DxStripStyleLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:verticalAlignment\": null,\n    },\n    props: {\n        font: Object,\n        horizontalAlignment: String,\n        verticalAlignment: String\n    }\n});\nexports.DxStripStyleLabel = DxStripStyleLabel;\nDxStripStyleLabel.$_optionName = \"label\";\nvar DxSubtitle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:font\": null,\n        \"update:offset\": null,\n        \"update:text\": null,\n        \"update:textOverflow\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        font: Object,\n        offset: Number,\n        text: String,\n        textOverflow: String,\n        wordWrap: String\n    }\n});\nexports.DxSubtitle = DxSubtitle;\nDxSubtitle.$_optionName = \"subtitle\";\nvar DxTick = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:length\": null,\n        \"update:opacity\": null,\n        \"update:shift\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        length: Number,\n        opacity: Number,\n        shift: Number,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxTick = DxTick;\nDxTick.$_optionName = \"tick\";\nvar DxTickInterval = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:days\": null,\n        \"update:hours\": null,\n        \"update:milliseconds\": null,\n        \"update:minutes\": null,\n        \"update:months\": null,\n        \"update:quarters\": null,\n        \"update:seconds\": null,\n        \"update:weeks\": null,\n        \"update:years\": null,\n    },\n    props: {\n        days: Number,\n        hours: Number,\n        milliseconds: Number,\n        minutes: Number,\n        months: Number,\n        quarters: Number,\n        seconds: Number,\n        weeks: Number,\n        years: Number\n    }\n});\nexports.DxTickInterval = DxTickInterval;\nDxTickInterval.$_optionName = \"tickInterval\";\nvar DxTitle = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:font\": null,\n        \"update:horizontalAlignment\": null,\n        \"update:margin\": null,\n        \"update:placeholderSize\": null,\n        \"update:subtitle\": null,\n        \"update:text\": null,\n        \"update:textOverflow\": null,\n        \"update:verticalAlignment\": null,\n        \"update:wordWrap\": null,\n    },\n    props: {\n        alignment: String,\n        font: Object,\n        horizontalAlignment: String,\n        margin: Number,\n        placeholderSize: Number,\n        subtitle: [Object, String],\n        text: String,\n        textOverflow: String,\n        verticalAlignment: String,\n        wordWrap: String\n    }\n});\nexports.DxTitle = DxTitle;\nDxTitle.$_optionName = \"title\";\nvar DxTooltip = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:argumentFormat\": null,\n        \"update:arrowLength\": null,\n        \"update:border\": null,\n        \"update:color\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:cornerRadius\": null,\n        \"update:customizeTooltip\": null,\n        \"update:enabled\": null,\n        \"update:font\": null,\n        \"update:format\": null,\n        \"update:interactive\": null,\n        \"update:location\": null,\n        \"update:opacity\": null,\n        \"update:paddingLeftRight\": null,\n        \"update:paddingTopBottom\": null,\n        \"update:shadow\": null,\n        \"update:shared\": null,\n        \"update:zIndex\": null,\n    },\n    props: {\n        argumentFormat: [Object, Function, String],\n        arrowLength: Number,\n        border: Object,\n        color: String,\n        container: {},\n        contentTemplate: {},\n        cornerRadius: Number,\n        customizeTooltip: Function,\n        enabled: Boolean,\n        font: Object,\n        format: [Object, Function, String],\n        interactive: Boolean,\n        location: String,\n        opacity: Number,\n        paddingLeftRight: Number,\n        paddingTopBottom: Number,\n        shadow: Object,\n        shared: Boolean,\n        zIndex: Number\n    }\n});\nexports.DxTooltip = DxTooltip;\nDxTooltip.$_optionName = \"tooltip\";\nDxTooltip.$_expectedChildren = {\n    argumentFormat: { isCollectionItem: false, optionName: \"argumentFormat\" },\n    border: { isCollectionItem: false, optionName: \"border\" },\n    font: { isCollectionItem: false, optionName: \"font\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    shadow: { isCollectionItem: false, optionName: \"shadow\" },\n    tooltipBorder: { isCollectionItem: false, optionName: \"border\" }\n};\nvar DxTooltipBorder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:opacity\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        opacity: Number,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxTooltipBorder = DxTooltipBorder;\nDxTooltipBorder.$_optionName = \"border\";\nvar DxUrl = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:rangeMaxPoint\": null,\n        \"update:rangeMinPoint\": null,\n    },\n    props: {\n        rangeMaxPoint: String,\n        rangeMinPoint: String\n    }\n});\nexports.DxUrl = DxUrl;\nDxUrl.$_optionName = \"url\";\nvar DxValueAxis = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:aggregatedPointsPosition\": null,\n        \"update:allowDecimals\": null,\n        \"update:autoBreaksEnabled\": null,\n        \"update:axisDivisionFactor\": null,\n        \"update:breaks\": null,\n        \"update:breakStyle\": null,\n        \"update:categories\": null,\n        \"update:color\": null,\n        \"update:constantLines\": null,\n        \"update:constantLineStyle\": null,\n        \"update:customPosition\": null,\n        \"update:discreteAxisDivisionMode\": null,\n        \"update:endOnTick\": null,\n        \"update:grid\": null,\n        \"update:inverted\": null,\n        \"update:label\": null,\n        \"update:linearThreshold\": null,\n        \"update:logarithmBase\": null,\n        \"update:maxAutoBreakCount\": null,\n        \"update:maxValueMargin\": null,\n        \"update:minorGrid\": null,\n        \"update:minorTick\": null,\n        \"update:minorTickCount\": null,\n        \"update:minorTickInterval\": null,\n        \"update:minValueMargin\": null,\n        \"update:minVisualRangeLength\": null,\n        \"update:multipleAxesSpacing\": null,\n        \"update:name\": null,\n        \"update:offset\": null,\n        \"update:opacity\": null,\n        \"update:pane\": null,\n        \"update:placeholderSize\": null,\n        \"update:position\": null,\n        \"update:showZero\": null,\n        \"update:strips\": null,\n        \"update:stripStyle\": null,\n        \"update:synchronizedValue\": null,\n        \"update:tick\": null,\n        \"update:tickInterval\": null,\n        \"update:title\": null,\n        \"update:type\": null,\n        \"update:valueMarginsEnabled\": null,\n        \"update:valueType\": null,\n        \"update:visible\": null,\n        \"update:visualRange\": null,\n        \"update:visualRangeUpdateMode\": null,\n        \"update:wholeRange\": null,\n        \"update:width\": null,\n    },\n    props: {\n        aggregatedPointsPosition: String,\n        allowDecimals: Boolean,\n        autoBreaksEnabled: Boolean,\n        axisDivisionFactor: Number,\n        breaks: Array,\n        breakStyle: Object,\n        categories: Array,\n        color: String,\n        constantLines: Array,\n        constantLineStyle: Object,\n        customPosition: {},\n        discreteAxisDivisionMode: String,\n        endOnTick: Boolean,\n        grid: Object,\n        inverted: Boolean,\n        label: Object,\n        linearThreshold: Number,\n        logarithmBase: Number,\n        maxAutoBreakCount: Number,\n        maxValueMargin: Number,\n        minorGrid: Object,\n        minorTick: Object,\n        minorTickCount: Number,\n        minorTickInterval: [Number, Object, String],\n        minValueMargin: Number,\n        minVisualRangeLength: [Number, Object, String],\n        multipleAxesSpacing: Number,\n        name: String,\n        offset: Number,\n        opacity: Number,\n        pane: String,\n        placeholderSize: Number,\n        position: String,\n        showZero: Boolean,\n        strips: Array,\n        stripStyle: Object,\n        synchronizedValue: Number,\n        tick: Object,\n        tickInterval: [Number, Object, String],\n        title: [Object, String],\n        type: String,\n        valueMarginsEnabled: Boolean,\n        valueType: String,\n        visible: Boolean,\n        visualRange: [Array, Object],\n        visualRangeUpdateMode: String,\n        wholeRange: [Array, Object],\n        width: Number\n    }\n});\nexports.DxValueAxis = DxValueAxis;\nDxValueAxis.$_optionName = \"valueAxis\";\nDxValueAxis.$_isCollectionItem = true;\nDxValueAxis.$_expectedChildren = {\n    axisConstantLineStyle: { isCollectionItem: false, optionName: \"constantLineStyle\" },\n    axisLabel: { isCollectionItem: false, optionName: \"label\" },\n    axisTitle: { isCollectionItem: false, optionName: \"title\" },\n    break: { isCollectionItem: true, optionName: \"breaks\" },\n    constantLine: { isCollectionItem: true, optionName: \"constantLines\" },\n    constantLineStyle: { isCollectionItem: false, optionName: \"constantLineStyle\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    minorTickInterval: { isCollectionItem: false, optionName: \"minorTickInterval\" },\n    minVisualRangeLength: { isCollectionItem: false, optionName: \"minVisualRangeLength\" },\n    strip: { isCollectionItem: true, optionName: \"strips\" },\n    tickInterval: { isCollectionItem: false, optionName: \"tickInterval\" },\n    title: { isCollectionItem: false, optionName: \"title\" },\n    visualRange: { isCollectionItem: false, optionName: \"visualRange\" },\n    wholeRange: { isCollectionItem: false, optionName: \"wholeRange\" }\n};\nvar DxValueErrorBar = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:displayMode\": null,\n        \"update:edgeLength\": null,\n        \"update:highValueField\": null,\n        \"update:lineWidth\": null,\n        \"update:lowValueField\": null,\n        \"update:opacity\": null,\n        \"update:type\": null,\n        \"update:value\": null,\n    },\n    props: {\n        color: String,\n        displayMode: String,\n        edgeLength: Number,\n        highValueField: String,\n        lineWidth: Number,\n        lowValueField: String,\n        opacity: Number,\n        type: String,\n        value: Number\n    }\n});\nexports.DxValueErrorBar = DxValueErrorBar;\nDxValueErrorBar.$_optionName = \"valueErrorBar\";\nvar DxVerticalLine = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:color\": null,\n        \"update:dashStyle\": null,\n        \"update:label\": null,\n        \"update:opacity\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        color: String,\n        dashStyle: String,\n        label: Object,\n        opacity: Number,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxVerticalLine = DxVerticalLine;\nDxVerticalLine.$_optionName = \"verticalLine\";\nDxVerticalLine.$_expectedChildren = {\n    horizontalLineLabel: { isCollectionItem: false, optionName: \"label\" },\n    label: { isCollectionItem: false, optionName: \"label\" }\n};\nvar DxVisualRange = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:endValue\": null,\n        \"update:length\": null,\n        \"update:startValue\": null,\n    },\n    props: {\n        endValue: {},\n        length: [Number, Object, String],\n        startValue: {}\n    }\n});\nexports.DxVisualRange = DxVisualRange;\nDxVisualRange.$_optionName = \"visualRange\";\nvar DxWholeRange = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:endValue\": null,\n        \"update:length\": null,\n        \"update:startValue\": null,\n    },\n    props: {\n        endValue: {},\n        length: [Number, Object, String],\n        startValue: {}\n    }\n});\nexports.DxWholeRange = DxWholeRange;\nDxWholeRange.$_optionName = \"wholeRange\";\nvar DxWidth = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:rangeMaxPoint\": null,\n        \"update:rangeMinPoint\": null,\n    },\n    props: {\n        rangeMaxPoint: Number,\n        rangeMinPoint: Number\n    }\n});\nexports.DxWidth = DxWidth;\nDxWidth.$_optionName = \"width\";\nvar DxZoomAndPan = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowMouseWheel\": null,\n        \"update:allowTouchGestures\": null,\n        \"update:argumentAxis\": null,\n        \"update:dragBoxStyle\": null,\n        \"update:dragToZoom\": null,\n        \"update:panKey\": null,\n        \"update:valueAxis\": null,\n    },\n    props: {\n        allowMouseWheel: Boolean,\n        allowTouchGestures: Boolean,\n        argumentAxis: String,\n        dragBoxStyle: Object,\n        dragToZoom: Boolean,\n        panKey: String,\n        valueAxis: String\n    }\n});\nexports.DxZoomAndPan = DxZoomAndPan;\nDxZoomAndPan.$_optionName = \"zoomAndPan\";\nDxZoomAndPan.$_expectedChildren = {\n    dragBoxStyle: { isCollectionItem: false, optionName: \"dragBoxStyle\" }\n};\nexports.default = DxChart;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme-vue/chart.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/events/transform.js":
/*!*********************************************************!*\
  !*** ./node_modules/devextreme/esm/events/transform.js ***!
  \*********************************************************/
/*! exports provided: transformstart, transform, transformend, translatestart, translate, translateend, zoomstart, zoom, zoomend, pinchstart, pinch, pinchend, rotatestart, rotate, rotateend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformstart\", function() { return transformstart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transform\", function() { return transform; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformend\", function() { return transformend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"translatestart\", function() { return translatestart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"translate\", function() { return translate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"translateend\", function() { return translateend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zoomstart\", function() { return zoomstart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zoom\", function() { return zoom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zoomend\", function() { return zoomend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pinchstart\", function() { return pinchstart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pinch\", function() { return pinch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pinchend\", function() { return pinchend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotatestart\", function() { return rotatestart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotate\", function() { return rotate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rotateend\", function() { return rotateend; });\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils/iterator */ \"./node_modules/devextreme/esm/core/utils/iterator.js\");\n/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/index */ \"./node_modules/devextreme/esm/events/utils/index.js\");\n/* harmony import */ var _core_emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/emitter */ \"./node_modules/devextreme/esm/events/core/emitter.js\");\n/* harmony import */ var _core_emitter_registrator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/emitter_registrator */ \"./node_modules/devextreme/esm/events/core/emitter_registrator.js\");\n/**\r\n * DevExtreme (esm/events/transform.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\nvar DX_PREFIX = \"dx\";\r\nvar TRANSFORM = \"transform\";\r\nvar TRANSLATE = \"translate\";\r\nvar PINCH = \"pinch\";\r\nvar ROTATE = \"rotate\";\r\nvar START_POSTFIX = \"start\";\r\nvar UPDATE_POSTFIX = \"\";\r\nvar END_POSTFIX = \"end\";\r\nvar eventAliases = [];\r\nvar addAlias = function(eventName, eventArgs) {\r\n    eventAliases.push({\r\n        name: eventName,\r\n        args: eventArgs\r\n    })\r\n};\r\naddAlias(TRANSFORM, {\r\n    scale: true,\r\n    deltaScale: true,\r\n    rotation: true,\r\n    deltaRotation: true,\r\n    translation: true,\r\n    deltaTranslation: true\r\n});\r\naddAlias(TRANSLATE, {\r\n    translation: true,\r\n    deltaTranslation: true\r\n});\r\naddAlias(PINCH, {\r\n    scale: true,\r\n    deltaScale: true\r\n});\r\naddAlias(ROTATE, {\r\n    rotation: true,\r\n    deltaRotation: true\r\n});\r\nvar getVector = function(first, second) {\r\n    return {\r\n        x: second.pageX - first.pageX,\r\n        y: -second.pageY + first.pageY,\r\n        centerX: .5 * (second.pageX + first.pageX),\r\n        centerY: .5 * (second.pageY + first.pageY)\r\n    }\r\n};\r\nvar getEventVector = function(e) {\r\n    var pointers = e.pointers;\r\n    return getVector(pointers[0], pointers[1])\r\n};\r\nvar getDistance = function(vector) {\r\n    return Math.sqrt(vector.x * vector.x + vector.y * vector.y)\r\n};\r\nvar getScale = function(firstVector, secondVector) {\r\n    return getDistance(firstVector) / getDistance(secondVector)\r\n};\r\nvar getRotation = function(firstVector, secondVector) {\r\n    var scalarProduct = firstVector.x * secondVector.x + firstVector.y * secondVector.y;\r\n    var distanceProduct = getDistance(firstVector) * getDistance(secondVector);\r\n    if (0 === distanceProduct) {\r\n        return 0\r\n    }\r\n    var sign = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_0__[\"sign\"])(firstVector.x * secondVector.y - secondVector.x * firstVector.y);\r\n    var angle = Math.acos(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_0__[\"fitIntoRange\"])(scalarProduct / distanceProduct, -1, 1));\r\n    return sign * angle\r\n};\r\nvar getTranslation = function(firstVector, secondVector) {\r\n    return {\r\n        x: firstVector.centerX - secondVector.centerX,\r\n        y: firstVector.centerY - secondVector.centerY\r\n    }\r\n};\r\nvar TransformEmitter = _core_emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"].inherit({\r\n    validatePointers: function(e) {\r\n        return Object(_utils_index__WEBPACK_IMPORTED_MODULE_2__[\"hasTouches\"])(e) > 1\r\n    },\r\n    start: function(e) {\r\n        this._accept(e);\r\n        var startVector = getEventVector(e);\r\n        this._startVector = startVector;\r\n        this._prevVector = startVector;\r\n        this._fireEventAliases(START_POSTFIX, e)\r\n    },\r\n    move: function(e) {\r\n        var currentVector = getEventVector(e);\r\n        var eventArgs = this._getEventArgs(currentVector);\r\n        this._fireEventAliases(UPDATE_POSTFIX, e, eventArgs);\r\n        this._prevVector = currentVector\r\n    },\r\n    end: function(e) {\r\n        var eventArgs = this._getEventArgs(this._prevVector);\r\n        this._fireEventAliases(END_POSTFIX, e, eventArgs)\r\n    },\r\n    _getEventArgs: function(vector) {\r\n        return {\r\n            scale: getScale(vector, this._startVector),\r\n            deltaScale: getScale(vector, this._prevVector),\r\n            rotation: getRotation(vector, this._startVector),\r\n            deltaRotation: getRotation(vector, this._prevVector),\r\n            translation: getTranslation(vector, this._startVector),\r\n            deltaTranslation: getTranslation(vector, this._prevVector)\r\n        }\r\n    },\r\n    _fireEventAliases: function(eventPostfix, originalEvent, eventArgs) {\r\n        eventArgs = eventArgs || {};\r\n        _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__[\"each\"](eventAliases, function(_, eventAlias) {\r\n            var args = {};\r\n            _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__[\"each\"](eventAlias.args, (function(name) {\r\n                if (name in eventArgs) {\r\n                    args[name] = eventArgs[name]\r\n                }\r\n            }));\r\n            this._fireEvent(DX_PREFIX + eventAlias.name + eventPostfix, originalEvent, args)\r\n        }.bind(this))\r\n    }\r\n});\r\nvar eventNames = eventAliases.reduce((result, eventAlias) => {\r\n    [START_POSTFIX, UPDATE_POSTFIX, END_POSTFIX].forEach(eventPostfix => {\r\n        result.push(DX_PREFIX + eventAlias.name + eventPostfix)\r\n    });\r\n    return result\r\n}, []);\r\nObject(_core_emitter_registrator__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\r\n    emitter: TransformEmitter,\r\n    events: eventNames\r\n});\r\nvar exportNames = {};\r\n_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__[\"each\"](eventNames, (function(_, eventName) {\r\n    exportNames[eventName.substring(DX_PREFIX.length)] = eventName\r\n}));\r\nvar {\r\n    transformstart: transformstart,\r\n    transform: transform,\r\n    transformend: transformend,\r\n    translatestart: translatestart,\r\n    translate: translate,\r\n    translateend: translateend,\r\n    zoomstart: zoomstart,\r\n    zoom: zoom,\r\n    zoomend: zoomend,\r\n    pinchstart: pinchstart,\r\n    pinch: pinch,\r\n    pinchend: pinchend,\r\n    rotatestart: rotatestart,\r\n    rotate: rotate,\r\n    rotateend: rotateend\r\n} = exportNames;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/events/transform.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/axes_constants.js":
/*!****************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/axes_constants.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/**\r\n * DevExtreme (esm/viz/axes/axes_constants.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    logarithmic: \"logarithmic\",\r\n    discrete: \"discrete\",\r\n    numeric: \"numeric\",\r\n    left: \"left\",\r\n    right: \"right\",\r\n    top: \"top\",\r\n    bottom: \"bottom\",\r\n    center: \"center\",\r\n    horizontal: \"horizontal\",\r\n    vertical: \"vertical\",\r\n    convertTicksToValues: function(ticks) {\r\n        return Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(ticks || [], (function(item) {\r\n            return item.value\r\n        }))\r\n    },\r\n    validateOverlappingMode: function(mode) {\r\n        return \"ignore\" === mode || \"none\" === mode ? mode : \"hide\"\r\n    },\r\n    getTicksCountInRange: function(ticks, valueKey, range) {\r\n        var i = 1;\r\n        if (ticks.length > 1) {\r\n            for (; i < ticks.length; i++) {\r\n                if (Math.abs(ticks[i].coords[valueKey] - ticks[0].coords[valueKey]) >= range) {\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return i\r\n    },\r\n    areLabelsOverlap: function(bBox1, bBox2, spacing, alignment) {\r\n        var horizontalInverted = bBox1.x > bBox2.x;\r\n        var verticalInverted = bBox1.y > bBox2.y;\r\n        var x1 = bBox1.x;\r\n        var x2 = bBox2.x;\r\n        var width1 = bBox1.width;\r\n        var width2 = bBox2.width;\r\n        if (\"left\" === alignment) {\r\n            x1 += width1 / 2;\r\n            x2 += width2 / 2\r\n        } else if (\"right\" === alignment) {\r\n            x1 -= width1 / 2;\r\n            x2 -= width2 / 2\r\n        }\r\n        var hasHorizontalOverlapping = horizontalInverted ? x2 + width2 + spacing > x1 : x1 + width1 + spacing > x2;\r\n        var hasVerticalOverlapping = verticalInverted ? bBox2.y + bBox2.height > bBox1.y : bBox1.y + bBox1.height > bBox2.y;\r\n        return hasHorizontalOverlapping && hasVerticalOverlapping\r\n    }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L2F4ZXMvYXhlc19jb25zdGFudHMuanM/NTZjOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUd1QjtBQUNSO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdURBQUk7QUFDbkI7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L2F4ZXMvYXhlc19jb25zdGFudHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRGV2RXh0cmVtZSAoZXNtL3Zpei9heGVzL2F4ZXNfY29uc3RhbnRzLmpzKVxyXG4gKiBWZXJzaW9uOiAyMS4yLjdcclxuICogQnVpbGQgZGF0ZTogTW9uIEFwciAxMSAyMDIyXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjIgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqIFJlYWQgYWJvdXQgRGV2RXh0cmVtZSBsaWNlbnNpbmcgaGVyZTogaHR0cHM6Ly9qcy5kZXZleHByZXNzLmNvbS9MaWNlbnNpbmcvXHJcbiAqL1xyXG5pbXBvcnQge1xyXG4gICAgbWFwIGFzIF9tYXBcclxufSBmcm9tIFwiLi4vY29yZS91dGlsc1wiO1xyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBsb2dhcml0aG1pYzogXCJsb2dhcml0aG1pY1wiLFxyXG4gICAgZGlzY3JldGU6IFwiZGlzY3JldGVcIixcclxuICAgIG51bWVyaWM6IFwibnVtZXJpY1wiLFxyXG4gICAgbGVmdDogXCJsZWZ0XCIsXHJcbiAgICByaWdodDogXCJyaWdodFwiLFxyXG4gICAgdG9wOiBcInRvcFwiLFxyXG4gICAgYm90dG9tOiBcImJvdHRvbVwiLFxyXG4gICAgY2VudGVyOiBcImNlbnRlclwiLFxyXG4gICAgaG9yaXpvbnRhbDogXCJob3Jpem9udGFsXCIsXHJcbiAgICB2ZXJ0aWNhbDogXCJ2ZXJ0aWNhbFwiLFxyXG4gICAgY29udmVydFRpY2tzVG9WYWx1ZXM6IGZ1bmN0aW9uKHRpY2tzKSB7XHJcbiAgICAgICAgcmV0dXJuIF9tYXAodGlja3MgfHwgW10sIChmdW5jdGlvbihpdGVtKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBpdGVtLnZhbHVlXHJcbiAgICAgICAgfSkpXHJcbiAgICB9LFxyXG4gICAgdmFsaWRhdGVPdmVybGFwcGluZ01vZGU6IGZ1bmN0aW9uKG1vZGUpIHtcclxuICAgICAgICByZXR1cm4gXCJpZ25vcmVcIiA9PT0gbW9kZSB8fCBcIm5vbmVcIiA9PT0gbW9kZSA/IG1vZGUgOiBcImhpZGVcIlxyXG4gICAgfSxcclxuICAgIGdldFRpY2tzQ291bnRJblJhbmdlOiBmdW5jdGlvbih0aWNrcywgdmFsdWVLZXksIHJhbmdlKSB7XHJcbiAgICAgICAgdmFyIGkgPSAxO1xyXG4gICAgICAgIGlmICh0aWNrcy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgIGZvciAoOyBpIDwgdGlja3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyh0aWNrc1tpXS5jb29yZHNbdmFsdWVLZXldIC0gdGlja3NbMF0uY29vcmRzW3ZhbHVlS2V5XSkgPj0gcmFuZ2UpIHtcclxuICAgICAgICAgICAgICAgICAgICBicmVha1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBpXHJcbiAgICB9LFxyXG4gICAgYXJlTGFiZWxzT3ZlcmxhcDogZnVuY3Rpb24oYkJveDEsIGJCb3gyLCBzcGFjaW5nLCBhbGlnbm1lbnQpIHtcclxuICAgICAgICB2YXIgaG9yaXpvbnRhbEludmVydGVkID0gYkJveDEueCA+IGJCb3gyLng7XHJcbiAgICAgICAgdmFyIHZlcnRpY2FsSW52ZXJ0ZWQgPSBiQm94MS55ID4gYkJveDIueTtcclxuICAgICAgICB2YXIgeDEgPSBiQm94MS54O1xyXG4gICAgICAgIHZhciB4MiA9IGJCb3gyLng7XHJcbiAgICAgICAgdmFyIHdpZHRoMSA9IGJCb3gxLndpZHRoO1xyXG4gICAgICAgIHZhciB3aWR0aDIgPSBiQm94Mi53aWR0aDtcclxuICAgICAgICBpZiAoXCJsZWZ0XCIgPT09IGFsaWdubWVudCkge1xyXG4gICAgICAgICAgICB4MSArPSB3aWR0aDEgLyAyO1xyXG4gICAgICAgICAgICB4MiArPSB3aWR0aDIgLyAyXHJcbiAgICAgICAgfSBlbHNlIGlmIChcInJpZ2h0XCIgPT09IGFsaWdubWVudCkge1xyXG4gICAgICAgICAgICB4MSAtPSB3aWR0aDEgLyAyO1xyXG4gICAgICAgICAgICB4MiAtPSB3aWR0aDIgLyAyXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBoYXNIb3Jpem9udGFsT3ZlcmxhcHBpbmcgPSBob3Jpem9udGFsSW52ZXJ0ZWQgPyB4MiArIHdpZHRoMiArIHNwYWNpbmcgPiB4MSA6IHgxICsgd2lkdGgxICsgc3BhY2luZyA+IHgyO1xyXG4gICAgICAgIHZhciBoYXNWZXJ0aWNhbE92ZXJsYXBwaW5nID0gdmVydGljYWxJbnZlcnRlZCA/IGJCb3gyLnkgKyBiQm94Mi5oZWlnaHQgPiBiQm94MS55IDogYkJveDEueSArIGJCb3gxLmhlaWdodCA+IGJCb3gyLnk7XHJcbiAgICAgICAgcmV0dXJuIGhhc0hvcml6b250YWxPdmVybGFwcGluZyAmJiBoYXNWZXJ0aWNhbE92ZXJsYXBwaW5nXHJcbiAgICB9XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/axes_constants.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/axes_utils.js":
/*!************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/axes_utils.js ***!
  \************************************************************/
/*! exports provided: calculateCanvasMargins, measureLabels */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateCanvasMargins\", function() { return calculateCanvasMargins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"measureLabels\", function() { return measureLabels; });\n/**\r\n * DevExtreme (esm/viz/axes/axes_utils.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar _max = Math.max;\r\nvar calculateCanvasMargins = function(bBoxes, canvas) {\r\n    var cLeft = canvas.left;\r\n    var cTop = canvas.top;\r\n    var cRight = canvas.width - canvas.right;\r\n    var cBottom = canvas.height - canvas.bottom;\r\n    return bBoxes.reduce((function(margins, bBox) {\r\n        if (!bBox || bBox.isEmpty) {\r\n            return margins\r\n        }\r\n        return {\r\n            left: _max(margins.left, cLeft - bBox.x),\r\n            top: _max(margins.top, cTop - bBox.y),\r\n            right: _max(margins.right, bBox.x + bBox.width - cRight),\r\n            bottom: _max(margins.bottom, bBox.y + bBox.height - cBottom)\r\n        }\r\n    }), {\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0\r\n    })\r\n};\r\nvar measureLabels = function(items) {\r\n    items.forEach((function(item) {\r\n        var label = item.getContentContainer();\r\n        item.labelBBox = label ? label.getBBox() : {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    }))\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L2F4ZXMvYXhlc191dGlscy5qcz83MzExIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lL2VzbS92aXovYXhlcy9heGVzX3V0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIERldkV4dHJlbWUgKGVzbS92aXovYXhlcy9heGVzX3V0aWxzLmpzKVxyXG4gKiBWZXJzaW9uOiAyMS4yLjdcclxuICogQnVpbGQgZGF0ZTogTW9uIEFwciAxMSAyMDIyXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjIgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqIFJlYWQgYWJvdXQgRGV2RXh0cmVtZSBsaWNlbnNpbmcgaGVyZTogaHR0cHM6Ly9qcy5kZXZleHByZXNzLmNvbS9MaWNlbnNpbmcvXHJcbiAqL1xyXG52YXIgX21heCA9IE1hdGgubWF4O1xyXG5leHBvcnQgdmFyIGNhbGN1bGF0ZUNhbnZhc01hcmdpbnMgPSBmdW5jdGlvbihiQm94ZXMsIGNhbnZhcykge1xyXG4gICAgdmFyIGNMZWZ0ID0gY2FudmFzLmxlZnQ7XHJcbiAgICB2YXIgY1RvcCA9IGNhbnZhcy50b3A7XHJcbiAgICB2YXIgY1JpZ2h0ID0gY2FudmFzLndpZHRoIC0gY2FudmFzLnJpZ2h0O1xyXG4gICAgdmFyIGNCb3R0b20gPSBjYW52YXMuaGVpZ2h0IC0gY2FudmFzLmJvdHRvbTtcclxuICAgIHJldHVybiBiQm94ZXMucmVkdWNlKChmdW5jdGlvbihtYXJnaW5zLCBiQm94KSB7XHJcbiAgICAgICAgaWYgKCFiQm94IHx8IGJCb3guaXNFbXB0eSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbWFyZ2luc1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBsZWZ0OiBfbWF4KG1hcmdpbnMubGVmdCwgY0xlZnQgLSBiQm94LngpLFxyXG4gICAgICAgICAgICB0b3A6IF9tYXgobWFyZ2lucy50b3AsIGNUb3AgLSBiQm94LnkpLFxyXG4gICAgICAgICAgICByaWdodDogX21heChtYXJnaW5zLnJpZ2h0LCBiQm94LnggKyBiQm94LndpZHRoIC0gY1JpZ2h0KSxcclxuICAgICAgICAgICAgYm90dG9tOiBfbWF4KG1hcmdpbnMuYm90dG9tLCBiQm94LnkgKyBiQm94LmhlaWdodCAtIGNCb3R0b20pXHJcbiAgICAgICAgfVxyXG4gICAgfSksIHtcclxuICAgICAgICBsZWZ0OiAwLFxyXG4gICAgICAgIHJpZ2h0OiAwLFxyXG4gICAgICAgIHRvcDogMCxcclxuICAgICAgICBib3R0b206IDBcclxuICAgIH0pXHJcbn07XHJcbmV4cG9ydCB2YXIgbWVhc3VyZUxhYmVscyA9IGZ1bmN0aW9uKGl0ZW1zKSB7XHJcbiAgICBpdGVtcy5mb3JFYWNoKChmdW5jdGlvbihpdGVtKSB7XHJcbiAgICAgICAgdmFyIGxhYmVsID0gaXRlbS5nZXRDb250ZW50Q29udGFpbmVyKCk7XHJcbiAgICAgICAgaXRlbS5sYWJlbEJCb3ggPSBsYWJlbCA/IGxhYmVsLmdldEJCb3goKSA6IHtcclxuICAgICAgICAgICAgeDogMCxcclxuICAgICAgICAgICAgeTogMCxcclxuICAgICAgICAgICAgd2lkdGg6IDAsXHJcbiAgICAgICAgICAgIGhlaWdodDogMFxyXG4gICAgICAgIH1cclxuICAgIH0pKVxyXG59O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/axes_utils.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/base_axis.js":
/*!***********************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/base_axis.js ***!
  \***********************************************************/
/*! exports provided: Axis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Axis\", function() { return Axis; });\n/* harmony import */ var _smart_formatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./smart_formatter */ \"./node_modules/devextreme/esm/viz/axes/smart_formatter.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _axes_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./axes_constants */ \"./node_modules/devextreme/esm/viz/axes/axes_constants.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/array */ \"./node_modules/devextreme/esm/core/utils/array.js\");\n/* harmony import */ var _format_helper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../format_helper */ \"./node_modules/devextreme/esm/format_helper.js\");\n/* harmony import */ var _components_parse_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/parse_utils */ \"./node_modules/devextreme/esm/viz/components/parse_utils.js\");\n/* harmony import */ var _tick_generator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tick_generator */ \"./node_modules/devextreme/esm/viz/axes/tick_generator.js\");\n/* harmony import */ var _translators_translator2d__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../translators/translator2d */ \"./node_modules/devextreme/esm/viz/translators/translator2d.js\");\n/* harmony import */ var _translators_range__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../translators/range */ \"./node_modules/devextreme/esm/viz/translators/range.js\");\n/* harmony import */ var _tick__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tick */ \"./node_modules/devextreme/esm/viz/axes/tick.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/common */ \"./node_modules/devextreme/esm/core/utils/common.js\");\n/* harmony import */ var _xy_axes__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./xy_axes */ \"./node_modules/devextreme/esm/viz/axes/xy_axes.js\");\n/* harmony import */ var _polar_axes__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./polar_axes */ \"./node_modules/devextreme/esm/viz/axes/polar_axes.js\");\n/* harmony import */ var _constant_line__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./constant_line */ \"./node_modules/devextreme/esm/viz/axes/constant_line.js\");\n/* harmony import */ var _strip__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./strip */ \"./node_modules/devextreme/esm/viz/axes/strip.js\");\n/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../core/utils/deferred */ \"./node_modules/devextreme/esm/core/utils/deferred.js\");\n/* harmony import */ var _axes_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./axes_utils */ \"./node_modules/devextreme/esm/viz/axes/axes_utils.js\");\n/**\r\n * DevExtreme (esm/viz/axes/base_axis.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar convertTicksToValues = _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].convertTicksToValues;\r\nvar _math = Math;\r\nvar _abs = _math.abs;\r\nvar _max = _math.max;\r\nvar _min = _math.min;\r\nvar _isArray = Array.isArray;\r\nvar DEFAULT_AXIS_LABEL_SPACING = 5;\r\nvar MAX_GRID_BORDER_ADHENSION = 4;\r\nvar TOP = _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].top;\r\nvar BOTTOM = _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].bottom;\r\nvar LEFT = _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].left;\r\nvar RIGHT = _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].right;\r\nvar CENTER = _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].center;\r\nvar KEEP = \"keep\";\r\nvar SHIFT = \"shift\";\r\nvar RESET = \"reset\";\r\nvar ROTATE = \"rotate\";\r\nvar DEFAULT_AXIS_DIVISION_FACTOR = 50;\r\nvar DEFAULT_MINOR_AXIS_DIVISION_FACTOR = 15;\r\nvar SCROLL_THRESHOLD = 5;\r\nvar MIN_BAR_MARGIN = 5;\r\nvar MAX_MARGIN_VALUE = .8;\r\nvar dateIntervals = {\r\n    day: 864e5,\r\n    week: 6048e5\r\n};\r\n\r\nfunction getTickGenerator(options, incidentOccurred, skipTickGeneration, rangeIsEmpty, adjustDivisionFactor, _ref) {\r\n    var _options$workWeek;\r\n    var {\r\n        allowNegatives: allowNegatives,\r\n        linearThreshold: linearThreshold\r\n    } = _ref;\r\n    return Object(_tick_generator__WEBPACK_IMPORTED_MODULE_8__[\"tickGenerator\"])({\r\n        axisType: options.type,\r\n        dataType: options.dataType,\r\n        logBase: options.logarithmBase,\r\n        allowNegatives: allowNegatives,\r\n        linearThreshold: linearThreshold,\r\n        axisDivisionFactor: adjustDivisionFactor(options.axisDivisionFactor || DEFAULT_AXIS_DIVISION_FACTOR),\r\n        minorAxisDivisionFactor: adjustDivisionFactor(options.minorAxisDivisionFactor || DEFAULT_MINOR_AXIS_DIVISION_FACTOR),\r\n        numberMultipliers: options.numberMultipliers,\r\n        calculateMinors: options.minorTick.visible || options.minorGrid.visible || options.calculateMinors,\r\n        allowDecimals: options.allowDecimals,\r\n        endOnTick: options.endOnTick,\r\n        incidentOccurred: incidentOccurred,\r\n        firstDayOfWeek: null === (_options$workWeek = options.workWeek) || void 0 === _options$workWeek ? void 0 : _options$workWeek[0],\r\n        skipTickGeneration: skipTickGeneration,\r\n        skipCalculationLimits: options.skipCalculationLimits,\r\n        generateExtraTick: options.generateExtraTick,\r\n        minTickInterval: options.minTickInterval,\r\n        rangeIsEmpty: rangeIsEmpty\r\n    })\r\n}\r\n\r\nfunction createMajorTick(axis, renderer, skippedCategory) {\r\n    var options = axis.getOptions();\r\n    return Object(_tick__WEBPACK_IMPORTED_MODULE_11__[\"tick\"])(axis, renderer, options.tick, options.grid, skippedCategory, false)\r\n}\r\n\r\nfunction createMinorTick(axis, renderer) {\r\n    var options = axis.getOptions();\r\n    return Object(_tick__WEBPACK_IMPORTED_MODULE_11__[\"tick\"])(axis, renderer, options.minorTick, options.minorGrid)\r\n}\r\n\r\nfunction createBoundaryTick(axis, renderer, isFirst) {\r\n    var options = axis.getOptions();\r\n    return Object(_tick__WEBPACK_IMPORTED_MODULE_11__[\"tick\"])(axis, renderer, Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])({}, options.tick, {\r\n        visible: options.showCustomBoundaryTicks\r\n    }), options.grid, void 0, false, isFirst ? -1 : 1)\r\n}\r\n\r\nfunction callAction(elements, action, actionArgument1, actionArgument2) {\r\n    (elements || []).forEach(e => e[action](actionArgument1, actionArgument2))\r\n}\r\n\r\nfunction initTickCoords(ticks) {\r\n    callAction(ticks, \"initCoords\")\r\n}\r\n\r\nfunction drawTickMarks(ticks, options) {\r\n    callAction(ticks, \"drawMark\", options)\r\n}\r\n\r\nfunction drawGrids(ticks, drawLine) {\r\n    callAction(ticks, \"drawGrid\", drawLine)\r\n}\r\n\r\nfunction updateTicksPosition(ticks, options, animate) {\r\n    callAction(ticks, \"updateTickPosition\", options, animate)\r\n}\r\n\r\nfunction updateGridsPosition(ticks, animate) {\r\n    callAction(ticks, \"updateGridPosition\", animate)\r\n}\r\n\r\nfunction cleanUpInvalidTicks(ticks) {\r\n    var i = ticks.length - 1;\r\n    for (i; i >= 0; i--) {\r\n        if (!removeInvalidTick(ticks, i)) {\r\n            break\r\n        }\r\n    }\r\n    for (i = 0; i < ticks.length; i++) {\r\n        if (removeInvalidTick(ticks, i)) {\r\n            i--\r\n        } else {\r\n            break\r\n        }\r\n    }\r\n}\r\n\r\nfunction removeInvalidTick(ticks, i) {\r\n    if (null === ticks[i].coords.x || null === ticks[i].coords.y) {\r\n        ticks.splice(i, 1);\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nfunction validateAxisOptions(options) {\r\n    var _labelOptions$minSpac;\r\n    var labelOptions = options.label;\r\n    var position = options.position;\r\n    var defaultPosition = options.isHorizontal ? BOTTOM : LEFT;\r\n    var secondaryPosition = options.isHorizontal ? TOP : RIGHT;\r\n    var labelPosition = labelOptions.position;\r\n    if (position !== defaultPosition && position !== secondaryPosition) {\r\n        position = defaultPosition\r\n    }\r\n    if (!labelPosition || \"outside\" === labelPosition) {\r\n        labelPosition = position\r\n    } else if (\"inside\" === labelPosition) {\r\n        labelPosition = {\r\n            [TOP]: BOTTOM,\r\n            [BOTTOM]: TOP,\r\n            [LEFT]: RIGHT,\r\n            [RIGHT]: LEFT\r\n        } [position]\r\n    }\r\n    if (labelPosition !== defaultPosition && labelPosition !== secondaryPosition) {\r\n        labelPosition = position\r\n    }\r\n    if (labelOptions.alignment !== CENTER && !labelOptions.userAlignment) {\r\n        labelOptions.alignment = {\r\n            [TOP]: CENTER,\r\n            [BOTTOM]: CENTER,\r\n            [LEFT]: RIGHT,\r\n            [RIGHT]: LEFT\r\n        } [labelPosition]\r\n    }\r\n    options.position = position;\r\n    labelOptions.position = labelPosition;\r\n    options.hoverMode = options.hoverMode ? options.hoverMode.toLowerCase() : \"none\";\r\n    labelOptions.minSpacing = null !== (_labelOptions$minSpac = labelOptions.minSpacing) && void 0 !== _labelOptions$minSpac ? _labelOptions$minSpac : DEFAULT_AXIS_LABEL_SPACING;\r\n    options.type && (options.type = options.type.toLowerCase());\r\n    options.argumentType && (options.argumentType = options.argumentType.toLowerCase());\r\n    options.valueType && (options.valueType = options.valueType.toLowerCase())\r\n}\r\n\r\nfunction getOptimalAngle(boxes, labelOpt) {\r\n    var angle = 180 * _math.asin((boxes[0].height + labelOpt.minSpacing) / (boxes[1].x - boxes[0].x)) / _math.PI;\r\n    return angle < 45 ? -45 : -90\r\n}\r\n\r\nfunction updateLabels(ticks, step, func) {\r\n    ticks.forEach((function(tick, index) {\r\n        if (tick.getContentContainer()) {\r\n            if (index % step !== 0) {\r\n                tick.removeLabel()\r\n            } else if (func) {\r\n                func(tick, index)\r\n            }\r\n        }\r\n    }))\r\n}\r\n\r\nfunction getZoomBoundValue(optionValue, dataValue) {\r\n    if (void 0 === optionValue) {\r\n        return dataValue\r\n    } else if (null === optionValue) {\r\n        return\r\n    } else {\r\n        return optionValue\r\n    }\r\n}\r\n\r\nfunction configureGenerator(options, axisDivisionFactor, viewPort, screenDelta, minTickInterval) {\r\n    var tickGeneratorOptions = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])({}, options, {\r\n        endOnTick: true,\r\n        axisDivisionFactor: axisDivisionFactor,\r\n        skipCalculationLimits: true,\r\n        generateExtraTick: true,\r\n        minTickInterval: minTickInterval\r\n    });\r\n    return function(tickInterval, skipTickGeneration, min, max, breaks) {\r\n        return getTickGenerator(tickGeneratorOptions, _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"], skipTickGeneration, viewPort.isEmpty(), v => v, viewPort)({\r\n            min: min,\r\n            max: max,\r\n            categories: viewPort.categories,\r\n            isSpacedMargin: viewPort.isSpacedMargin\r\n        }, screenDelta, tickInterval, Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(tickInterval), void 0, void 0, void 0, breaks)\r\n    }\r\n}\r\n\r\nfunction getConstantLineSharpDirection(coord, axisCanvas) {\r\n    return Math.max(axisCanvas.start, axisCanvas.end) !== coord ? 1 : -1\r\n}\r\nvar Axis = function(renderSettings) {\r\n    this._renderer = renderSettings.renderer;\r\n    this._incidentOccurred = renderSettings.incidentOccurred;\r\n    this._eventTrigger = renderSettings.eventTrigger;\r\n    this._stripsGroup = renderSettings.stripsGroup;\r\n    this._stripLabelAxesGroup = renderSettings.stripLabelAxesGroup;\r\n    this._labelsAxesGroup = renderSettings.labelsAxesGroup;\r\n    this._constantLinesGroup = renderSettings.constantLinesGroup;\r\n    this._scaleBreaksGroup = renderSettings.scaleBreaksGroup;\r\n    this._axesContainerGroup = renderSettings.axesContainerGroup;\r\n    this._gridContainerGroup = renderSettings.gridGroup;\r\n    this._axisCssPrefix = renderSettings.widgetClass + \"-\" + (renderSettings.axisClass ? renderSettings.axisClass + \"-\" : \"\");\r\n    this._setType(renderSettings.axisType, renderSettings.drawingType);\r\n    this._createAxisGroups();\r\n    this._translator = this._createTranslator();\r\n    this.isArgumentAxis = renderSettings.isArgumentAxis;\r\n    this._viewport = {};\r\n    this._prevDataInfo = {};\r\n    this._firstDrawing = true;\r\n    this._initRange = {};\r\n    this._getTemplate = renderSettings.getTemplate\r\n};\r\nAxis.prototype = {\r\n    constructor: Axis,\r\n    _drawAxis() {\r\n        var options = this._options;\r\n        if (!options.visible) {\r\n            return\r\n        }\r\n        this._axisElement = this._createAxisElement();\r\n        this._updateAxisElementPosition();\r\n        this._axisElement.attr({\r\n            \"stroke-width\": options.width,\r\n            stroke: options.color,\r\n            \"stroke-opacity\": options.opacity\r\n        }).sharp(this._getSharpParam(true), this.getAxisSharpDirection()).append(this._axisLineGroup)\r\n    },\r\n    _createPathElement(points, attr, sharpDirection) {\r\n        return this.sharp(this._renderer.path(points, \"line\").attr(attr), sharpDirection)\r\n    },\r\n    sharp(svgElement) {\r\n        var sharpDirection = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\r\n        return svgElement.sharp(this._getSharpParam(), sharpDirection)\r\n    },\r\n    customPositionIsAvailable: () => false,\r\n    getOrthogonalAxis: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    getCustomPosition: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    getCustomBoundaryPosition: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    resolveOverlappingForCustomPositioning: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    hasNonBoundaryPosition: () => false,\r\n    customPositionIsBoundaryOrthogonalAxis: () => false,\r\n    getResolvedBoundaryPosition() {\r\n        return this.getOptions().position\r\n    },\r\n    getAxisSharpDirection() {\r\n        var position = this.getResolvedBoundaryPosition();\r\n        return this.hasNonBoundaryPosition() || position !== BOTTOM && position !== RIGHT ? 1 : -1\r\n    },\r\n    getSharpDirectionByCoords(coords) {\r\n        var canvas = this._getCanvasStartEnd();\r\n        var maxCoord = Math.max(canvas.start, canvas.end);\r\n        return this.getRadius ? 0 : maxCoord !== coords[this._isHorizontal ? \"x\" : \"y\"] ? 1 : -1\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var grid = that._getGridPoints(tick.coords);\r\n            if (grid.points) {\r\n                return that._createPathElement(grid.points, gridStyle, that.getSharpDirectionByCoords(tick.coords))\r\n            }\r\n            return null\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var isHorizontal = this._isHorizontal;\r\n        var tickPositionField = isHorizontal ? \"x\" : \"y\";\r\n        var orthogonalPositions = this._orthogonalPositions;\r\n        var positionFrom = orthogonalPositions.start;\r\n        var positionTo = orthogonalPositions.end;\r\n        var borderOptions = this.borderOptions;\r\n        var canvasStart = isHorizontal ? LEFT : TOP;\r\n        var canvasEnd = isHorizontal ? RIGHT : BOTTOM;\r\n        var axisCanvas = this.getCanvas();\r\n        var canvas = {\r\n            left: axisCanvas.left,\r\n            right: axisCanvas.width - axisCanvas.right,\r\n            top: axisCanvas.top,\r\n            bottom: axisCanvas.height - axisCanvas.bottom\r\n        };\r\n        var firstBorderLinePosition = borderOptions.visible && borderOptions[canvasStart] ? canvas[canvasStart] : void 0;\r\n        var lastBorderLinePosition = borderOptions.visible && borderOptions[canvasEnd] ? canvas[canvasEnd] : void 0;\r\n        var minDelta = MAX_GRID_BORDER_ADHENSION + firstBorderLinePosition;\r\n        var maxDelta = lastBorderLinePosition - MAX_GRID_BORDER_ADHENSION;\r\n        if (this.areCoordsOutsideAxis(coords) || void 0 === coords[tickPositionField] || coords[tickPositionField] < minDelta || coords[tickPositionField] > maxDelta) {\r\n            return {\r\n                points: null\r\n            }\r\n        }\r\n        return {\r\n            points: isHorizontal ? null !== coords[tickPositionField] ? [coords[tickPositionField], positionFrom, coords[tickPositionField], positionTo] : null : null !== coords[tickPositionField] ? [positionFrom, coords[tickPositionField], positionTo, coords[tickPositionField]] : null\r\n        }\r\n    },\r\n    _getConstantLinePos: function(parsedValue, canvasStart, canvasEnd) {\r\n        var value = this._getTranslatedCoord(parsedValue);\r\n        if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(value) || value < _min(canvasStart, canvasEnd) || value > _max(canvasStart, canvasEnd)) {\r\n            return\r\n        }\r\n        return value\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var positionFrom = this._orthogonalPositions.start;\r\n        var positionTo = this._orthogonalPositions.end;\r\n        return {\r\n            points: this._isHorizontal ? [value, positionFrom, value, positionTo] : [positionFrom, value, positionTo, value]\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr, getConstantLineSharpDirection(value, this._getCanvasStartEnd()))\r\n    },\r\n    _drawConstantLineLabelText: function(text, x, y, _ref2, group) {\r\n        var {\r\n            font: font,\r\n            cssClass: cssClass\r\n        } = _ref2;\r\n        return this._renderer.text(text, x, y).css(Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"patchFontOptions\"])(Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])({}, this._options.label.font, font))).attr({\r\n            align: \"center\",\r\n            class: cssClass\r\n        }).append(group)\r\n    },\r\n    _drawConstantLineLabels: function(parsedValue, lineLabelOptions, value, group) {\r\n        var _text;\r\n        var text = lineLabelOptions.text;\r\n        var options = this._options;\r\n        var labelOptions = options.label;\r\n        this._checkAlignmentConstantLineLabels(lineLabelOptions);\r\n        text = null !== (_text = text) && void 0 !== _text ? _text : this.formatLabel(parsedValue, labelOptions);\r\n        var coords = this._getConstantLineLabelsCoords(value, lineLabelOptions);\r\n        return this._drawConstantLineLabelText(text, coords.x, coords.y, lineLabelOptions, group)\r\n    },\r\n    _getStripPos: function(startValue, endValue, canvasStart, canvasEnd, range) {\r\n        var isContinuous = !!(range.minVisible || range.maxVisible);\r\n        var categories = (range.categories || []).reduce((function(result, cat) {\r\n            result.push(cat.valueOf());\r\n            return result\r\n        }), []);\r\n        var start;\r\n        var end;\r\n        var swap;\r\n        var startCategoryIndex;\r\n        var endCategoryIndex;\r\n        if (!isContinuous) {\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(startValue) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(endValue)) {\r\n                var parsedStartValue = this.parser(startValue);\r\n                var parsedEndValue = this.parser(endValue);\r\n                startCategoryIndex = Object(_core_utils_array__WEBPACK_IMPORTED_MODULE_5__[\"inArray\"])(Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(parsedStartValue) ? parsedStartValue.valueOf() : void 0, categories);\r\n                endCategoryIndex = Object(_core_utils_array__WEBPACK_IMPORTED_MODULE_5__[\"inArray\"])(Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(parsedEndValue) ? parsedEndValue.valueOf() : void 0, categories);\r\n                if (-1 === startCategoryIndex || -1 === endCategoryIndex) {\r\n                    return {\r\n                        from: 0,\r\n                        to: 0,\r\n                        outOfCanvas: true\r\n                    }\r\n                }\r\n                if (startCategoryIndex > endCategoryIndex) {\r\n                    swap = endValue;\r\n                    endValue = startValue;\r\n                    startValue = swap\r\n                }\r\n            }\r\n        }\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(startValue)) {\r\n            startValue = this.validateUnit(startValue, \"E2105\", \"strip\");\r\n            start = this._getTranslatedCoord(startValue, -1)\r\n        } else {\r\n            start = canvasStart\r\n        }\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(endValue)) {\r\n            endValue = this.validateUnit(endValue, \"E2105\", \"strip\");\r\n            end = this._getTranslatedCoord(endValue, 1)\r\n        } else {\r\n            end = canvasEnd\r\n        }\r\n        var stripPosition = start < end ? {\r\n            from: start,\r\n            to: end\r\n        } : {\r\n            from: end,\r\n            to: start\r\n        };\r\n        var visibleArea = this.getVisibleArea();\r\n        if (stripPosition.from <= visibleArea[0] && stripPosition.to <= visibleArea[0] || stripPosition.from >= visibleArea[1] && stripPosition.to >= visibleArea[1]) {\r\n            stripPosition.outOfCanvas = true\r\n        }\r\n        return stripPosition\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var x;\r\n        var y;\r\n        var width;\r\n        var height;\r\n        var orthogonalPositions = this._orthogonalPositions;\r\n        var positionFrom = orthogonalPositions.start;\r\n        var positionTo = orthogonalPositions.end;\r\n        if (this._isHorizontal) {\r\n            x = fromPoint;\r\n            y = _min(positionFrom, positionTo);\r\n            width = toPoint - fromPoint;\r\n            height = _abs(positionFrom - positionTo)\r\n        } else {\r\n            x = _min(positionFrom, positionTo);\r\n            y = fromPoint;\r\n            width = _abs(positionFrom - positionTo);\r\n            height = _abs(fromPoint - toPoint)\r\n        }\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    },\r\n    _createStrip: function(attrs) {\r\n        return this._renderer.rect(attrs.x, attrs.y, attrs.width, attrs.height)\r\n    },\r\n    _adjustStripLabels: function() {\r\n        var that = this;\r\n        this._strips.forEach((function(strip) {\r\n            if (strip.label) {\r\n                strip.label.attr(that._getAdjustedStripLabelCoords(strip))\r\n            }\r\n        }))\r\n    },\r\n    _adjustLabelsCoord(offset, maxWidth, checkCanvas) {\r\n        var getContainerAttrs = tick => this._getLabelAdjustedCoord(tick, offset + (tick.labelOffset || 0), maxWidth, checkCanvas);\r\n        this._majorTicks.forEach((function(tick) {\r\n            if (tick.label) {\r\n                tick.updateMultilineTextAlignment();\r\n                tick.label.attr(getContainerAttrs(tick))\r\n            } else {\r\n                tick.templateContainer && tick.templateContainer.attr(getContainerAttrs(tick))\r\n            }\r\n        }))\r\n    },\r\n    _adjustLabels: function(offset) {\r\n        var options = this.getOptions();\r\n        var positionsAreConsistent = options.position === options.label.position;\r\n        var maxSize = this._majorTicks.reduce((function(size, tick) {\r\n            if (!tick.getContentContainer()) {\r\n                return size\r\n            }\r\n            var bBox = tick.labelRotationAngle ? Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"rotateBBox\"])(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle) : tick.labelBBox;\r\n            return {\r\n                width: _max(size.width || 0, bBox.width),\r\n                height: _max(size.height || 0, bBox.height),\r\n                offset: _max(size.offset || 0, tick.labelOffset || 0)\r\n            }\r\n        }), {});\r\n        var additionalOffset = positionsAreConsistent ? this._isHorizontal ? maxSize.height : maxSize.width : 0;\r\n        this._adjustLabelsCoord(offset, maxSize.width);\r\n        return offset + additionalOffset + (additionalOffset && this._options.label.indentFromAxis) + (positionsAreConsistent ? maxSize.offset : 0)\r\n    },\r\n    _getLabelAdjustedCoord: function(tick, offset, maxWidth) {\r\n        offset = offset || 0;\r\n        var options = this._options;\r\n        var templateBox = tick.templateContainer && tick.templateContainer.getBBox();\r\n        var box = templateBox || Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"rotateBBox\"])(tick.labelBBox, [tick.labelCoords.x, tick.labelCoords.y], -tick.labelRotationAngle || 0);\r\n        var textAlign = tick.labelAlignment || options.label.alignment;\r\n        var isDiscrete = \"discrete\" === this._options.type;\r\n        var isFlatLabel = tick.labelRotationAngle % 90 === 0;\r\n        var indentFromAxis = options.label.indentFromAxis;\r\n        var labelPosition = options.label.position;\r\n        var axisPosition = this._axisPosition;\r\n        var labelCoords = tick.labelCoords;\r\n        var labelX = labelCoords.x;\r\n        var translateX;\r\n        var translateY;\r\n        if (this._isHorizontal) {\r\n            if (labelPosition === BOTTOM) {\r\n                translateY = axisPosition + indentFromAxis - box.y + offset\r\n            } else {\r\n                translateY = axisPosition - indentFromAxis - (box.y + box.height) - offset\r\n            }\r\n            if (textAlign === RIGHT) {\r\n                translateX = isDiscrete && isFlatLabel ? tick.coords.x - (box.x + box.width) : labelX - box.x - box.width\r\n            } else if (textAlign === LEFT) {\r\n                translateX = isDiscrete && isFlatLabel ? labelX - box.x - (tick.coords.x - labelX) : labelX - box.x\r\n            } else {\r\n                translateX = labelX - box.x - box.width / 2\r\n            }\r\n        } else {\r\n            translateY = labelCoords.y - box.y - box.height / 2;\r\n            if (labelPosition === LEFT) {\r\n                if (textAlign === LEFT) {\r\n                    translateX = axisPosition - indentFromAxis - maxWidth - box.x\r\n                } else if (textAlign === CENTER) {\r\n                    translateX = axisPosition - indentFromAxis - maxWidth / 2 - box.x - box.width / 2\r\n                } else {\r\n                    translateX = axisPosition - indentFromAxis - box.x - box.width\r\n                }\r\n                translateX -= offset\r\n            } else {\r\n                if (textAlign === RIGHT) {\r\n                    translateX = axisPosition + indentFromAxis + maxWidth - box.x - box.width\r\n                } else if (textAlign === CENTER) {\r\n                    translateX = axisPosition + indentFromAxis + maxWidth / 2 - box.x - box.width / 2\r\n                } else {\r\n                    translateX = axisPosition + indentFromAxis - box.x\r\n                }\r\n                translateX += offset\r\n            }\r\n        }\r\n        return {\r\n            translateX: translateX,\r\n            translateY: translateY\r\n        }\r\n    },\r\n    _createAxisConstantLineGroups: function() {\r\n        var renderer = this._renderer;\r\n        var classSelector = this._axisCssPrefix;\r\n        var constantLinesClass = classSelector + \"constant-lines\";\r\n        var insideGroup = renderer.g().attr({\r\n            class: constantLinesClass\r\n        });\r\n        var outsideGroup1 = renderer.g().attr({\r\n            class: constantLinesClass\r\n        });\r\n        var outsideGroup2 = renderer.g().attr({\r\n            class: constantLinesClass\r\n        });\r\n        return {\r\n            inside: insideGroup,\r\n            outside1: outsideGroup1,\r\n            left: outsideGroup1,\r\n            top: outsideGroup1,\r\n            outside2: outsideGroup2,\r\n            right: outsideGroup2,\r\n            bottom: outsideGroup2,\r\n            remove: function() {\r\n                this.inside.remove();\r\n                this.outside1.remove();\r\n                this.outside2.remove()\r\n            },\r\n            clear: function() {\r\n                this.inside.clear();\r\n                this.outside1.clear();\r\n                this.outside2.clear()\r\n            }\r\n        }\r\n    },\r\n    _createAxisGroups: function() {\r\n        var renderer = this._renderer;\r\n        var classSelector = this._axisCssPrefix;\r\n        this._axisGroup = renderer.g().attr({\r\n            class: classSelector + \"axis\"\r\n        }).enableLinks();\r\n        this._axisStripGroup = renderer.g().attr({\r\n            class: classSelector + \"strips\"\r\n        });\r\n        this._axisGridGroup = renderer.g().attr({\r\n            class: classSelector + \"grid\"\r\n        });\r\n        this._axisElementsGroup = renderer.g().attr({\r\n            class: classSelector + \"elements\"\r\n        });\r\n        this._axisLineGroup = renderer.g().attr({\r\n            class: classSelector + \"line\"\r\n        }).linkOn(this._axisGroup, \"axisLine\").linkAppend();\r\n        this._axisTitleGroup = renderer.g().attr({\r\n            class: classSelector + \"title\"\r\n        }).append(this._axisGroup);\r\n        this._axisConstantLineGroups = {\r\n            above: this._createAxisConstantLineGroups(),\r\n            under: this._createAxisConstantLineGroups()\r\n        };\r\n        this._axisStripLabelGroup = renderer.g().attr({\r\n            class: classSelector + \"axis-labels\"\r\n        })\r\n    },\r\n    _clearAxisGroups: function() {\r\n        this._axisGroup.remove();\r\n        this._axisStripGroup.remove();\r\n        this._axisStripLabelGroup.remove();\r\n        this._axisConstantLineGroups.above.remove();\r\n        this._axisConstantLineGroups.under.remove();\r\n        this._axisGridGroup.remove();\r\n        this._axisTitleGroup.clear();\r\n        if (!this._options.label.template || !this.isRendered()) {\r\n            this._axisElementsGroup.remove();\r\n            this._axisElementsGroup.clear()\r\n        }\r\n        this._axisLineGroup && this._axisLineGroup.clear();\r\n        this._axisStripGroup && this._axisStripGroup.clear();\r\n        this._axisGridGroup && this._axisGridGroup.clear();\r\n        this._axisConstantLineGroups.above.clear();\r\n        this._axisConstantLineGroups.under.clear();\r\n        this._axisStripLabelGroup && this._axisStripLabelGroup.clear()\r\n    },\r\n    _getLabelFormatObject: function(value, labelOptions, range, point, tickInterval, ticks) {\r\n        range = range || this._getViewportRange();\r\n        var formatObject = {\r\n            value: value,\r\n            valueText: Object(_smart_formatter__WEBPACK_IMPORTED_MODULE_0__[\"smartFormatter\"])(value, {\r\n                labelOptions: labelOptions,\r\n                ticks: ticks || convertTicksToValues(this._majorTicks),\r\n                tickInterval: null !== tickInterval && void 0 !== tickInterval ? tickInterval : this._tickInterval,\r\n                dataType: this._options.dataType,\r\n                logarithmBase: this._options.logarithmBase,\r\n                type: this._options.type,\r\n                showTransition: !this._options.marker.visible,\r\n                point: point\r\n            }) || \"\",\r\n            min: range.minVisible,\r\n            max: range.maxVisible\r\n        };\r\n        if (point) {\r\n            formatObject.point = point\r\n        }\r\n        return formatObject\r\n    },\r\n    formatLabel: function(value, labelOptions, range, point, tickInterval, ticks) {\r\n        var formatObject = this._getLabelFormatObject(value, labelOptions, range, point, tickInterval, ticks);\r\n        return Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(labelOptions.customizeText) ? labelOptions.customizeText.call(formatObject, formatObject) : formatObject.valueText\r\n    },\r\n    formatHint: function(value, labelOptions, range) {\r\n        var formatObject = this._getLabelFormatObject(value, labelOptions, range);\r\n        return Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(labelOptions.customizeHint) ? labelOptions.customizeHint.call(formatObject, formatObject) : void 0\r\n    },\r\n    formatRange(startValue, endValue, interval, argumentFormat) {\r\n        return Object(_smart_formatter__WEBPACK_IMPORTED_MODULE_0__[\"formatRange\"])({\r\n            startValue: startValue,\r\n            endValue: endValue,\r\n            tickInterval: interval,\r\n            argumentFormat: argumentFormat,\r\n            axisOptions: this.getOptions()\r\n        })\r\n    },\r\n    _setTickOffset: function() {\r\n        var options = this._options;\r\n        var discreteAxisDivisionMode = options.discreteAxisDivisionMode;\r\n        this._tickOffset = +(\"crossLabels\" !== discreteAxisDivisionMode || !discreteAxisDivisionMode)\r\n    },\r\n    aggregatedPointBetweenTicks() {\r\n        return \"crossTicks\" === this._options.aggregatedPointsPosition\r\n    },\r\n    resetApplyingAnimation: function(isFirstDrawing) {\r\n        this._resetApplyingAnimation = true;\r\n        if (isFirstDrawing) {\r\n            this._firstDrawing = true\r\n        }\r\n    },\r\n    isFirstDrawing() {\r\n        return this._firstDrawing\r\n    },\r\n    getMargins: function() {\r\n        var that = this;\r\n        var {\r\n            position: position,\r\n            offset: offset,\r\n            customPosition: customPosition,\r\n            placeholderSize: placeholderSize,\r\n            grid: grid,\r\n            tick: tick,\r\n            crosshairMargin: crosshairMargin\r\n        } = that._options;\r\n        var isDefinedCustomPositionOption = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(customPosition);\r\n        var boundaryPosition = that.getResolvedBoundaryPosition();\r\n        var canvas = that.getCanvas();\r\n        var cLeft = canvas.left;\r\n        var cTop = canvas.top;\r\n        var cRight = canvas.width - canvas.right;\r\n        var cBottom = canvas.height - canvas.bottom;\r\n        var edgeMarginCorrection = _max(grid.visible && grid.width || 0, tick.visible && tick.width || 0);\r\n        var constantLineAboveSeries = that._axisConstantLineGroups.above;\r\n        var constantLineUnderSeries = that._axisConstantLineGroups.under;\r\n        var boxes = [that._axisElementsGroup, constantLineAboveSeries.outside1, constantLineAboveSeries.outside2, constantLineUnderSeries.outside1, constantLineUnderSeries.outside2, that._axisLineGroup].map(group => group && group.getBBox()).concat(function(group) {\r\n            var box = group && group.getBBox();\r\n            if (!box || box.isEmpty) {\r\n                return box\r\n            }\r\n            if (that._isHorizontal) {\r\n                box.x = cLeft;\r\n                box.width = cRight - cLeft\r\n            } else {\r\n                box.y = cTop;\r\n                box.height = cBottom - cTop\r\n            }\r\n            return box\r\n        }(that._axisTitleGroup));\r\n        var margins = Object(_axes_utils__WEBPACK_IMPORTED_MODULE_20__[\"calculateCanvasMargins\"])(boxes, canvas);\r\n        margins[position] += crosshairMargin;\r\n        if (that.hasNonBoundaryPosition() && isDefinedCustomPositionOption) {\r\n            margins[boundaryPosition] = 0\r\n        }\r\n        if (placeholderSize) {\r\n            margins[position] = placeholderSize\r\n        }\r\n        if (edgeMarginCorrection) {\r\n            if (that._isHorizontal && canvas.right < edgeMarginCorrection && margins.right < edgeMarginCorrection) {\r\n                margins.right = edgeMarginCorrection\r\n            }\r\n            if (!that._isHorizontal && canvas.bottom < edgeMarginCorrection && margins.bottom < edgeMarginCorrection) {\r\n                margins.bottom = edgeMarginCorrection\r\n            }\r\n        }\r\n        if (!isDefinedCustomPositionOption && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(offset)) {\r\n            var moveByOffset = that.customPositionIsBoundary() && (offset > 0 && (boundaryPosition === LEFT || boundaryPosition === TOP) || offset < 0 && (boundaryPosition === RIGHT || boundaryPosition === BOTTOM));\r\n            margins[boundaryPosition] -= moveByOffset ? offset : 0\r\n        }\r\n        return margins\r\n    },\r\n    validateUnit: function(unit, idError, parameters) {\r\n        unit = this.parser(unit);\r\n        if (void 0 === unit && idError) {\r\n            this._incidentOccurred(idError, [parameters])\r\n        }\r\n        return unit\r\n    },\r\n    _setType: function(axisType, drawingType) {\r\n        var axisTypeMethods;\r\n        switch (axisType) {\r\n            case \"xyAxes\":\r\n                axisTypeMethods = _xy_axes__WEBPACK_IMPORTED_MODULE_15__[\"default\"];\r\n                break;\r\n            case \"polarAxes\":\r\n                axisTypeMethods = _polar_axes__WEBPACK_IMPORTED_MODULE_16__\r\n        }\r\n        Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])(this, axisTypeMethods[drawingType])\r\n    },\r\n    _getSharpParam: function() {\r\n        return true\r\n    },\r\n    _disposeBreaksGroup: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    dispose: function() {\r\n        [this._axisElementsGroup, this._axisStripGroup, this._axisGroup].forEach((function(g) {\r\n            g.dispose()\r\n        }));\r\n        this._strips = this._title = null;\r\n        this._axisStripGroup = this._axisConstantLineGroups = this._axisStripLabelGroup = this._axisBreaksGroup = null;\r\n        this._axisLineGroup = this._axisElementsGroup = this._axisGridGroup = null;\r\n        this._axisGroup = this._axisTitleGroup = null;\r\n        this._axesContainerGroup = this._stripsGroup = this._constantLinesGroup = this._labelsAxesGroup = null;\r\n        this._renderer = this._options = this._textOptions = this._textFontStyles = null;\r\n        this._translator = null;\r\n        this._majorTicks = this._minorTicks = null;\r\n        this._disposeBreaksGroup();\r\n        this._templatesRendered && this._templatesRendered.reject()\r\n    },\r\n    getOptions: function() {\r\n        return this._options\r\n    },\r\n    setPane: function(pane) {\r\n        this.pane = pane;\r\n        this._options.pane = pane\r\n    },\r\n    setTypes: function(type, axisType, typeSelector) {\r\n        this._options.type = type || this._options.type;\r\n        this._options[typeSelector] = axisType || this._options[typeSelector];\r\n        this._updateTranslator()\r\n    },\r\n    resetTypes: function(typeSelector) {\r\n        this._options.type = this._initTypes.type;\r\n        this._options[typeSelector] = this._initTypes[typeSelector]\r\n    },\r\n    getTranslator: function() {\r\n        return this._translator\r\n    },\r\n    updateOptions: function(options) {\r\n        var that = this;\r\n        var labelOpt = options.label;\r\n        validateAxisOptions(options);\r\n        that._options = options;\r\n        options.tick = options.tick || {};\r\n        options.minorTick = options.minorTick || {};\r\n        options.grid = options.grid || {};\r\n        options.minorGrid = options.minorGrid || {};\r\n        options.title = options.title || {};\r\n        options.marker = options.marker || {};\r\n        that._initTypes = {\r\n            type: options.type,\r\n            argumentType: options.argumentType,\r\n            valueType: options.valueType\r\n        };\r\n        that._setTickOffset();\r\n        that._isHorizontal = options.isHorizontal;\r\n        that.pane = options.pane;\r\n        that.name = options.name;\r\n        that.priority = options.priority;\r\n        that._hasLabelFormat = \"\" !== labelOpt.format && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(labelOpt.format);\r\n        that._textOptions = {\r\n            opacity: labelOpt.opacity,\r\n            align: \"center\",\r\n            class: labelOpt.cssClass\r\n        };\r\n        that._textFontStyles = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"patchFontOptions\"])(labelOpt.font);\r\n        if (options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].logarithmic) {\r\n            if (options.logarithmBaseError) {\r\n                that._incidentOccurred(\"E2104\");\r\n                delete options.logarithmBaseError\r\n            }\r\n        }\r\n        that._updateTranslator();\r\n        that._createConstantLines();\r\n        that._strips = (options.strips || []).map(o => Object(_strip__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(that, o));\r\n        that._majorTicks = that._minorTicks = null;\r\n        that._firstDrawing = true\r\n    },\r\n    calculateInterval: function(value, prevValue) {\r\n        var options = this._options;\r\n        if (!options || options.type !== _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].logarithmic) {\r\n            return _abs(value - prevValue)\r\n        }\r\n        var {\r\n            allowNegatives: allowNegatives,\r\n            linearThreshold: linearThreshold\r\n        } = new _translators_range__WEBPACK_IMPORTED_MODULE_10__[\"Range\"](this.getTranslator().getBusinessRange());\r\n        return _abs(Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getLogExt\"])(value, options.logarithmBase, allowNegatives, linearThreshold) - Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getLogExt\"])(prevValue, options.logarithmBase, allowNegatives, linearThreshold))\r\n    },\r\n    getCanvasRange() {\r\n        var translator = this._translator;\r\n        return {\r\n            startValue: translator.from(translator.translate(\"canvas_position_start\")),\r\n            endValue: translator.from(translator.translate(\"canvas_position_end\"))\r\n        }\r\n    },\r\n    _processCanvas: function(canvas) {\r\n        return canvas\r\n    },\r\n    updateCanvas: function(canvas, canvasRedesign) {\r\n        if (!canvasRedesign) {\r\n            var positions = this._orthogonalPositions = {\r\n                start: !this._isHorizontal ? canvas.left : canvas.top,\r\n                end: !this._isHorizontal ? canvas.width - canvas.right : canvas.height - canvas.bottom\r\n            };\r\n            positions.center = positions.start + (positions.end - positions.start) / 2\r\n        } else {\r\n            this._orthogonalPositions = null\r\n        }\r\n        this._canvas = canvas;\r\n        this._translator.updateCanvas(this._processCanvas(canvas));\r\n        this._initAxisPositions()\r\n    },\r\n    getCanvas: function() {\r\n        return this._canvas\r\n    },\r\n    getAxisShift() {\r\n        return this._axisShift || 0\r\n    },\r\n    hideTitle: function() {\r\n        if (this._options.title.text) {\r\n            this._incidentOccurred(\"W2105\", [this._isHorizontal ? \"horizontal\" : \"vertical\"]);\r\n            this._axisTitleGroup.clear()\r\n        }\r\n    },\r\n    getTitle: function() {\r\n        return this._title\r\n    },\r\n    hideOuterElements: function() {\r\n        var options = this._options;\r\n        if ((options.label.visible || this._outsideConstantLines.length) && !this._translator.getBusinessRange().isEmpty()) {\r\n            this._incidentOccurred(\"W2106\", [this._isHorizontal ? \"horizontal\" : \"vertical\"]);\r\n            this._axisElementsGroup.clear();\r\n            callAction(this._outsideConstantLines, \"removeLabel\")\r\n        }\r\n    },\r\n    _resolveLogarithmicOptionsForRange(range) {\r\n        var options = this._options;\r\n        if (options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].logarithmic) {\r\n            range.addRange({\r\n                allowNegatives: void 0 !== options.allowNegatives ? options.allowNegatives : range.min <= 0\r\n            });\r\n            if (!isNaN(options.linearThreshold)) {\r\n                range.linearThreshold = options.linearThreshold\r\n            }\r\n        }\r\n    },\r\n    adjustViewport(businessRange) {\r\n        var options = this._options;\r\n        var isDiscrete = options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete;\r\n        var categories = this._seriesData && this._seriesData.categories || [];\r\n        var wholeRange = this.adjustRange(Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getVizRangeObject\"])(options.wholeRange));\r\n        var visualRange = this.getViewport() || {};\r\n        var result = new _translators_range__WEBPACK_IMPORTED_MODULE_10__[\"Range\"](businessRange);\r\n        this._addConstantLinesToRange(result, \"minVisible\", \"maxVisible\");\r\n        var minDefined = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(visualRange.startValue);\r\n        var maxDefined = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(visualRange.endValue);\r\n        if (!isDiscrete) {\r\n            minDefined = minDefined && (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(wholeRange.endValue) || visualRange.startValue < wholeRange.endValue);\r\n            maxDefined = maxDefined && (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(wholeRange.startValue) || visualRange.endValue > wholeRange.startValue)\r\n        }\r\n        var minVisible = minDefined ? visualRange.startValue : result.minVisible;\r\n        var maxVisible = maxDefined ? visualRange.endValue : result.maxVisible;\r\n        if (!isDiscrete) {\r\n            var _wholeRange$startValu, _wholeRange$endValue;\r\n            result.min = null !== (_wholeRange$startValu = wholeRange.startValue) && void 0 !== _wholeRange$startValu ? _wholeRange$startValu : result.min;\r\n            result.max = null !== (_wholeRange$endValue = wholeRange.endValue) && void 0 !== _wholeRange$endValue ? _wholeRange$endValue : result.max\r\n        } else {\r\n            var categoriesInfo = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getCategoriesInfo\"])(categories, wholeRange.startValue, wholeRange.endValue);\r\n            categories = categoriesInfo.categories;\r\n            result.categories = categories\r\n        }\r\n        var adjustedVisualRange = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"adjustVisualRange\"])({\r\n            axisType: options.type,\r\n            dataType: options.dataType,\r\n            base: options.logarithmBase\r\n        }, {\r\n            startValue: minDefined ? visualRange.startValue : void 0,\r\n            endValue: maxDefined ? visualRange.endValue : void 0,\r\n            length: visualRange.length\r\n        }, {\r\n            categories: categories,\r\n            min: wholeRange.startValue,\r\n            max: wholeRange.endValue\r\n        }, {\r\n            categories: categories,\r\n            min: minVisible,\r\n            max: maxVisible\r\n        });\r\n        result.minVisible = adjustedVisualRange.startValue;\r\n        result.maxVisible = adjustedVisualRange.endValue;\r\n        !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(result.min) && (result.min = result.minVisible);\r\n        !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(result.max) && (result.max = result.maxVisible);\r\n        result.addRange({});\r\n        this._resolveLogarithmicOptionsForRange(result);\r\n        return result\r\n    },\r\n    adjustRange(range) {\r\n        range = range || {};\r\n        var isDiscrete = this._options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete;\r\n        var isLogarithmic = this._options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].logarithmic;\r\n        var disabledNegatives = false === this._options.allowNegatives;\r\n        if (isLogarithmic) {\r\n            range.startValue = disabledNegatives && range.startValue <= 0 ? null : range.startValue;\r\n            range.endValue = disabledNegatives && range.endValue <= 0 ? null : range.endValue\r\n        }\r\n        if (!isDiscrete && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(range.startValue) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(range.endValue) && range.startValue > range.endValue) {\r\n            var tmp = range.endValue;\r\n            range.endValue = range.startValue;\r\n            range.startValue = tmp\r\n        }\r\n        return range\r\n    },\r\n    _getVisualRangeUpdateMode(viewport, newRange, oppositeValue) {\r\n        var value = this._options.visualRangeUpdateMode;\r\n        var translator = this._translator;\r\n        var range = this._seriesData;\r\n        var prevDataInfo = this._prevDataInfo;\r\n        if (prevDataInfo.isEmpty && !prevDataInfo.containsConstantLine) {\r\n            return KEEP\r\n        }\r\n        if (!this.isArgumentAxis) {\r\n            var _viewport = this.getViewport();\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(_viewport.startValue) && !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(_viewport.endValue) && !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(_viewport.length)) {\r\n                return RESET\r\n            }\r\n        }\r\n        if (this.isArgumentAxis) {\r\n            if (-1 === [SHIFT, KEEP, RESET].indexOf(value)) {\r\n                if (range.axisType === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete) {\r\n                    var categories = range.categories;\r\n                    var newCategories = newRange.categories;\r\n                    var visualRange = this.visualRange();\r\n                    if (categories && newCategories && categories.length && -1 !== newCategories.map(c => c.valueOf()).join(\",\").indexOf(categories.map(c => c.valueOf()).join(\",\")) && (visualRange.startValue.valueOf() !== categories[0].valueOf() || visualRange.endValue.valueOf() !== categories[categories.length - 1].valueOf())) {\r\n                        value = KEEP\r\n                    } else {\r\n                        value = RESET\r\n                    }\r\n                } else {\r\n                    var minPoint = translator.translate(range.min);\r\n                    var minVisiblePoint = translator.translate(viewport.startValue);\r\n                    var maxPoint = translator.translate(range.max);\r\n                    var maxVisiblePoint = translator.translate(viewport.endValue);\r\n                    if (minPoint === minVisiblePoint && maxPoint === maxVisiblePoint) {\r\n                        value = RESET\r\n                    } else if (minPoint !== minVisiblePoint && maxPoint === maxVisiblePoint) {\r\n                        value = SHIFT\r\n                    } else {\r\n                        value = KEEP\r\n                    }\r\n                }\r\n                if (value === KEEP && prevDataInfo.isEmpty && prevDataInfo.containsConstantLine) {\r\n                    value = RESET\r\n                }\r\n            }\r\n        } else if (-1 === [KEEP, RESET].indexOf(value)) {\r\n            if (oppositeValue === KEEP) {\r\n                value = KEEP\r\n            } else {\r\n                value = RESET\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _handleBusinessRangeChanged(oppositeVisualRangeUpdateMode, axisReinitialized, newRange) {\r\n        var visualRange = this.visualRange();\r\n        if (axisReinitialized || this._translator.getBusinessRange().isEmpty()) {\r\n            return\r\n        }\r\n        var visualRangeUpdateMode = this._lastVisualRangeUpdateMode = this._getVisualRangeUpdateMode(visualRange, newRange, oppositeVisualRangeUpdateMode);\r\n        if (visualRangeUpdateMode === KEEP) {\r\n            this._setVisualRange([visualRange.startValue, visualRange.endValue])\r\n        } else if (visualRangeUpdateMode === RESET) {\r\n            this._setVisualRange([null, null])\r\n        } else if (visualRangeUpdateMode === SHIFT) {\r\n            this._setVisualRange({\r\n                length: this.getVisualRangeLength()\r\n            })\r\n        }\r\n    },\r\n    getVisualRangeLength(range) {\r\n        var currentBusinessRange = range || this._translator.getBusinessRange();\r\n        var {\r\n            type: type\r\n        } = this._options;\r\n        var length;\r\n        if (type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].logarithmic) {\r\n            length = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_12__[\"adjust\"])(this.calculateInterval(currentBusinessRange.maxVisible, currentBusinessRange.minVisible))\r\n        } else if (type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete) {\r\n            var categoriesInfo = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getCategoriesInfo\"])(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\r\n            length = categoriesInfo.categories.length\r\n        } else {\r\n            length = currentBusinessRange.maxVisible - currentBusinessRange.minVisible\r\n        }\r\n        return length\r\n    },\r\n    getVisualRangeCenter(range, useMerge) {\r\n        var translator = this.getTranslator();\r\n        var businessRange = translator.getBusinessRange();\r\n        var currentBusinessRange = useMerge ? Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])(true, {}, businessRange, range || {}) : range || businessRange;\r\n        var {\r\n            type: type,\r\n            logarithmBase: logarithmBase\r\n        } = this._options;\r\n        var center;\r\n        if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(currentBusinessRange.minVisible) || !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(currentBusinessRange.maxVisible)) {\r\n            return\r\n        }\r\n        if (type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].logarithmic) {\r\n            var {\r\n                allowNegatives: allowNegatives,\r\n                linearThreshold: linearThreshold,\r\n                minVisible: minVisible,\r\n                maxVisible: maxVisible\r\n            } = currentBusinessRange;\r\n            center = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"raiseToExt\"])(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_12__[\"adjust\"])(Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getLogExt\"])(maxVisible, logarithmBase, allowNegatives, linearThreshold) + Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getLogExt\"])(minVisible, logarithmBase, allowNegatives, linearThreshold)) / 2, logarithmBase, allowNegatives, linearThreshold)\r\n        } else if (type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete) {\r\n            var categoriesInfo = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getCategoriesInfo\"])(currentBusinessRange.categories, currentBusinessRange.minVisible, currentBusinessRange.maxVisible);\r\n            var index = Math.ceil(categoriesInfo.categories.length / 2) - 1;\r\n            center = businessRange.categories.indexOf(categoriesInfo.categories[index])\r\n        } else {\r\n            center = translator.toValue((currentBusinessRange.maxVisible.valueOf() + currentBusinessRange.minVisible.valueOf()) / 2)\r\n        }\r\n        return center\r\n    },\r\n    setBusinessRange(range, axisReinitialized, oppositeVisualRangeUpdateMode, argCategories) {\r\n        var _that$_seriesData$min, _that$_seriesData$max;\r\n        var options = this._options;\r\n        var isDiscrete = options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete;\r\n        this._handleBusinessRangeChanged(oppositeVisualRangeUpdateMode, axisReinitialized, range);\r\n        this._seriesData = new _translators_range__WEBPACK_IMPORTED_MODULE_10__[\"Range\"](range);\r\n        var dataIsEmpty = this._seriesData.isEmpty();\r\n        var rangeWithConstantLines = new _translators_range__WEBPACK_IMPORTED_MODULE_10__[\"Range\"](this._seriesData);\r\n        this._addConstantLinesToRange(rangeWithConstantLines, \"minVisible\", \"maxVisible\");\r\n        this._prevDataInfo = {\r\n            isEmpty: dataIsEmpty,\r\n            containsConstantLine: rangeWithConstantLines.containsConstantLine\r\n        };\r\n        this._seriesData.addRange({\r\n            categories: options.categories,\r\n            dataType: options.dataType,\r\n            axisType: options.type,\r\n            base: options.logarithmBase,\r\n            invert: options.inverted\r\n        });\r\n        this._resolveLogarithmicOptionsForRange(this._seriesData);\r\n        if (!isDiscrete) {\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(this._seriesData.min) && !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(this._seriesData.max)) {\r\n                var visualRange = this.getViewport();\r\n                visualRange && this._seriesData.addRange({\r\n                    min: visualRange.startValue,\r\n                    max: visualRange.endValue\r\n                })\r\n            }\r\n            var synchronizedValue = options.synchronizedValue;\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(synchronizedValue)) {\r\n                this._seriesData.addRange({\r\n                    min: synchronizedValue,\r\n                    max: synchronizedValue\r\n                })\r\n            }\r\n        }\r\n        this._seriesData.minVisible = null !== (_that$_seriesData$min = this._seriesData.minVisible) && void 0 !== _that$_seriesData$min ? _that$_seriesData$min : this._seriesData.min;\r\n        this._seriesData.maxVisible = null !== (_that$_seriesData$max = this._seriesData.maxVisible) && void 0 !== _that$_seriesData$max ? _that$_seriesData$max : this._seriesData.max;\r\n        if (!this.isArgumentAxis && options.showZero) {\r\n            this._seriesData.correctValueZeroLevel()\r\n        }\r\n        this._seriesData.sortCategories(this.getCategoriesSorter(argCategories));\r\n        this._seriesData.userBreaks = this._seriesData.isEmpty() ? [] : this._getScaleBreaks(options, this._seriesData, this._series, this.isArgumentAxis);\r\n        this._translator.updateBusinessRange(this._getViewportRange())\r\n    },\r\n    _addConstantLinesToRange(dataRange, minValueField, maxValueField) {\r\n        this._outsideConstantLines.concat(this._insideConstantLines || []).forEach(cl => {\r\n            if (cl.options.extendAxis) {\r\n                var value = cl.getParsedValue();\r\n                dataRange.addRange({\r\n                    containsConstantLine: true,\r\n                    [minValueField]: value,\r\n                    [maxValueField]: value\r\n                })\r\n            }\r\n        })\r\n    },\r\n    setGroupSeries: function(series) {\r\n        this._series = series\r\n    },\r\n    getLabelsPosition: function() {\r\n        var options = this._options;\r\n        var position = options.position;\r\n        var labelShift = options.label.indentFromAxis + (this._axisShift || 0) + this._constantLabelOffset;\r\n        var axisPosition = this._axisPosition;\r\n        return position === TOP || position === LEFT ? axisPosition - labelShift : axisPosition + labelShift\r\n    },\r\n    getFormattedValue: function(value, options, point) {\r\n        var labelOptions = this._options.label;\r\n        return Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(value) ? this.formatLabel(value, Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])(true, {}, labelOptions, options), void 0, point) : null\r\n    },\r\n    _getBoundaryTicks: function(majors, viewPort) {\r\n        var length = majors.length;\r\n        var options = this._options;\r\n        var customBounds = options.customBoundTicks;\r\n        var min = viewPort.minVisible;\r\n        var max = viewPort.maxVisible;\r\n        var addMinMax = options.showCustomBoundaryTicks ? this._boundaryTicksVisibility : {};\r\n        var boundaryTicks = [];\r\n        if (options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete) {\r\n            if (this._tickOffset && 0 !== majors.length) {\r\n                boundaryTicks = [majors[0], majors[majors.length - 1]]\r\n            }\r\n        } else if (customBounds) {\r\n            if (addMinMax.min && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(customBounds[0])) {\r\n                boundaryTicks.push(customBounds[0])\r\n            }\r\n            if (addMinMax.max && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(customBounds[1])) {\r\n                boundaryTicks.push(customBounds[1])\r\n            }\r\n        } else {\r\n            if (addMinMax.min && (0 === length || majors[0] > min)) {\r\n                boundaryTicks.push(min)\r\n            }\r\n            if (addMinMax.max && (0 === length || majors[length - 1] < max)) {\r\n                boundaryTicks.push(max)\r\n            }\r\n        }\r\n        return boundaryTicks\r\n    },\r\n    setPercentLabelFormat: function() {\r\n        if (!this._hasLabelFormat) {\r\n            this._options.label.format = \"percent\"\r\n        }\r\n    },\r\n    resetAutoLabelFormat: function() {\r\n        if (!this._hasLabelFormat) {\r\n            delete this._options.label.format\r\n        }\r\n    },\r\n    getMultipleAxesSpacing: function() {\r\n        return this._options.multipleAxesSpacing || 0\r\n    },\r\n    getTicksValues: function() {\r\n        return {\r\n            majorTicksValues: convertTicksToValues(this._majorTicks),\r\n            minorTicksValues: convertTicksToValues(this._minorTicks)\r\n        }\r\n    },\r\n    estimateTickInterval: function(canvas) {\r\n        this.updateCanvas(canvas);\r\n        return this._tickInterval !== this._getTicks(this._getViewportRange(), _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"], true).tickInterval\r\n    },\r\n    setTicks: function(ticks) {\r\n        var majors = ticks.majorTicks || [];\r\n        this._majorTicks = majors.map(createMajorTick(this, this._renderer, this._getSkippedCategory(majors)));\r\n        this._minorTicks = (ticks.minorTicks || []).map(createMinorTick(this, this._renderer));\r\n        this._isSynchronized = true\r\n    },\r\n    _adjustDivisionFactor: function(val) {\r\n        return val\r\n    },\r\n    _getTicks: function(viewPort, incidentOccurred, skipTickGeneration) {\r\n        var options = this._options;\r\n        var customTicks = options.customTicks;\r\n        var customMinorTicks = options.customMinorTicks;\r\n        return getTickGenerator(options, incidentOccurred || this._incidentOccurred, skipTickGeneration, this._translator.getBusinessRange().isEmpty(), this._adjustDivisionFactor.bind(this), viewPort)({\r\n            min: viewPort.minVisible,\r\n            max: viewPort.maxVisible,\r\n            categories: viewPort.categories,\r\n            isSpacedMargin: viewPort.isSpacedMargin\r\n        }, this._getScreenDelta(), options.tickInterval, \"ignore\" === options.label.overlappingBehavior || options.forceUserTickInterval, {\r\n            majors: customTicks,\r\n            minors: customMinorTicks\r\n        }, options.minorTickInterval, options.minorTickCount, this._initialBreaks)\r\n    },\r\n    _createTicksAndLabelFormat: function(range, incidentOccurred) {\r\n        var options = this._options;\r\n        var ticks = this._getTicks(range, incidentOccurred, false);\r\n        if (!range.isEmpty() && options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete && \"datetime\" === options.dataType && !this._hasLabelFormat && ticks.ticks.length) {\r\n            options.label.format = _format_helper__WEBPACK_IMPORTED_MODULE_6__[\"default\"].getDateFormatByTicks(ticks.ticks)\r\n        }\r\n        return ticks\r\n    },\r\n    getAggregationInfo(useAllAggregatedPoints, range) {\r\n        var _visualRange$startVal, _visualRange$endValue, _that$_seriesData;\r\n        var options = this._options;\r\n        var marginOptions = this._marginOptions;\r\n        var businessRange = new _translators_range__WEBPACK_IMPORTED_MODULE_10__[\"Range\"](this.getTranslator().getBusinessRange()).addRange(range);\r\n        var visualRange = this.getViewport();\r\n        var minVisible = null !== (_visualRange$startVal = null === visualRange || void 0 === visualRange ? void 0 : visualRange.startValue) && void 0 !== _visualRange$startVal ? _visualRange$startVal : businessRange.minVisible;\r\n        var maxVisible = null !== (_visualRange$endValue = null === visualRange || void 0 === visualRange ? void 0 : visualRange.endValue) && void 0 !== _visualRange$endValue ? _visualRange$endValue : businessRange.maxVisible;\r\n        var ticks = [];\r\n        if (options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete && options.aggregateByCategory) {\r\n            return {\r\n                aggregateByCategory: true\r\n            }\r\n        }\r\n        var aggregationInterval = options.aggregationInterval;\r\n        var aggregationGroupWidth = options.aggregationGroupWidth;\r\n        if (!aggregationGroupWidth && marginOptions) {\r\n            if (marginOptions.checkInterval) {\r\n                aggregationGroupWidth = options.axisDivisionFactor\r\n            }\r\n            if (marginOptions.sizePointNormalState) {\r\n                aggregationGroupWidth = Math.min(marginOptions.sizePointNormalState, options.axisDivisionFactor)\r\n            }\r\n        }\r\n        var minInterval = !options.aggregationGroupWidth && !aggregationInterval && range.interval;\r\n        var generateTicks = configureGenerator(options, aggregationGroupWidth, businessRange, this._getScreenDelta(), minInterval);\r\n        var tickInterval = generateTicks(aggregationInterval, true, minVisible, maxVisible, null === (_that$_seriesData = this._seriesData) || void 0 === _that$_seriesData ? void 0 : _that$_seriesData.breaks).tickInterval;\r\n        if (options.type !== _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete) {\r\n            var min = useAllAggregatedPoints ? businessRange.min : minVisible;\r\n            var max = useAllAggregatedPoints ? businessRange.max : maxVisible;\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(min) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(max)) {\r\n                var add = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getAddFunction\"])({\r\n                    base: options.logarithmBase,\r\n                    axisType: options.type,\r\n                    dataType: options.dataType\r\n                }, false);\r\n                var start = min;\r\n                var end = max;\r\n                if (!useAllAggregatedPoints) {\r\n                    var maxMinDistance = Math.max(this.calculateInterval(max, min), \"datetime\" === options.dataType ? _core_utils_date__WEBPACK_IMPORTED_MODULE_13__[\"default\"].dateToMilliseconds(tickInterval) : tickInterval);\r\n                    start = add(min, maxMinDistance, -1);\r\n                    end = add(max, maxMinDistance)\r\n                }\r\n                start = start < businessRange.min ? businessRange.min : start;\r\n                end = end > businessRange.max ? businessRange.max : end;\r\n                var breaks = this._getScaleBreaks(options, {\r\n                    minVisible: start,\r\n                    maxVisible: end\r\n                }, this._series, this.isArgumentAxis);\r\n                var filteredBreaks = this._filterBreaks(breaks, {\r\n                    minVisible: start,\r\n                    maxVisible: end\r\n                }, options.breakStyle);\r\n                ticks = generateTicks(tickInterval, false, start, end, filteredBreaks).ticks\r\n            }\r\n        }\r\n        this._aggregationInterval = tickInterval;\r\n        return {\r\n            interval: tickInterval,\r\n            ticks: ticks\r\n        }\r\n    },\r\n    getTickInterval() {\r\n        return this._tickInterval\r\n    },\r\n    getAggregationInterval() {\r\n        return this._aggregationInterval\r\n    },\r\n    createTicks: function(canvas) {\r\n        var that = this;\r\n        var renderer = that._renderer;\r\n        var options = that._options;\r\n        if (!canvas) {\r\n            return\r\n        }\r\n        that._isSynchronized = false;\r\n        that.updateCanvas(canvas);\r\n        var range = that._getViewportRange();\r\n        that._initialBreaks = range.breaks = this._seriesData.breaks = that._filterBreaks(this._seriesData.userBreaks, range, options.breakStyle);\r\n        that._estimatedTickInterval = that._getTicks(that.adjustViewport(this._seriesData), _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"], true).tickInterval;\r\n        var margins = this._calculateValueMargins();\r\n        range.addRange({\r\n            minVisible: margins.minValue,\r\n            maxVisible: margins.maxValue,\r\n            isSpacedMargin: margins.isSpacedMargin\r\n        });\r\n        var ticks = that._createTicksAndLabelFormat(range);\r\n        var boundaryTicks = that._getBoundaryTicks(ticks.ticks, that._getViewportRange());\r\n        if (options.showCustomBoundaryTicks && boundaryTicks.length) {\r\n            that._boundaryTicks = [boundaryTicks[0]].map(createBoundaryTick(that, renderer, true));\r\n            if (boundaryTicks.length > 1) {\r\n                that._boundaryTicks = that._boundaryTicks.concat([boundaryTicks[1]].map(createBoundaryTick(that, renderer, false)))\r\n            }\r\n        } else {\r\n            that._boundaryTicks = []\r\n        }\r\n        var minors = (ticks.minorTicks || []).filter((function(minor) {\r\n            return !boundaryTicks.some((function(boundary) {\r\n                return Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(boundary) === Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(minor)\r\n            }))\r\n        }));\r\n        that._tickInterval = ticks.tickInterval;\r\n        that._minorTickInterval = ticks.minorTickInterval;\r\n        var oldMajorTicks = that._majorTicks || [];\r\n        var majorTicksByValues = oldMajorTicks.reduce((r, t) => {\r\n            r[t.value.valueOf()] = t;\r\n            return r\r\n        }, {});\r\n        var sameType = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"type\"])(ticks.ticks[0]) === Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"type\"])(oldMajorTicks[0] && oldMajorTicks[0].value);\r\n        var skippedCategory = that._getSkippedCategory(ticks.ticks);\r\n        var majorTicks = ticks.ticks.map(v => {\r\n            var tick = majorTicksByValues[v.valueOf()];\r\n            if (tick && sameType) {\r\n                delete majorTicksByValues[v.valueOf()];\r\n                tick.setSkippedCategory(skippedCategory);\r\n                return tick\r\n            } else {\r\n                return createMajorTick(that, renderer, skippedCategory)(v)\r\n            }\r\n        });\r\n        that._majorTicks = majorTicks;\r\n        var oldMinorTicks = that._minorTicks || [];\r\n        that._minorTicks = minors.map((v, i) => {\r\n            var minorTick = oldMinorTicks[i];\r\n            if (minorTick) {\r\n                minorTick.updateValue(v);\r\n                return minorTick\r\n            }\r\n            return createMinorTick(that, renderer)(v)\r\n        });\r\n        that._ticksToRemove = Object.keys(majorTicksByValues).map(k => majorTicksByValues[k]).concat(oldMinorTicks.slice(that._minorTicks.length, oldMinorTicks.length));\r\n        that._ticksToRemove.forEach(t => {\r\n            var _t$label;\r\n            return null === (_t$label = t.label) || void 0 === _t$label ? void 0 : _t$label.removeTitle()\r\n        });\r\n        if (ticks.breaks) {\r\n            that._seriesData.breaks = ticks.breaks\r\n        }\r\n        that._reinitTranslator(that._getViewportRange())\r\n    },\r\n    _reinitTranslator: function(range) {\r\n        var translator = this._translator;\r\n        if (this._isSynchronized) {\r\n            return\r\n        }\r\n        translator.updateBusinessRange(range)\r\n    },\r\n    _getViewportRange() {\r\n        return this.adjustViewport(this._seriesData)\r\n    },\r\n    setMarginOptions: function(options) {\r\n        this._marginOptions = options\r\n    },\r\n    getMarginOptions() {\r\n        var _this$_marginOptions;\r\n        return null !== (_this$_marginOptions = this._marginOptions) && void 0 !== _this$_marginOptions ? _this$_marginOptions : {}\r\n    },\r\n    _calculateRangeInterval: function(interval) {\r\n        var isDateTime = \"datetime\" === this._options.dataType;\r\n        var minArgs = [];\r\n        var addToArgs = function(value) {\r\n            Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(value) && minArgs.push(isDateTime ? _core_utils_date__WEBPACK_IMPORTED_MODULE_13__[\"default\"].dateToMilliseconds(value) : value)\r\n        };\r\n        addToArgs(this._tickInterval);\r\n        addToArgs(this._estimatedTickInterval);\r\n        Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(interval) && minArgs.push(interval);\r\n        addToArgs(this._aggregationInterval);\r\n        return this._calculateWorkWeekInterval(_min.apply(this, minArgs))\r\n    },\r\n    _calculateWorkWeekInterval(businessInterval) {\r\n        var options = this._options;\r\n        if (\"datetime\" === options.dataType && options.workdaysOnly && businessInterval) {\r\n            var workWeek = options.workWeek.length * dateIntervals.day;\r\n            var weekend = dateIntervals.week - workWeek;\r\n            if (workWeek !== businessInterval && weekend < businessInterval) {\r\n                var weekendsCount = Math.ceil(businessInterval / dateIntervals.week);\r\n                businessInterval -= weekend * weekendsCount\r\n            } else if (weekend >= businessInterval && businessInterval > dateIntervals.day) {\r\n                businessInterval = dateIntervals.day\r\n            }\r\n        }\r\n        return businessInterval\r\n    },\r\n    _getConvertIntervalCoefficient(intervalInPx, screenDelta) {\r\n        var ratioOfCanvasRange = this._translator.ratioOfCanvasRange();\r\n        return ratioOfCanvasRange / (ratioOfCanvasRange * screenDelta / (intervalInPx + screenDelta))\r\n    },\r\n    _calculateValueMargins(ticks) {\r\n        this._resetMargins();\r\n        var margins = this.getMarginOptions();\r\n        var marginSize = (margins.size || 0) / 2;\r\n        var options = this._options;\r\n        var dataRange = this._getViewportRange();\r\n        var viewPort = this.getViewport();\r\n        var screenDelta = this._getScreenDelta();\r\n        var isDiscrete = -1 !== (options.type || \"\").indexOf(_axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete);\r\n        var valueMarginsEnabled = options.valueMarginsEnabled && !isDiscrete && !this.customPositionIsBoundaryOrthogonalAxis();\r\n        var translator = this._translator;\r\n        var minValueMargin = options.minValueMargin;\r\n        var maxValueMargin = options.maxValueMargin;\r\n        var minPadding = 0;\r\n        var maxPadding = 0;\r\n        var interval = 0;\r\n        var rangeInterval;\r\n        if (dataRange.stubData || !screenDelta) {\r\n            return {\r\n                startPadding: 0,\r\n                endPadding: 0\r\n            }\r\n        }\r\n        if (this.isArgumentAxis && margins.checkInterval) {\r\n            rangeInterval = this._calculateRangeInterval(dataRange.interval);\r\n            var pxInterval = translator.getInterval(rangeInterval);\r\n            if (isFinite(pxInterval)) {\r\n                interval = Math.ceil(pxInterval / (2 * this._getConvertIntervalCoefficient(pxInterval, screenDelta)))\r\n            } else {\r\n                rangeInterval = 0\r\n            }\r\n        }\r\n        var minPercentPadding;\r\n        var maxPercentPadding;\r\n        var maxPaddingValue = screenDelta * MAX_MARGIN_VALUE / 2;\r\n        if (valueMarginsEnabled) {\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(minValueMargin)) {\r\n                minPercentPadding = isFinite(minValueMargin) ? minValueMargin : 0\r\n            } else if (!this.isArgumentAxis && margins.checkInterval && Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(dataRange.minVisible) > 0 && Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(dataRange.minVisible) === Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(dataRange.min)) {\r\n                minPadding = MIN_BAR_MARGIN\r\n            } else {\r\n                minPadding = Math.max(marginSize, interval);\r\n                minPadding = Math.min(maxPaddingValue, minPadding)\r\n            }\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(maxValueMargin)) {\r\n                maxPercentPadding = isFinite(maxValueMargin) ? maxValueMargin : 0\r\n            } else if (!this.isArgumentAxis && margins.checkInterval && Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(dataRange.maxVisible) < 0 && Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(dataRange.maxVisible) === Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(dataRange.max)) {\r\n                maxPadding = MIN_BAR_MARGIN\r\n            } else {\r\n                maxPadding = Math.max(marginSize, interval);\r\n                maxPadding = Math.min(maxPaddingValue, maxPadding)\r\n            }\r\n        }\r\n        var percentStick = margins.percentStick && !this.isArgumentAxis;\r\n        if (percentStick) {\r\n            if (1 === _abs(dataRange.max)) {\r\n                maxPadding = 0\r\n            }\r\n            if (1 === _abs(dataRange.min)) {\r\n                minPadding = 0\r\n            }\r\n        }\r\n        var canvasStartEnd = this._getCanvasStartEnd();\r\n        var commonMargin = 1 + (minPercentPadding || 0) + (maxPercentPadding || 0);\r\n        var screenDeltaWithMargins = (screenDelta - minPadding - maxPadding) / commonMargin || screenDelta;\r\n        if (void 0 !== minPercentPadding || void 0 !== maxPercentPadding) {\r\n            if (void 0 !== minPercentPadding) {\r\n                minPadding = screenDeltaWithMargins * minPercentPadding\r\n            }\r\n            if (void 0 !== maxPercentPadding) {\r\n                maxPadding = screenDeltaWithMargins * maxPercentPadding\r\n            }\r\n        }\r\n        var minValue;\r\n        var maxValue;\r\n        if (options.type !== _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete && ticks && ticks.length > 1 && !options.skipViewportExtending && !viewPort.action && false !== options.endOnTick) {\r\n            var length = ticks.length;\r\n            var firstTickPosition = translator.translate(ticks[0].value);\r\n            var lastTickPosition = translator.translate(ticks[length - 1].value);\r\n            var invertMultiplier = firstTickPosition > lastTickPosition ? -1 : 1;\r\n            var minTickPadding = _max(invertMultiplier * (canvasStartEnd.start - firstTickPosition), 0);\r\n            var maxTickPadding = _max(invertMultiplier * (lastTickPosition - canvasStartEnd.end), 0);\r\n            if (minTickPadding > minPadding || maxTickPadding > maxPadding) {\r\n                var commonPadding = maxTickPadding + minTickPadding;\r\n                var coeff = this._getConvertIntervalCoefficient(commonPadding, screenDelta);\r\n                if (minTickPadding >= minPadding) {\r\n                    minValue = ticks[0].value\r\n                }\r\n                if (maxTickPadding >= maxPadding) {\r\n                    maxValue = ticks[length - 1].value\r\n                }\r\n                minPadding = _max(minTickPadding, minPadding) / coeff;\r\n                maxPadding = _max(maxTickPadding, maxPadding) / coeff\r\n            }\r\n        }\r\n        minPercentPadding = void 0 === minPercentPadding ? minPadding / screenDeltaWithMargins : minPercentPadding;\r\n        maxPercentPadding = void 0 === maxPercentPadding ? maxPadding / screenDeltaWithMargins : maxPercentPadding;\r\n        if (!isDiscrete) {\r\n            if (this._translator.isInverted()) {\r\n                var _minValue, _maxValue;\r\n                minValue = null !== (_minValue = minValue) && void 0 !== _minValue ? _minValue : translator.from(canvasStartEnd.start + screenDelta * minPercentPadding, -1);\r\n                maxValue = null !== (_maxValue = maxValue) && void 0 !== _maxValue ? _maxValue : translator.from(canvasStartEnd.end - screenDelta * maxPercentPadding, 1)\r\n            } else {\r\n                var _minValue2, _maxValue2;\r\n                minValue = null !== (_minValue2 = minValue) && void 0 !== _minValue2 ? _minValue2 : translator.from(canvasStartEnd.start - screenDelta * minPercentPadding, -1);\r\n                maxValue = null !== (_maxValue2 = maxValue) && void 0 !== _maxValue2 ? _maxValue2 : translator.from(canvasStartEnd.end + screenDelta * maxPercentPadding, 1)\r\n            }\r\n        }\r\n        var {\r\n            correctedMin: correctedMin,\r\n            correctedMax: correctedMax,\r\n            start: start,\r\n            end: end\r\n        } = this.getCorrectedValuesToZero(minValue, maxValue);\r\n        minPadding = null !== start && void 0 !== start ? start : minPadding;\r\n        maxPadding = null !== end && void 0 !== end ? end : maxPadding;\r\n        return {\r\n            startPadding: translator.isInverted() ? maxPadding : minPadding,\r\n            endPadding: translator.isInverted() ? minPadding : maxPadding,\r\n            minValue: null !== correctedMin && void 0 !== correctedMin ? correctedMin : minValue,\r\n            maxValue: null !== correctedMax && void 0 !== correctedMax ? correctedMax : maxValue,\r\n            interval: rangeInterval,\r\n            isSpacedMargin: minPadding === maxPadding && 0 !== minPadding\r\n        }\r\n    },\r\n    getCorrectedValuesToZero(minValue, maxValue) {\r\n        var that = this;\r\n        var translator = that._translator;\r\n        var canvasStartEnd = that._getCanvasStartEnd();\r\n        var dataRange = that._getViewportRange();\r\n        var screenDelta = that._getScreenDelta();\r\n        var options = that._options;\r\n        var start;\r\n        var end;\r\n        var correctedMin;\r\n        var correctedMax;\r\n        var correctZeroLevel = (minPoint, maxPoint) => {\r\n            var minExpectedPadding = _abs(canvasStartEnd.start - minPoint);\r\n            var maxExpectedPadding = _abs(canvasStartEnd.end - maxPoint);\r\n            var coeff = that._getConvertIntervalCoefficient(minExpectedPadding + maxExpectedPadding, screenDelta);\r\n            start = minExpectedPadding / coeff;\r\n            end = maxExpectedPadding / coeff\r\n        };\r\n        if (!that.isArgumentAxis && \"datetime\" !== options.dataType) {\r\n            if (minValue * dataRange.min <= 0 && minValue * dataRange.minVisible <= 0) {\r\n                correctZeroLevel(translator.translate(0), translator.translate(maxValue));\r\n                correctedMin = 0\r\n            }\r\n            if (maxValue * dataRange.max <= 0 && maxValue * dataRange.maxVisible <= 0) {\r\n                correctZeroLevel(translator.translate(minValue), translator.translate(0));\r\n                correctedMax = 0\r\n            }\r\n        }\r\n        return {\r\n            start: isFinite(start) ? start : null,\r\n            end: isFinite(end) ? end : null,\r\n            correctedMin: correctedMin,\r\n            correctedMax: correctedMax\r\n        }\r\n    },\r\n    applyMargins() {\r\n        if (this._isSynchronized) {\r\n            return\r\n        }\r\n        var margins = this._calculateValueMargins(this._majorTicks);\r\n        var canvas = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])({}, this._canvas, {\r\n            startPadding: margins.startPadding,\r\n            endPadding: margins.endPadding\r\n        });\r\n        this._translator.updateCanvas(this._processCanvas(canvas));\r\n        if (isFinite(margins.interval)) {\r\n            var br = this._translator.getBusinessRange();\r\n            br.addRange({\r\n                interval: margins.interval\r\n            });\r\n            this._translator.updateBusinessRange(br)\r\n        }\r\n    },\r\n    _resetMargins: function() {\r\n        this._reinitTranslator(this._getViewportRange());\r\n        if (this._canvas) {\r\n            this._translator.updateCanvas(this._processCanvas(this._canvas))\r\n        }\r\n    },\r\n    _createConstantLines() {\r\n        var constantLines = (this._options.constantLines || []).map(o => Object(_constant_line__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(this, o));\r\n        this._outsideConstantLines = constantLines.filter(l => \"outside\" === l.labelPosition);\r\n        this._insideConstantLines = constantLines.filter(l => \"inside\" === l.labelPosition)\r\n    },\r\n    draw: function(canvas, borderOptions) {\r\n        var that = this;\r\n        var options = this._options;\r\n        that.borderOptions = borderOptions || {\r\n            visible: false\r\n        };\r\n        that._resetMargins();\r\n        that.createTicks(canvas);\r\n        that.applyMargins();\r\n        that._clearAxisGroups();\r\n        initTickCoords(that._majorTicks);\r\n        initTickCoords(that._minorTicks);\r\n        initTickCoords(that._boundaryTicks);\r\n        that._axisGroup.append(that._axesContainerGroup);\r\n        that._drawAxis();\r\n        that._drawTitle();\r\n        drawTickMarks(that._majorTicks, options.tick);\r\n        drawTickMarks(that._minorTicks, options.minorTick);\r\n        drawTickMarks(that._boundaryTicks, options.tick);\r\n        var drawGridLine = that._getGridLineDrawer();\r\n        drawGrids(that._majorTicks, drawGridLine);\r\n        drawGrids(that._minorTicks, drawGridLine);\r\n        callAction(that._majorTicks, \"drawLabel\", that._getViewportRange(), that._getTemplate(options.label.template));\r\n        that._templatesRendered && that._templatesRendered.reject();\r\n        that._templatesRendered = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_19__[\"Deferred\"];\r\n        that._majorTicks.forEach((function(tick) {\r\n            tick.labelRotationAngle = 0;\r\n            tick.labelAlignment = void 0;\r\n            tick.labelOffset = 0\r\n        }));\r\n        callAction(that._outsideConstantLines.concat(that._insideConstantLines), \"draw\");\r\n        callAction(that._strips, \"draw\");\r\n        that._dateMarkers = that._drawDateMarkers() || [];\r\n        that._stripLabelAxesGroup && that._axisStripLabelGroup.append(that._stripLabelAxesGroup);\r\n        that._gridContainerGroup && that._axisGridGroup.append(that._gridContainerGroup);\r\n        that._stripsGroup && that._axisStripGroup.append(that._stripsGroup);\r\n        that._labelsAxesGroup && that._axisElementsGroup.append(that._labelsAxesGroup);\r\n        if (that._constantLinesGroup) {\r\n            that._axisConstantLineGroups.above.inside.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.above.outside1.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.above.outside2.append(that._constantLinesGroup.above);\r\n            that._axisConstantLineGroups.under.inside.append(that._constantLinesGroup.under);\r\n            that._axisConstantLineGroups.under.outside1.append(that._constantLinesGroup.under);\r\n            that._axisConstantLineGroups.under.outside2.append(that._constantLinesGroup.under)\r\n        }\r\n        that._measureTitle();\r\n        Object(_axes_utils__WEBPACK_IMPORTED_MODULE_20__[\"measureLabels\"])(that._majorTicks);\r\n        !options.label.template && that._applyWordWrap();\r\n        Object(_axes_utils__WEBPACK_IMPORTED_MODULE_20__[\"measureLabels\"])(that._outsideConstantLines);\r\n        Object(_axes_utils__WEBPACK_IMPORTED_MODULE_20__[\"measureLabels\"])(that._insideConstantLines);\r\n        Object(_axes_utils__WEBPACK_IMPORTED_MODULE_20__[\"measureLabels\"])(that._strips);\r\n        Object(_axes_utils__WEBPACK_IMPORTED_MODULE_20__[\"measureLabels\"])(that._dateMarkers);\r\n        that._adjustConstantLineLabels(that._insideConstantLines);\r\n        that._adjustStripLabels();\r\n        var offset = that._constantLabelOffset = that._adjustConstantLineLabels(that._outsideConstantLines);\r\n        if (!that._translator.getBusinessRange().isEmpty()) {\r\n            that._setLabelsPlacement();\r\n            offset = that._adjustLabels(offset)\r\n        }\r\n        _core_utils_deferred__WEBPACK_IMPORTED_MODULE_19__[\"when\"].apply(this, that._majorTicks.map(tick => tick.getTemplateDeferred())).done(() => {\r\n            that._templatesRendered.resolve()\r\n        });\r\n        offset = that._adjustDateMarkers(offset);\r\n        that._adjustTitle(offset)\r\n    },\r\n    getTemplatesDef() {\r\n        return this._templatesRendered\r\n    },\r\n    setRenderedState(state) {\r\n        this._drawn = state\r\n    },\r\n    isRendered() {\r\n        return this._drawn\r\n    },\r\n    _applyWordWrap() {\r\n        var convertedTickInterval;\r\n        var textWidth;\r\n        var textHeight;\r\n        var options = this._options;\r\n        var tickInterval = this._tickInterval;\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(tickInterval)) {\r\n            convertedTickInterval = this.getTranslator().getInterval(\"datetime\" === options.dataType ? _core_utils_date__WEBPACK_IMPORTED_MODULE_13__[\"default\"].dateToMilliseconds(tickInterval) : tickInterval)\r\n        }\r\n        var displayMode = this._validateDisplayMode(options.label.displayMode);\r\n        var overlappingMode = this._validateOverlappingMode(options.label.overlappingBehavior, displayMode);\r\n        var wordWrapMode = options.label.wordWrap || \"none\";\r\n        var overflowMode = options.label.textOverflow || \"none\";\r\n        if ((\"none\" !== wordWrapMode || \"none\" !== overflowMode) && displayMode !== ROTATE && overlappingMode !== ROTATE && \"auto\" !== overlappingMode) {\r\n            var usefulSpace = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(options.placeholderSize) ? options.placeholderSize - options.label.indentFromAxis : void 0;\r\n            if (this._isHorizontal) {\r\n                textWidth = convertedTickInterval;\r\n                textHeight = usefulSpace\r\n            } else {\r\n                textWidth = usefulSpace;\r\n                textHeight = convertedTickInterval\r\n            }\r\n            var correctByWidth = false;\r\n            var correctByHeight = false;\r\n            if (textWidth) {\r\n                if (this._majorTicks.some(tick => tick.labelBBox.width > textWidth)) {\r\n                    correctByWidth = true\r\n                }\r\n            }\r\n            if (textHeight) {\r\n                if (this._majorTicks.some(tick => tick.labelBBox.height > textHeight)) {\r\n                    correctByHeight = true\r\n                }\r\n            }\r\n            if (correctByWidth || correctByHeight) {\r\n                this._majorTicks.forEach(tick => {\r\n                    tick.label && tick.label.setMaxSize(textWidth, textHeight, options.label)\r\n                });\r\n                Object(_axes_utils__WEBPACK_IMPORTED_MODULE_20__[\"measureLabels\"])(this._majorTicks)\r\n            }\r\n        }\r\n    },\r\n    _measureTitle: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    animate() {\r\n        callAction(this._majorTicks, \"animateLabels\")\r\n    },\r\n    updateSize(canvas, animate) {\r\n        var updateTitle = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : true;\r\n        this.updateCanvas(canvas);\r\n        if (updateTitle) {\r\n            this._checkTitleOverflow();\r\n            this._measureTitle();\r\n            this._updateTitleCoords()\r\n        }\r\n        this._reinitTranslator(this._getViewportRange());\r\n        this.applyMargins();\r\n        var animationEnabled = !this._firstDrawing && animate;\r\n        var options = this._options;\r\n        initTickCoords(this._majorTicks);\r\n        initTickCoords(this._minorTicks);\r\n        initTickCoords(this._boundaryTicks);\r\n        if (this._resetApplyingAnimation && !this._firstDrawing) {\r\n            this._resetStartCoordinates()\r\n        }\r\n        cleanUpInvalidTicks(this._majorTicks);\r\n        cleanUpInvalidTicks(this._minorTicks);\r\n        cleanUpInvalidTicks(this._boundaryTicks);\r\n        if (this._axisElement) {\r\n            this._updateAxisElementPosition()\r\n        }\r\n        updateTicksPosition(this._majorTicks, options.tick, animationEnabled);\r\n        updateTicksPosition(this._minorTicks, options.minorTick, animationEnabled);\r\n        updateTicksPosition(this._boundaryTicks, options.tick);\r\n        callAction(this._majorTicks, \"updateLabelPosition\", animationEnabled);\r\n        this._outsideConstantLines.concat(this._insideConstantLines || []).forEach(l => l.updatePosition(animationEnabled));\r\n        callAction(this._strips, \"updatePosition\", animationEnabled);\r\n        updateGridsPosition(this._majorTicks, animationEnabled);\r\n        updateGridsPosition(this._minorTicks, animationEnabled);\r\n        if (animationEnabled) {\r\n            callAction(this._ticksToRemove || [], \"fadeOutElements\")\r\n        }\r\n        this.prepareAnimation();\r\n        this._ticksToRemove = null;\r\n        if (!this._translator.getBusinessRange().isEmpty()) {\r\n            this._firstDrawing = false\r\n        }\r\n        this._resetApplyingAnimation = false;\r\n        this._updateLabelsPosition()\r\n    },\r\n    _updateLabelsPosition: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    prepareAnimation() {\r\n        var action = \"saveCoords\";\r\n        callAction(this._majorTicks, action);\r\n        callAction(this._minorTicks, action);\r\n        callAction(this._insideConstantLines, action);\r\n        callAction(this._outsideConstantLines, action);\r\n        callAction(this._strips, action)\r\n    },\r\n    _resetStartCoordinates() {\r\n        var action = \"resetCoordinates\";\r\n        callAction(this._majorTicks, action);\r\n        callAction(this._minorTicks, action);\r\n        callAction(this._insideConstantLines, action);\r\n        callAction(this._outsideConstantLines, action);\r\n        callAction(this._strips, action)\r\n    },\r\n    applyClipRects: function(elementsClipID, canvasClipID) {\r\n        this._axisGroup.attr({\r\n            \"clip-path\": canvasClipID\r\n        });\r\n        this._axisStripGroup.attr({\r\n            \"clip-path\": elementsClipID\r\n        });\r\n        this._axisElementsGroup.attr({\r\n            \"clip-path\": canvasClipID\r\n        })\r\n    },\r\n    _validateVisualRange(optionValue) {\r\n        var range = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getVizRangeObject\"])(optionValue);\r\n        if (void 0 !== range.startValue) {\r\n            range.startValue = this.validateUnit(range.startValue)\r\n        }\r\n        if (void 0 !== range.endValue) {\r\n            range.endValue = this.validateUnit(range.endValue)\r\n        }\r\n        return Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"convertVisualRangeObject\"])(range, !_isArray(optionValue))\r\n    },\r\n    _validateOptions(options) {\r\n        options.wholeRange = this._validateVisualRange(options.wholeRange);\r\n        options.visualRange = options._customVisualRange = this._validateVisualRange(options._customVisualRange);\r\n        this._setVisualRange(options._customVisualRange)\r\n    },\r\n    validate() {\r\n        var options = this._options;\r\n        var dataType = this.isArgumentAxis ? options.argumentType : options.valueType;\r\n        var parser = dataType ? Object(_components_parse_utils__WEBPACK_IMPORTED_MODULE_7__[\"getParser\"])(dataType) : function(unit) {\r\n            return unit\r\n        };\r\n        this.parser = parser;\r\n        options.dataType = dataType;\r\n        this._validateOptions(options)\r\n    },\r\n    resetVisualRange(isSilent) {\r\n        this._seriesData.minVisible = this._seriesData.min;\r\n        this._seriesData.maxVisible = this._seriesData.max;\r\n        this.handleZooming([null, null], {\r\n            start: !!isSilent,\r\n            end: !!isSilent\r\n        })\r\n    },\r\n    _setVisualRange(visualRange, allowPartialUpdate) {\r\n        var range = this.adjustRange(Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getVizRangeObject\"])(visualRange));\r\n        if (allowPartialUpdate) {\r\n            Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(range.startValue) && (this._viewport.startValue = range.startValue);\r\n            Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(range.endValue) && (this._viewport.endValue = range.endValue)\r\n        } else {\r\n            this._viewport = range\r\n        }\r\n    },\r\n    _applyZooming(visualRange, allowPartialUpdate) {\r\n        this._resetVisualRangeOption();\r\n        this._setVisualRange(visualRange, allowPartialUpdate);\r\n        var viewPort = this.getViewport();\r\n        this._seriesData.userBreaks = this._getScaleBreaks(this._options, {\r\n            minVisible: viewPort.startValue,\r\n            maxVisible: viewPort.endValue\r\n        }, this._series, this.isArgumentAxis);\r\n        this._translator.updateBusinessRange(this._getViewportRange())\r\n    },\r\n    getZoomStartEventArg(event, actionType) {\r\n        return {\r\n            axis: this,\r\n            range: this.visualRange(),\r\n            cancel: false,\r\n            event: event,\r\n            actionType: actionType\r\n        }\r\n    },\r\n    _getZoomEndEventArg(previousRange, event, actionType, zoomFactor, shift) {\r\n        var newRange = this.visualRange();\r\n        return {\r\n            axis: this,\r\n            previousRange: previousRange,\r\n            range: newRange,\r\n            cancel: false,\r\n            event: event,\r\n            actionType: actionType,\r\n            zoomFactor: zoomFactor,\r\n            shift: shift,\r\n            rangeStart: newRange.startValue,\r\n            rangeEnd: newRange.endValue\r\n        }\r\n    },\r\n    getZoomBounds() {\r\n        var wholeRange = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getVizRangeObject\"])(this._options.wholeRange);\r\n        var range = this.getTranslator().getBusinessRange();\r\n        var secondPriorityRange = {\r\n            startValue: getZoomBoundValue(this._initRange.startValue, range.min),\r\n            endValue: getZoomBoundValue(this._initRange.endValue, range.max)\r\n        };\r\n        return {\r\n            startValue: getZoomBoundValue(wholeRange.startValue, secondPriorityRange.startValue),\r\n            endValue: getZoomBoundValue(wholeRange.endValue, secondPriorityRange.endValue)\r\n        }\r\n    },\r\n    setInitRange() {\r\n        this._initRange = {};\r\n        if (0 === Object.keys(this._options.wholeRange || {}).length) {\r\n            this._initRange = this.getZoomBounds()\r\n        }\r\n    },\r\n    _resetVisualRangeOption() {\r\n        this._options._customVisualRange = {}\r\n    },\r\n    getTemplatesGroups() {\r\n        var ticks = this._majorTicks;\r\n        if (ticks) {\r\n            return this._majorTicks.map(tick => tick.templateContainer).filter(item => Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(item))\r\n        } else {\r\n            return []\r\n        }\r\n    },\r\n    setCustomVisualRange(range) {\r\n        this._options._customVisualRange = range\r\n    },\r\n    visualRange() {\r\n        var args = arguments;\r\n        var visualRange;\r\n        if (0 === args.length) {\r\n            var adjustedRange = this._getAdjustedBusinessRange();\r\n            var startValue = adjustedRange.minVisible;\r\n            var endValue = adjustedRange.maxVisible;\r\n            if (this._options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete) {\r\n                var _startValue, _endValue;\r\n                startValue = null !== (_startValue = startValue) && void 0 !== _startValue ? _startValue : adjustedRange.categories[0];\r\n                endValue = null !== (_endValue = endValue) && void 0 !== _endValue ? _endValue : adjustedRange.categories[adjustedRange.categories.length - 1];\r\n                return {\r\n                    startValue: startValue,\r\n                    endValue: endValue,\r\n                    categories: Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getCategoriesInfo\"])(adjustedRange.categories, startValue, endValue).categories\r\n                }\r\n            }\r\n            return {\r\n                startValue: startValue,\r\n                endValue: endValue\r\n            }\r\n        } else if (_isArray(args[0])) {\r\n            visualRange = args[0]\r\n        } else if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isPlainObject\"])(args[0])) {\r\n            visualRange = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])({}, args[0])\r\n        } else {\r\n            visualRange = [args[0], args[1]]\r\n        }\r\n        var zoomResults = this.handleZooming(visualRange, args[1]);\r\n        if (!zoomResults.isPrevented) {\r\n            this._visualRange(this, zoomResults)\r\n        }\r\n    },\r\n    handleZooming(visualRange, preventEvents, domEvent, action) {\r\n        preventEvents = preventEvents || {};\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(visualRange)) {\r\n            visualRange = this._validateVisualRange(visualRange);\r\n            visualRange.action = action\r\n        }\r\n        var zoomStartEvent = this.getZoomStartEventArg(domEvent, action);\r\n        var previousRange = zoomStartEvent.range;\r\n        !preventEvents.start && this._eventTrigger(\"zoomStart\", zoomStartEvent);\r\n        var zoomResults = {\r\n            isPrevented: zoomStartEvent.cancel,\r\n            skipEventRising: preventEvents.skipEventRising,\r\n            range: visualRange || zoomStartEvent.range\r\n        };\r\n        if (!zoomStartEvent.cancel) {\r\n            Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(visualRange) && this._applyZooming(visualRange, preventEvents.allowPartialUpdate);\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(this._storedZoomEndParams)) {\r\n                this._storedZoomEndParams = {\r\n                    startRange: previousRange,\r\n                    type: this.getOptions().type\r\n                }\r\n            }\r\n            this._storedZoomEndParams.event = domEvent;\r\n            this._storedZoomEndParams.action = action;\r\n            this._storedZoomEndParams.prevent = !!preventEvents.end\r\n        }\r\n        return zoomResults\r\n    },\r\n    handleZoomEnd() {\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(this._storedZoomEndParams) && !this._storedZoomEndParams.prevent) {\r\n            var previousRange = this._storedZoomEndParams.startRange;\r\n            var domEvent = this._storedZoomEndParams.event;\r\n            var action = this._storedZoomEndParams.action;\r\n            var previousBusinessRange = {\r\n                minVisible: previousRange.startValue,\r\n                maxVisible: previousRange.endValue,\r\n                categories: previousRange.categories\r\n            };\r\n            var typeIsNotChanged = this.getOptions().type === this._storedZoomEndParams.type;\r\n            var shift = typeIsNotChanged ? Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_12__[\"adjust\"])(this.getVisualRangeCenter() - this.getVisualRangeCenter(previousBusinessRange, false)) : NaN;\r\n            var zoomFactor = typeIsNotChanged ? +(Math.round(this.getVisualRangeLength(previousBusinessRange) / (this.getVisualRangeLength() || 1) + \"e+2\") + \"e-2\") : NaN;\r\n            var zoomEndEvent = this._getZoomEndEventArg(previousRange, domEvent, action, zoomFactor, shift);\r\n            zoomEndEvent.cancel = this.checkZoomingLowerLimitOvercome(1 === zoomFactor ? \"pan\" : \"zoom\", zoomFactor).stopInteraction;\r\n            this._eventTrigger(\"zoomEnd\", zoomEndEvent);\r\n            if (zoomEndEvent.cancel) {\r\n                this._restorePreviousVisualRange(previousRange)\r\n            }\r\n            this._storedZoomEndParams = null\r\n        }\r\n    },\r\n    _restorePreviousVisualRange(previousRange) {\r\n        this._storedZoomEndParams = null;\r\n        this._applyZooming(previousRange);\r\n        this._visualRange(this, previousRange)\r\n    },\r\n    checkZoomingLowerLimitOvercome(actionType, zoomFactor, range) {\r\n        var options = this._options;\r\n        var translator = this._translator;\r\n        var minZoom = options.minVisualRangeLength;\r\n        var correctedRange = range;\r\n        var visualRange;\r\n        var isOvercoming = \"zoom\" === actionType && zoomFactor >= 1;\r\n        var businessRange = translator.getBusinessRange();\r\n        if (range) {\r\n            visualRange = this.adjustRange(Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getVizRangeObject\"])(range));\r\n            visualRange = {\r\n                minVisible: visualRange.startValue,\r\n                maxVisible: visualRange.endValue,\r\n                categories: businessRange.categories\r\n            }\r\n        }\r\n        var beforeVisualRangeLength = this.getVisualRangeLength(businessRange);\r\n        var afterVisualRangeLength = this.getVisualRangeLength(visualRange);\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(minZoom) || \"discrete\" === options.type) {\r\n            minZoom = translator.convert(minZoom);\r\n            if (visualRange && minZoom < beforeVisualRangeLength && minZoom >= afterVisualRangeLength) {\r\n                correctedRange = Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"getVizRangeObject\"])(translator.getRangeByMinZoomValue(minZoom, visualRange));\r\n                isOvercoming = false\r\n            } else {\r\n                isOvercoming &= minZoom > afterVisualRangeLength\r\n            }\r\n        } else {\r\n            var canvasLength = this._translator.canvasLength;\r\n            var fullRange = {\r\n                minVisible: businessRange.min,\r\n                maxVisible: businessRange.max,\r\n                categories: businessRange.categories\r\n            };\r\n            isOvercoming &= this.getVisualRangeLength(fullRange) / canvasLength >= afterVisualRangeLength\r\n        }\r\n        return {\r\n            stopInteraction: !!isOvercoming,\r\n            correctedRange: correctedRange\r\n        }\r\n    },\r\n    isExtremePosition(isMax) {\r\n        var extremeDataValue;\r\n        var seriesData;\r\n        if (\"discrete\" === this._options.type) {\r\n            seriesData = this._translator.getBusinessRange();\r\n            extremeDataValue = isMax ? seriesData.categories[seriesData.categories.length - 1] : seriesData.categories[0]\r\n        } else {\r\n            seriesData = this.getZoomBounds();\r\n            extremeDataValue = isMax ? seriesData.endValue : seriesData.startValue\r\n        }\r\n        var translator = this.getTranslator();\r\n        var extremePoint = translator.translate(extremeDataValue);\r\n        var visualRange = this.visualRange();\r\n        var visualRangePoint = isMax ? translator.translate(visualRange.endValue) : translator.translate(visualRange.startValue);\r\n        return _abs(visualRangePoint - extremePoint) < SCROLL_THRESHOLD\r\n    },\r\n    getViewport() {\r\n        return this._viewport\r\n    },\r\n    getFullTicks: function() {\r\n        var majors = this._majorTicks || [];\r\n        if (this._options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete) {\r\n            return convertTicksToValues(majors)\r\n        } else {\r\n            return convertTicksToValues(majors.concat(this._minorTicks, this._boundaryTicks)).sort((function(a, b) {\r\n                return Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(a) - Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"valueOf\"])(b)\r\n            }))\r\n        }\r\n    },\r\n    measureLabels: function(canvas, withIndents) {\r\n        var that = this;\r\n        var options = that._options;\r\n        var widthAxis = options.visible ? options.width : 0;\r\n        var ticks;\r\n        var indent = withIndents ? options.label.indentFromAxis + .5 * options.tick.length : 0;\r\n        var tickInterval;\r\n        var viewportRange = that._getViewportRange();\r\n        if (viewportRange.isEmpty() || !options.label.visible || !that._axisElementsGroup) {\r\n            return {\r\n                height: widthAxis,\r\n                width: widthAxis,\r\n                x: 0,\r\n                y: 0\r\n            }\r\n        }\r\n        if (that._majorTicks) {\r\n            ticks = convertTicksToValues(that._majorTicks)\r\n        } else {\r\n            that.updateCanvas(canvas);\r\n            ticks = that._createTicksAndLabelFormat(viewportRange, _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"]);\r\n            tickInterval = ticks.tickInterval;\r\n            ticks = ticks.ticks\r\n        }\r\n        var maxText = ticks.reduce((function(prevLabel, tick, index) {\r\n            var label = that.formatLabel(tick, options.label, viewportRange, void 0, tickInterval, ticks);\r\n            if (prevLabel.length < label.length) {\r\n                return label\r\n            } else {\r\n                return prevLabel\r\n            }\r\n        }), that.formatLabel(ticks[0], options.label, viewportRange, void 0, tickInterval, ticks));\r\n        var text = that._renderer.text(maxText, 0, 0).css(that._textFontStyles).attr(that._textOptions).append(that._renderer.root);\r\n        var box = text.getBBox();\r\n        text.remove();\r\n        return {\r\n            x: box.x,\r\n            y: box.y,\r\n            width: box.width + indent,\r\n            height: box.height + indent\r\n        }\r\n    },\r\n    _setLabelsPlacement: function() {\r\n        if (!this._options.label.visible) {\r\n            return\r\n        }\r\n        var labelOpt = this._options.label;\r\n        var displayMode = this._validateDisplayMode(labelOpt.displayMode);\r\n        var overlappingMode = this._validateOverlappingMode(labelOpt.overlappingBehavior, displayMode);\r\n        var ignoreOverlapping = \"none\" === overlappingMode || \"ignore\" === overlappingMode;\r\n        var behavior = {\r\n            rotationAngle: labelOpt.rotationAngle,\r\n            staggeringSpacing: labelOpt.staggeringSpacing\r\n        };\r\n        var notRecastStep;\r\n        var boxes = this._majorTicks.map((function(tick) {\r\n            return tick.labelBBox\r\n        }));\r\n        var step = this._getStep(boxes);\r\n        switch (displayMode) {\r\n            case ROTATE:\r\n                if (ignoreOverlapping) {\r\n                    notRecastStep = true;\r\n                    step = 1\r\n                }\r\n                this._applyLabelMode(displayMode, step, boxes, labelOpt, notRecastStep);\r\n                break;\r\n            case \"stagger\":\r\n                if (ignoreOverlapping) {\r\n                    step = 2\r\n                }\r\n                this._applyLabelMode(displayMode, _max(step, 2), boxes, labelOpt);\r\n                break;\r\n            default:\r\n                this._applyLabelOverlapping(boxes, overlappingMode, step, behavior)\r\n        }\r\n    },\r\n    _applyLabelOverlapping: function(boxes, mode, step, behavior) {\r\n        var labelOpt = this._options.label;\r\n        var majorTicks = this._majorTicks;\r\n        if (\"none\" === mode || \"ignore\" === mode) {\r\n            return\r\n        }\r\n        if (step > 1 && boxes.some((function(box, index, array) {\r\n                if (0 === index) {\r\n                    return false\r\n                }\r\n                return _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].areLabelsOverlap(box, array[index - 1], labelOpt.minSpacing, labelOpt.alignment)\r\n            }))) {\r\n            this._applyLabelMode(mode, step, boxes, behavior)\r\n        }\r\n        this._checkBoundedLabelsOverlapping(majorTicks, boxes, mode);\r\n        this._checkShiftedLabels(majorTicks, boxes, labelOpt.minSpacing, labelOpt.alignment)\r\n    },\r\n    _applyLabelMode: function(mode, step, boxes, behavior, notRecastStep) {\r\n        var majorTicks = this._majorTicks;\r\n        var labelOpt = this._options.label;\r\n        var angle = behavior.rotationAngle;\r\n        var labelHeight;\r\n        var alignment;\r\n        var func;\r\n        switch (mode) {\r\n            case ROTATE:\r\n                if (!labelOpt.userAlignment) {\r\n                    alignment = angle < 0 ? RIGHT : LEFT;\r\n                    if (angle % 90 === 0) {\r\n                        alignment = CENTER\r\n                    }\r\n                }\r\n                step = notRecastStep ? step : this._getStep(boxes, angle);\r\n                func = function(tick) {\r\n                    var contentContainer = tick.getContentContainer();\r\n                    if (!contentContainer) {\r\n                        return\r\n                    }\r\n                    contentContainer.rotate(angle);\r\n                    tick.labelRotationAngle = angle;\r\n                    alignment && (tick.labelAlignment = alignment)\r\n                };\r\n                updateLabels(majorTicks, step, func);\r\n                break;\r\n            case \"stagger\":\r\n                labelHeight = this._getMaxLabelHeight(boxes, behavior.staggeringSpacing);\r\n                func = function(tick, index) {\r\n                    if (index / (step - 1) % 2 !== 0) {\r\n                        tick.labelOffset = labelHeight\r\n                    }\r\n                };\r\n                updateLabels(majorTicks, step - 1, func);\r\n                break;\r\n            case \"auto\":\r\n            case \"_auto\":\r\n                if (2 === step) {\r\n                    this._applyLabelMode(\"stagger\", step, boxes, behavior)\r\n                } else {\r\n                    this._applyLabelMode(ROTATE, step, boxes, {\r\n                        rotationAngle: getOptimalAngle(boxes, labelOpt)\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                updateLabels(majorTicks, step)\r\n        }\r\n    },\r\n    getMarkerTrackers: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _drawDateMarkers: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _adjustDateMarkers: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    coordsIn: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    areCoordsOutsideAxis: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _getSkippedCategory: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _initAxisPositions: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _drawTitle: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _updateTitleCoords: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _adjustConstantLineLabels: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _createTranslator: function() {\r\n        return new _translators_translator2d__WEBPACK_IMPORTED_MODULE_9__[\"Translator2D\"]({}, {}, {})\r\n    },\r\n    _updateTranslator: function() {\r\n        var translator = this._translator;\r\n        translator.update(translator.getBusinessRange(), this._canvas || {}, this._getTranslatorOptions())\r\n    },\r\n    _getTranslatorOptions: function() {\r\n        var _options$workWeek2, _options$breakStyle$w, _options$breakStyle;\r\n        var options = this._options;\r\n        return {\r\n            isHorizontal: this._isHorizontal,\r\n            shiftZeroValue: !this.isArgumentAxis,\r\n            interval: options.semiDiscreteInterval,\r\n            firstDayOfWeek: null === (_options$workWeek2 = options.workWeek) || void 0 === _options$workWeek2 ? void 0 : _options$workWeek2[0],\r\n            stick: this._getStick(),\r\n            breaksSize: null !== (_options$breakStyle$w = null === (_options$breakStyle = options.breakStyle) || void 0 === _options$breakStyle ? void 0 : _options$breakStyle.width) && void 0 !== _options$breakStyle$w ? _options$breakStyle$w : 0\r\n        }\r\n    },\r\n    getVisibleArea() {\r\n        var canvas = this._getCanvasStartEnd();\r\n        return [canvas.start, canvas.end].sort((a, b) => a - b)\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        var isHorizontal = this._isHorizontal;\r\n        var canvas = this._canvas || {};\r\n        var invert = this._translator.getBusinessRange().invert;\r\n        var coords = isHorizontal ? [canvas.left, canvas.width - canvas.right] : [canvas.height - canvas.bottom, canvas.top];\r\n        invert && coords.reverse();\r\n        return {\r\n            start: coords[0],\r\n            end: coords[1]\r\n        }\r\n    },\r\n    _getScreenDelta: function() {\r\n        var canvas = this._getCanvasStartEnd();\r\n        var breaks = this._seriesData ? this._seriesData.breaks || [] : [];\r\n        var breaksLength = breaks.length;\r\n        var screenDelta = _abs(canvas.start - canvas.end);\r\n        return screenDelta - (breaksLength ? breaks[breaksLength - 1].cumulativeWidth : 0)\r\n    },\r\n    _getScaleBreaks: function() {\r\n        return []\r\n    },\r\n    _filterBreaks: function() {\r\n        return []\r\n    },\r\n    _adjustTitle: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _checkTitleOverflow: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    getSpiderTicks: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    setSpiderTicks: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _checkBoundedLabelsOverlapping: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _checkShiftedLabels: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    drawScaleBreaks: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _visualRange: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    _rotateConstantLine: _core_utils_common__WEBPACK_IMPORTED_MODULE_14__[\"noop\"],\r\n    applyVisualRangeSetter(visualRangeSetter) {\r\n        this._visualRange = visualRangeSetter\r\n    },\r\n    getCategoriesSorter(argCategories) {\r\n        var sort;\r\n        if (this.isArgumentAxis) {\r\n            sort = argCategories\r\n        } else {\r\n            var categoriesSortingMethod = this._options.categoriesSortingMethod;\r\n            sort = null !== categoriesSortingMethod && void 0 !== categoriesSortingMethod ? categoriesSortingMethod : this._options.categories\r\n        }\r\n        return sort\r\n    },\r\n    _getAdjustedBusinessRange() {\r\n        return this.adjustViewport(this._translator.getBusinessRange())\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/base_axis.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/constant_line.js":
/*!***************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/constant_line.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return createConstantLine; });\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/**\r\n * DevExtreme (esm/viz/axes/constant_line.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nfunction createConstantLine(axis, options) {\r\n    var labelOptions = options.label || {};\r\n    var labelPosition = labelOptions.position || \"inside\";\r\n    var parsedValue;\r\n    var valueIsParsed = false;\r\n    var lastStoredCoordinates;\r\n    axis._checkAlignmentConstantLineLabels(labelOptions);\r\n    var storedCoord;\r\n    return {\r\n        options: options,\r\n        labelOptions: labelOptions,\r\n        labelPosition: labelPosition,\r\n        label: null,\r\n        line: null,\r\n        getParsedValue() {\r\n            if (!valueIsParsed) {\r\n                parsedValue = axis.validateUnit(options.value, \"E2105\", \"constantLine\");\r\n                valueIsParsed = true;\r\n                return parsedValue\r\n            }\r\n            return parsedValue\r\n        },\r\n        draw() {\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(options.value) || axis._translator.getBusinessRange().isEmpty()) {\r\n                return this\r\n            }\r\n            var canvas = axis._getCanvasStartEnd();\r\n            var parsedValue = this.getParsedValue();\r\n            this.coord = axis._getConstantLinePos(parsedValue, canvas.start, canvas.end);\r\n            var rootGroup = options.displayBehindSeries ? axis._axisConstantLineGroups.under : axis._axisConstantLineGroups.above;\r\n            var group = rootGroup[labelPosition];\r\n            if (!group) {\r\n                var side = axis._isHorizontal ? labelOptions.verticalAlignment : labelOptions.horizontalAlignment;\r\n                group = rootGroup[side]\r\n            }\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(this.coord)) {\r\n                return this\r\n            }\r\n            var path = axis._createConstantLine(this.coord, {\r\n                stroke: options.color,\r\n                \"stroke-width\": options.width,\r\n                dashStyle: options.dashStyle\r\n            });\r\n            this.line = path.append(rootGroup.inside);\r\n            this.label = labelOptions.visible ? axis._drawConstantLineLabels(parsedValue, labelOptions, this.coord, group) : null;\r\n            this.updatePosition();\r\n            return this\r\n        },\r\n        getContentContainer() {\r\n            return this.label\r\n        },\r\n        removeLabel() {\r\n            this.label && this.label.remove()\r\n        },\r\n        updatePosition(animate) {\r\n            var canvas = axis._getCanvasStartEnd();\r\n            var coord = axis._getConstantLinePos(this.getParsedValue(), canvas.start, canvas.end);\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(coord)) {\r\n                return\r\n            }\r\n            this.coord = coord;\r\n            if (animate && storedCoord) {\r\n                this.label && this.label.attr(axis._getConstantLineLabelsCoords(storedCoord, this.labelOptions));\r\n                this.line && this.line.attr(axis._getConstantLineGraphicAttributes(storedCoord));\r\n                this.label && this.label.animate(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\r\n                this.line && this.line.animate(axis._getConstantLineGraphicAttributes(this.coord))\r\n            } else {\r\n                this.label && this.label.attr(axis._getConstantLineLabelsCoords(this.coord, this.labelOptions));\r\n                this.line && this.line.attr(axis._getConstantLineGraphicAttributes(this.coord));\r\n                axis._rotateConstantLine(this.line, this.coord)\r\n            }\r\n        },\r\n        saveCoords() {\r\n            lastStoredCoordinates = storedCoord;\r\n            storedCoord = this.coord\r\n        },\r\n        resetCoordinates() {\r\n            storedCoord = lastStoredCoordinates\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L2F4ZXMvY29uc3RhbnRfbGluZS5qcz8xYTA5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHK0I7QUFDaEI7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsaUJBQWlCLGtFQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsa0VBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsa0VBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lL2VzbS92aXovYXhlcy9jb25zdGFudF9saW5lLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIERldkV4dHJlbWUgKGVzbS92aXovYXhlcy9jb25zdGFudF9saW5lLmpzKVxyXG4gKiBWZXJzaW9uOiAyMS4yLjdcclxuICogQnVpbGQgZGF0ZTogTW9uIEFwciAxMSAyMDIyXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjIgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqIFJlYWQgYWJvdXQgRGV2RXh0cmVtZSBsaWNlbnNpbmcgaGVyZTogaHR0cHM6Ly9qcy5kZXZleHByZXNzLmNvbS9MaWNlbnNpbmcvXHJcbiAqL1xyXG5pbXBvcnQge1xyXG4gICAgaXNEZWZpbmVkXHJcbn0gZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvdHlwZVwiO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVDb25zdGFudExpbmUoYXhpcywgb3B0aW9ucykge1xyXG4gICAgdmFyIGxhYmVsT3B0aW9ucyA9IG9wdGlvbnMubGFiZWwgfHwge307XHJcbiAgICB2YXIgbGFiZWxQb3NpdGlvbiA9IGxhYmVsT3B0aW9ucy5wb3NpdGlvbiB8fCBcImluc2lkZVwiO1xyXG4gICAgdmFyIHBhcnNlZFZhbHVlO1xyXG4gICAgdmFyIHZhbHVlSXNQYXJzZWQgPSBmYWxzZTtcclxuICAgIHZhciBsYXN0U3RvcmVkQ29vcmRpbmF0ZXM7XHJcbiAgICBheGlzLl9jaGVja0FsaWdubWVudENvbnN0YW50TGluZUxhYmVscyhsYWJlbE9wdGlvbnMpO1xyXG4gICAgdmFyIHN0b3JlZENvb3JkO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBvcHRpb25zOiBvcHRpb25zLFxyXG4gICAgICAgIGxhYmVsT3B0aW9uczogbGFiZWxPcHRpb25zLFxyXG4gICAgICAgIGxhYmVsUG9zaXRpb246IGxhYmVsUG9zaXRpb24sXHJcbiAgICAgICAgbGFiZWw6IG51bGwsXHJcbiAgICAgICAgbGluZTogbnVsbCxcclxuICAgICAgICBnZXRQYXJzZWRWYWx1ZSgpIHtcclxuICAgICAgICAgICAgaWYgKCF2YWx1ZUlzUGFyc2VkKSB7XHJcbiAgICAgICAgICAgICAgICBwYXJzZWRWYWx1ZSA9IGF4aXMudmFsaWRhdGVVbml0KG9wdGlvbnMudmFsdWUsIFwiRTIxMDVcIiwgXCJjb25zdGFudExpbmVcIik7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZUlzUGFyc2VkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZWRWYWx1ZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBwYXJzZWRWYWx1ZVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZHJhdygpIHtcclxuICAgICAgICAgICAgaWYgKCFpc0RlZmluZWQob3B0aW9ucy52YWx1ZSkgfHwgYXhpcy5fdHJhbnNsYXRvci5nZXRCdXNpbmVzc1JhbmdlKCkuaXNFbXB0eSgpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBjYW52YXMgPSBheGlzLl9nZXRDYW52YXNTdGFydEVuZCgpO1xyXG4gICAgICAgICAgICB2YXIgcGFyc2VkVmFsdWUgPSB0aGlzLmdldFBhcnNlZFZhbHVlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY29vcmQgPSBheGlzLl9nZXRDb25zdGFudExpbmVQb3MocGFyc2VkVmFsdWUsIGNhbnZhcy5zdGFydCwgY2FudmFzLmVuZCk7XHJcbiAgICAgICAgICAgIHZhciByb290R3JvdXAgPSBvcHRpb25zLmRpc3BsYXlCZWhpbmRTZXJpZXMgPyBheGlzLl9heGlzQ29uc3RhbnRMaW5lR3JvdXBzLnVuZGVyIDogYXhpcy5fYXhpc0NvbnN0YW50TGluZUdyb3Vwcy5hYm92ZTtcclxuICAgICAgICAgICAgdmFyIGdyb3VwID0gcm9vdEdyb3VwW2xhYmVsUG9zaXRpb25dO1xyXG4gICAgICAgICAgICBpZiAoIWdyb3VwKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc2lkZSA9IGF4aXMuX2lzSG9yaXpvbnRhbCA/IGxhYmVsT3B0aW9ucy52ZXJ0aWNhbEFsaWdubWVudCA6IGxhYmVsT3B0aW9ucy5ob3Jpem9udGFsQWxpZ25tZW50O1xyXG4gICAgICAgICAgICAgICAgZ3JvdXAgPSByb290R3JvdXBbc2lkZV1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoIWlzRGVmaW5lZCh0aGlzLmNvb3JkKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXNcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgcGF0aCA9IGF4aXMuX2NyZWF0ZUNvbnN0YW50TGluZSh0aGlzLmNvb3JkLCB7XHJcbiAgICAgICAgICAgICAgICBzdHJva2U6IG9wdGlvbnMuY29sb3IsXHJcbiAgICAgICAgICAgICAgICBcInN0cm9rZS13aWR0aFwiOiBvcHRpb25zLndpZHRoLFxyXG4gICAgICAgICAgICAgICAgZGFzaFN0eWxlOiBvcHRpb25zLmRhc2hTdHlsZVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5saW5lID0gcGF0aC5hcHBlbmQocm9vdEdyb3VwLmluc2lkZSk7XHJcbiAgICAgICAgICAgIHRoaXMubGFiZWwgPSBsYWJlbE9wdGlvbnMudmlzaWJsZSA/IGF4aXMuX2RyYXdDb25zdGFudExpbmVMYWJlbHMocGFyc2VkVmFsdWUsIGxhYmVsT3B0aW9ucywgdGhpcy5jb29yZCwgZ3JvdXApIDogbnVsbDtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVQb3NpdGlvbigpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpc1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0Q29udGVudENvbnRhaW5lcigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZUxhYmVsKCkge1xyXG4gICAgICAgICAgICB0aGlzLmxhYmVsICYmIHRoaXMubGFiZWwucmVtb3ZlKClcclxuICAgICAgICB9LFxyXG4gICAgICAgIHVwZGF0ZVBvc2l0aW9uKGFuaW1hdGUpIHtcclxuICAgICAgICAgICAgdmFyIGNhbnZhcyA9IGF4aXMuX2dldENhbnZhc1N0YXJ0RW5kKCk7XHJcbiAgICAgICAgICAgIHZhciBjb29yZCA9IGF4aXMuX2dldENvbnN0YW50TGluZVBvcyh0aGlzLmdldFBhcnNlZFZhbHVlKCksIGNhbnZhcy5zdGFydCwgY2FudmFzLmVuZCk7XHJcbiAgICAgICAgICAgIGlmICghaXNEZWZpbmVkKGNvb3JkKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5jb29yZCA9IGNvb3JkO1xyXG4gICAgICAgICAgICBpZiAoYW5pbWF0ZSAmJiBzdG9yZWRDb29yZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sYWJlbCAmJiB0aGlzLmxhYmVsLmF0dHIoYXhpcy5fZ2V0Q29uc3RhbnRMaW5lTGFiZWxzQ29vcmRzKHN0b3JlZENvb3JkLCB0aGlzLmxhYmVsT3B0aW9ucykpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5saW5lICYmIHRoaXMubGluZS5hdHRyKGF4aXMuX2dldENvbnN0YW50TGluZUdyYXBoaWNBdHRyaWJ1dGVzKHN0b3JlZENvb3JkKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxhYmVsICYmIHRoaXMubGFiZWwuYW5pbWF0ZShheGlzLl9nZXRDb25zdGFudExpbmVMYWJlbHNDb29yZHModGhpcy5jb29yZCwgdGhpcy5sYWJlbE9wdGlvbnMpKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGluZSAmJiB0aGlzLmxpbmUuYW5pbWF0ZShheGlzLl9nZXRDb25zdGFudExpbmVHcmFwaGljQXR0cmlidXRlcyh0aGlzLmNvb3JkKSlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubGFiZWwgJiYgdGhpcy5sYWJlbC5hdHRyKGF4aXMuX2dldENvbnN0YW50TGluZUxhYmVsc0Nvb3Jkcyh0aGlzLmNvb3JkLCB0aGlzLmxhYmVsT3B0aW9ucykpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5saW5lICYmIHRoaXMubGluZS5hdHRyKGF4aXMuX2dldENvbnN0YW50TGluZUdyYXBoaWNBdHRyaWJ1dGVzKHRoaXMuY29vcmQpKTtcclxuICAgICAgICAgICAgICAgIGF4aXMuX3JvdGF0ZUNvbnN0YW50TGluZSh0aGlzLmxpbmUsIHRoaXMuY29vcmQpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHNhdmVDb29yZHMoKSB7XHJcbiAgICAgICAgICAgIGxhc3RTdG9yZWRDb29yZGluYXRlcyA9IHN0b3JlZENvb3JkO1xyXG4gICAgICAgICAgICBzdG9yZWRDb29yZCA9IHRoaXMuY29vcmRcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlc2V0Q29vcmRpbmF0ZXMoKSB7XHJcbiAgICAgICAgICAgIHN0b3JlZENvb3JkID0gbGFzdFN0b3JlZENvb3JkaW5hdGVzXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/constant_line.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/datetime_breaks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/datetime_breaks.js ***!
  \*****************************************************************/
/*! exports provided: generateDateBreaks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateDateBreaks\", function() { return generateDateBreaks; });\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/**\r\n * DevExtreme (esm/viz/axes/datetime_breaks.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar days = [0, 1, 2, 3, 4, 5, 6];\r\n\r\nfunction getWeekendDays(workdays) {\r\n    return days.filter((function(day) {\r\n        return !workdays.some((function(workDay) {\r\n            return workDay === day\r\n        }))\r\n    }))\r\n}\r\n\r\nfunction getNextDayIndex(dayIndex) {\r\n    return (dayIndex + 1) % 7\r\n}\r\n\r\nfunction dayBetweenWeekend(weekend, day) {\r\n    var start = weekend.start;\r\n    var end = weekend.end;\r\n    while (start !== end) {\r\n        if (start === day) {\r\n            return true\r\n        }\r\n        start = getNextDayIndex(start)\r\n    }\r\n    return false\r\n}\r\n\r\nfunction getDaysDistance(day, end) {\r\n    var length = 0;\r\n    while (day !== end) {\r\n        day = getNextDayIndex(day);\r\n        length++\r\n    }\r\n    return length\r\n}\r\n\r\nfunction separateBreak(scaleBreak, day) {\r\n    var result = [];\r\n    var dayEnd = new Date(day);\r\n    dayEnd.setDate(day.getDate() + 1);\r\n    if (day > scaleBreak.from) {\r\n        result.push({\r\n            from: scaleBreak.from,\r\n            to: day\r\n        })\r\n    }\r\n    if (dayEnd < scaleBreak.to) {\r\n        result.push({\r\n            from: dayEnd,\r\n            to: scaleBreak.to\r\n        })\r\n    }\r\n    return result\r\n}\r\n\r\nfunction getWeekEndDayIndices(workDays) {\r\n    var indices = getWeekendDays(workDays);\r\n    if (indices.length < 7) {\r\n        while (getNextDayIndex(indices[indices.length - 1]) === indices[0]) {\r\n            indices.unshift(indices.pop())\r\n        }\r\n    }\r\n    return indices\r\n}\r\n\r\nfunction generateDateBreaksForWeekend(min, max, weekendDayIndices) {\r\n    var day = min.getDate();\r\n    var breaks = [];\r\n    var weekends = weekendDayIndices.reduce((function(obj, day) {\r\n        var currentWeekEnd = obj[1];\r\n        if (void 0 === currentWeekEnd.start) {\r\n            currentWeekEnd = {\r\n                start: day,\r\n                end: getNextDayIndex(day)\r\n            };\r\n            obj[0].push(currentWeekEnd);\r\n            return [obj[0], currentWeekEnd]\r\n        } else if (currentWeekEnd.end === day) {\r\n            currentWeekEnd.end = getNextDayIndex(day);\r\n            return obj\r\n        }\r\n        currentWeekEnd = {\r\n            start: day,\r\n            end: getNextDayIndex(day)\r\n        };\r\n        obj[0].push(currentWeekEnd);\r\n        return [obj[0], currentWeekEnd]\r\n    }), [\r\n        [], {}\r\n    ]);\r\n    weekends[0].forEach((function(weekend) {\r\n        var currentDate = new Date(min);\r\n        currentDate = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trimTime(currentDate);\r\n        while (currentDate < max) {\r\n            day = currentDate.getDay();\r\n            var date = currentDate.getDate();\r\n            if (dayBetweenWeekend(weekend, day)) {\r\n                var from = new Date(currentDate);\r\n                currentDate.setDate(date + getDaysDistance(day, weekend.end));\r\n                var to = new Date(currentDate);\r\n                breaks.push({\r\n                    from: from,\r\n                    to: to\r\n                })\r\n            }\r\n            currentDate.setDate(currentDate.getDate() + 1)\r\n        }\r\n    }));\r\n    return breaks\r\n}\r\n\r\nfunction excludeWorkDaysFromWeekEndBreaks(breaks, exactWorkDays) {\r\n    var result = breaks.slice();\r\n    var i;\r\n    var processWorkDay = function(workday) {\r\n        workday = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trimTime(new Date(workday));\r\n        if (result[i].from <= workday && result[i].to > workday) {\r\n            var separatedBreak = separateBreak(result[i], workday);\r\n            if (2 === separatedBreak.length) {\r\n                result.splice(i, 1, separatedBreak[0], separatedBreak[1])\r\n            } else if (1 === separatedBreak.length) {\r\n                result.splice(i, 1, separatedBreak[0])\r\n            } else {\r\n                result.splice(i, 1)\r\n            }\r\n        }\r\n    };\r\n    for (i = 0; i < result.length; i++) {\r\n        exactWorkDays.forEach(processWorkDay)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction generateBreaksForHolidays(min, max, holidays, weekendDayIndices) {\r\n    var day;\r\n    var dayInWeekend = function(dayIndex) {\r\n        return dayIndex === day\r\n    };\r\n    var adjustedMin = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trimTime(min);\r\n    var adjustedMax = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trimTime(max);\r\n    adjustedMax.setDate(max.getDate() + 1);\r\n    return holidays.reduce((function(breaks, holiday) {\r\n        var holidayStart;\r\n        var holidayEnd;\r\n        holiday = new Date(holiday);\r\n        day = holiday.getDay();\r\n        if (!weekendDayIndices.some(dayInWeekend) && holiday >= adjustedMin && holiday <= adjustedMax) {\r\n            holidayStart = _core_utils_date__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trimTime(holiday);\r\n            holidayEnd = new Date(holidayStart);\r\n            holidayEnd.setDate(holidayStart.getDate() + 1);\r\n            breaks.push({\r\n                from: holidayStart,\r\n                to: holidayEnd\r\n            })\r\n        }\r\n        return breaks\r\n    }), [])\r\n}\r\n\r\nfunction calculateGaps(breaks) {\r\n    return breaks.map((function(b) {\r\n        return {\r\n            from: b.from,\r\n            to: b.to,\r\n            gapSize: _core_utils_date__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertMillisecondsToDateUnits(b.to - b.from)\r\n        }\r\n    }))\r\n}\r\nfunction generateDateBreaks(min, max, workWeek, singleWorkdays, holidays) {\r\n    var weekendDayIndices = getWeekEndDayIndices(workWeek);\r\n    var breaks = generateDateBreaksForWeekend(min, max, weekendDayIndices);\r\n    breaks.push.apply(breaks, generateBreaksForHolidays(min, max, holidays || [], weekendDayIndices));\r\n    return calculateGaps(excludeWorkDaysFromWeekEndBreaks(breaks, singleWorkdays || []))\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/datetime_breaks.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/polar_axes.js":
/*!************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/polar_axes.js ***!
  \************************************************************/
/*! exports provided: circular, circularSpider, linear, linearSpider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"circular\", function() { return circular; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"circularSpider\", function() { return circularSpider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"linear\", function() { return linear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"linearSpider\", function() { return linearSpider; });\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _axes_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./axes_constants */ \"./node_modules/devextreme/esm/viz/axes/axes_constants.js\");\n/* harmony import */ var _xy_axes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./xy_axes */ \"./node_modules/devextreme/esm/viz/axes/xy_axes.js\");\n/* harmony import */ var _tick__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tick */ \"./node_modules/devextreme/esm/viz/axes/tick.js\");\n/* harmony import */ var _axes_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./axes_utils */ \"./node_modules/devextreme/esm/viz/axes/axes_utils.js\");\n/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/common */ \"./node_modules/devextreme/esm/core/utils/common.js\");\n/**\r\n * DevExtreme (esm/viz/axes/polar_axes.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar {\r\n    PI: PI,\r\n    abs: abs,\r\n    atan: atan,\r\n    round: round\r\n} = Math;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar xyAxesLinear = _xy_axes__WEBPACK_IMPORTED_MODULE_4__[\"default\"].linear;\r\nvar HALF_PI_ANGLE = 90;\r\n\r\nfunction getPolarQuarter(angle) {\r\n    var quarter;\r\n    angle = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"normalizeAngle\"])(angle);\r\n    if (angle >= 315 && angle <= 360 || angle < 45 && angle >= 0) {\r\n        quarter = 1\r\n    } else if (angle >= 45 && angle < 135) {\r\n        quarter = 2\r\n    } else if (angle >= 135 && angle < 225) {\r\n        quarter = 3\r\n    } else if (angle >= 225 && angle < 315) {\r\n        quarter = 4\r\n    }\r\n    return quarter\r\n}\r\nvar circularAxes = {\r\n    _calculateValueMargins(ticks) {\r\n        var {\r\n            minVisible: minVisible,\r\n            maxVisible: maxVisible\r\n        } = this._getViewportRange();\r\n        if (ticks && ticks.length > 1) {\r\n            minVisible = minVisible < ticks[0].value ? minVisible : ticks[0].value;\r\n            maxVisible = minVisible > ticks[ticks.length - 1].value ? maxVisible : ticks[ticks.length - 1].value\r\n        }\r\n        return {\r\n            minValue: minVisible,\r\n            maxValue: maxVisible\r\n        }\r\n    },\r\n    applyMargins() {\r\n        var margins = this._calculateValueMargins(this._majorTicks);\r\n        var br = this._translator.getBusinessRange();\r\n        br.addRange({\r\n            minVisible: margins.minValue,\r\n            maxVisible: margins.maxValue,\r\n            interval: this._calculateRangeInterval(br.interval)\r\n        });\r\n        this._translator.updateBusinessRange(br)\r\n    },\r\n    _getTranslatorOptions: function() {\r\n        return {\r\n            isHorizontal: true,\r\n            conversionValue: true,\r\n            addSpiderCategory: this._getSpiderCategoryOption(),\r\n            stick: this._getStick()\r\n        }\r\n    },\r\n    getCenter: function() {\r\n        return this._center\r\n    },\r\n    getRadius: function() {\r\n        return this._radius\r\n    },\r\n    getAngles: function() {\r\n        var options = this._options;\r\n        return [options.startAngle, options.endAngle]\r\n    },\r\n    _updateRadius(canvas) {\r\n        var rad = _min(canvas.width - canvas.left - canvas.right, canvas.height - canvas.top - canvas.bottom) / 2;\r\n        this._radius = rad < 0 ? 0 : rad\r\n    },\r\n    _updateCenter: function(canvas) {\r\n        this._center = {\r\n            x: canvas.left + (canvas.width - canvas.right - canvas.left) / 2,\r\n            y: canvas.top + (canvas.height - canvas.top - canvas.bottom) / 2\r\n        }\r\n    },\r\n    _processCanvas: function(canvas) {\r\n        this._updateRadius(canvas);\r\n        this._updateCenter(canvas);\r\n        return {\r\n            left: 0,\r\n            right: 0,\r\n            width: this._getScreenDelta()\r\n        }\r\n    },\r\n    _createAxisElement: function() {\r\n        return this._renderer.circle()\r\n    },\r\n    _updateAxisElementPosition: function() {\r\n        var center = this.getCenter();\r\n        this._axisElement.attr({\r\n            cx: center.x,\r\n            cy: center.y,\r\n            r: this.getRadius()\r\n        })\r\n    },\r\n    _boundaryTicksVisibility: {\r\n        min: true\r\n    },\r\n    _getSpiderCategoryOption: function() {\r\n        return this._options.firstPointOnStartAngle\r\n    },\r\n    _validateOptions(options) {\r\n        var originValue = options.originValue;\r\n        var wholeRange = options.wholeRange = {};\r\n        var period = options.period;\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(originValue)) {\r\n            originValue = this.validateUnit(originValue)\r\n        }\r\n        if (period > 0 && options.argumentType === _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].numeric) {\r\n            originValue = originValue || 0;\r\n            wholeRange.endValue = originValue + period;\r\n            this._viewport = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getVizRangeObject\"])([originValue, wholeRange.endValue])\r\n        }\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(originValue)) {\r\n            wholeRange.startValue = originValue\r\n        }\r\n    },\r\n    getMargins() {\r\n        var tickOptions = this._options.tick;\r\n        var tickOuterLength = _max(tickOptions.visible ? tickOptions.length / 2 + tickOptions.shift : 0, 0);\r\n        var radius = this.getRadius();\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = this._center;\r\n        var labelBoxes = this._majorTicks.map(t => t.label && t.label.getBBox()).filter(b => b);\r\n        var canvas = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, this._canvas, {\r\n            left: x - radius,\r\n            top: y - radius,\r\n            right: this._canvas.width - (x + radius),\r\n            bottom: this._canvas.height - (y + radius)\r\n        });\r\n        var margins = Object(_axes_utils__WEBPACK_IMPORTED_MODULE_6__[\"calculateCanvasMargins\"])(labelBoxes, canvas);\r\n        Object.keys(margins).forEach(k => margins[k] = margins[k] < tickOuterLength ? tickOuterLength : margins[k]);\r\n        return margins\r\n    },\r\n    _updateLabelsPosition() {\r\n        Object(_axes_utils__WEBPACK_IMPORTED_MODULE_6__[\"measureLabels\"])(this._majorTicks);\r\n        this._adjustLabelsCoord(0, 0, true);\r\n        this._checkBoundedLabelsOverlapping(this._majorTicks, this._majorTicks.map(t => t.labelBBox))\r\n    },\r\n    _setVisualRange: _core_utils_common__WEBPACK_IMPORTED_MODULE_7__[\"noop\"],\r\n    applyVisualRangeSetter: _core_utils_common__WEBPACK_IMPORTED_MODULE_7__[\"noop\"],\r\n    _getStick: function() {\r\n        return this._options.firstPointOnStartAngle || this._options.type !== _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].discrete\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset) - HALF_PI_ANGLE\r\n    },\r\n    _getCanvasStartEnd: function() {\r\n        return {\r\n            start: 0 - HALF_PI_ANGLE,\r\n            end: 360 - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromAngle, toAngle) {\r\n        var center = this.getCenter();\r\n        var angle = this.getAngles()[0];\r\n        var r = this.getRadius();\r\n        return {\r\n            x: center.x,\r\n            y: center.y,\r\n            innerRadius: 0,\r\n            outerRadius: r,\r\n            startAngle: -toAngle - angle,\r\n            endAngle: -fromAngle - angle\r\n        }\r\n    },\r\n    _createStrip: function(coords) {\r\n        return this._renderer.arc(coords.x, coords.y, coords.innerRadius, coords.outerRadius, coords.startAngle, coords.endAngle)\r\n    },\r\n    _getStripLabelCoords: function(from, to) {\r\n        var coords = this._getStripGraphicAttributes(from, to);\r\n        var angle = coords.startAngle + (coords.endAngle - coords.startAngle) / 2;\r\n        var cosSin = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getCosAndSin\"])(angle);\r\n        var halfRad = this.getRadius() / 2;\r\n        var center = this.getCenter();\r\n        var x = round(center.x + halfRad * cosSin.cos);\r\n        var y = round(center.y - halfRad * cosSin.sin);\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            align: _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].center\r\n        }\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var center = this.getCenter();\r\n        var r = this.getRadius();\r\n        return {\r\n            points: [center.x, center.y, center.x + r, center.y]\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr)\r\n    },\r\n    _rotateConstantLine(line, value) {\r\n        var {\r\n            x: x,\r\n            y: y\r\n        } = this.getCenter();\r\n        line.rotate(value + this.getAngles()[0], x, y)\r\n    },\r\n    _getConstantLineLabelsCoords: function(value) {\r\n        var cosSin = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getCosAndSin\"])(-value - this.getAngles()[0]);\r\n        var halfRad = this.getRadius() / 2;\r\n        var center = this.getCenter();\r\n        var x = round(center.x + halfRad * cosSin.cos);\r\n        var y = round(center.y - halfRad * cosSin.sin);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkAlignmentConstantLineLabels: _core_utils_common__WEBPACK_IMPORTED_MODULE_7__[\"noop\"],\r\n    _adjustDivisionFactor: function(val) {\r\n        return 180 * val / (this.getRadius() * PI)\r\n    },\r\n    _getScreenDelta: function() {\r\n        var angles = this.getAngles();\r\n        return abs(angles[0] - angles[1])\r\n    },\r\n    _getTickMarkPoints: function(coords, length, _ref) {\r\n        var {\r\n            shift: shift = 0\r\n        } = _ref;\r\n        var center = this.getCenter();\r\n        var radiusWithTicks = this.getRadius() + length * {\r\n            inside: -1,\r\n            center: -.5,\r\n            outside: 0\r\n        } [this._options.tickOrientation || \"center\"];\r\n        return [center.x + radiusWithTicks + shift, center.y, center.x + radiusWithTicks + length + shift, center.y]\r\n    },\r\n    _getLabelAdjustedCoord: function(tick, _offset, _maxWidth, checkCanvas) {\r\n        var labelCoords = tick.labelCoords;\r\n        var labelY = labelCoords.y;\r\n        var labelAngle = labelCoords.angle;\r\n        var cosSin = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getCosAndSin\"])(labelAngle);\r\n        var cos = cosSin.cos;\r\n        var sin = cosSin.sin;\r\n        var box = tick.labelBBox;\r\n        var halfWidth = box.width / 2;\r\n        var halfHeight = box.height / 2;\r\n        var indentFromAxis = this._options.label.indentFromAxis || 0;\r\n        var x = labelCoords.x + indentFromAxis * cos;\r\n        var y = labelY + (labelY - box.y - halfHeight) + indentFromAxis * sin;\r\n        var shiftX = 0;\r\n        var shiftY = 0;\r\n        switch (getPolarQuarter(labelAngle)) {\r\n            case 1:\r\n                shiftX = halfWidth;\r\n                shiftY = halfHeight * sin;\r\n                break;\r\n            case 2:\r\n                shiftX = halfWidth * cos;\r\n                shiftY = halfHeight;\r\n                break;\r\n            case 3:\r\n                shiftX = -halfWidth;\r\n                shiftY = halfHeight * sin;\r\n                break;\r\n            case 4:\r\n                shiftX = halfWidth * cos;\r\n                shiftY = -halfHeight\r\n        }\r\n        if (checkCanvas) {\r\n            var canvas = this._canvas;\r\n            var boxShiftX = x - labelCoords.x + shiftX;\r\n            var boxShiftY = y - labelCoords.y + shiftY;\r\n            if (box.x + boxShiftX < canvas.originalLeft) {\r\n                shiftX -= box.x + boxShiftX - canvas.originalLeft\r\n            }\r\n            if (box.x + box.width + boxShiftX > canvas.width - canvas.originalRight) {\r\n                shiftX -= box.x + box.width + boxShiftX - (canvas.width - canvas.originalRight)\r\n            }\r\n            if (box.y + boxShiftY < canvas.originalTop) {\r\n                shiftY -= box.y + boxShiftY - canvas.originalTop\r\n            }\r\n            if (box.y + box.height + boxShiftY > canvas.height - canvas.originalBottom) {\r\n                shiftY -= box.y + box.height + boxShiftY - (canvas.height - canvas.originalBottom)\r\n            }\r\n        }\r\n        return {\r\n            x: x + shiftX,\r\n            y: y + shiftY\r\n        }\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var center = that.getCenter();\r\n            return that._createPathElement(that._getGridPoints().points, gridStyle).rotate(tick.coords.angle, center.x, center.y)\r\n        }\r\n    },\r\n    _getGridPoints: function() {\r\n        var r = this.getRadius();\r\n        var center = this.getCenter();\r\n        return {\r\n            points: [center.x, center.y, center.x + r, center.y]\r\n        }\r\n    },\r\n    _getTranslatedValue: function(value, offset) {\r\n        var startAngle = this.getAngles()[0];\r\n        var angle = this._translator.translate(value, -offset);\r\n        var coords = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"convertPolarToXY\"])(this.getCenter(), startAngle, angle, this.getRadius());\r\n        return {\r\n            x: coords.x,\r\n            y: coords.y,\r\n            angle: this.getTranslatedAngle(angle)\r\n        }\r\n    },\r\n    _getAdjustedStripLabelCoords: function(strip) {\r\n        var box = strip.labelBBox;\r\n        return {\r\n            translateY: strip.label.attr(\"y\") - box.y - box.height / 2\r\n        }\r\n    },\r\n    coordsIn: function(x, y) {\r\n        return Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"convertXYToPolar\"])(this.getCenter(), x, y).r > this.getRadius()\r\n    },\r\n    _rotateTick: function(element, coords) {\r\n        var center = this.getCenter();\r\n        element.rotate(coords.angle, center.x, center.y)\r\n    },\r\n    _validateOverlappingMode: function(mode) {\r\n        return _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].validateOverlappingMode(mode)\r\n    },\r\n    _validateDisplayMode: function() {\r\n        return \"standard\"\r\n    },\r\n    _getStep: function(boxes) {\r\n        var radius = this.getRadius() + (this._options.label.indentFromAxis || 0);\r\n        var maxLabelBox = boxes.reduce((function(prevValue, box) {\r\n            var curValue = prevValue;\r\n            if (prevValue.width < box.width) {\r\n                curValue.width = box.width\r\n            }\r\n            if (prevValue.height < box.height) {\r\n                curValue.height = box.height\r\n            }\r\n            return curValue\r\n        }), {\r\n            width: 0,\r\n            height: 0\r\n        });\r\n        var angle1 = abs(2 * atan(maxLabelBox.height / (2 * radius - maxLabelBox.width)) * 180 / PI);\r\n        var angle2 = abs(2 * atan(maxLabelBox.width / (2 * radius - maxLabelBox.height)) * 180 / PI);\r\n        return _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTicksCountInRange(this._majorTicks, \"angle\", _max(angle1, angle2))\r\n    },\r\n    _checkBoundedLabelsOverlapping: function(majorTicks, boxes, mode) {\r\n        var labelOpt = this._options.label;\r\n        mode = mode || this._validateOverlappingMode(labelOpt.overlappingBehavior);\r\n        if (\"hide\" !== mode) {\r\n            return\r\n        }\r\n        var lastVisibleLabelIndex = majorTicks.reduce((lastVisibleLabelIndex, tick, index) => tick.label ? index : lastVisibleLabelIndex, null);\r\n        if (!lastVisibleLabelIndex) {\r\n            return\r\n        }\r\n        if (_axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].areLabelsOverlap(boxes[0], boxes[lastVisibleLabelIndex], labelOpt.minSpacing, _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].center)) {\r\n            \"first\" === labelOpt.hideFirstOrLast ? majorTicks[0].removeLabel() : majorTicks[lastVisibleLabelIndex].removeLabel()\r\n        }\r\n    },\r\n    shift: function(margins) {\r\n        this._axisGroup.attr({\r\n            translateX: margins.right,\r\n            translateY: margins.bottom\r\n        });\r\n        this._axisElementsGroup.attr({\r\n            translateX: margins.right,\r\n            translateY: margins.bottom\r\n        })\r\n    },\r\n    getTranslatedAngle(angle) {\r\n        var startAngle = this.getAngles()[0];\r\n        return angle + startAngle - HALF_PI_ANGLE\r\n    }\r\n};\r\nvar circular = circularAxes;\r\nvar circularSpider = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, circularAxes, {\r\n    _createAxisElement: function() {\r\n        return this._renderer.path([], \"area\")\r\n    },\r\n    _updateAxisElementPosition: function() {\r\n        this._axisElement.attr({\r\n            points: Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(this.getSpiderTicks(), (function(tick) {\r\n                return {\r\n                    x: tick.coords.x,\r\n                    y: tick.coords.y\r\n                }\r\n            }))\r\n        })\r\n    },\r\n    _getStick: function() {\r\n        return true\r\n    },\r\n    _getSpiderCategoryOption: function() {\r\n        return true\r\n    },\r\n    getSpiderTicks: function() {\r\n        var ticks = this.getFullTicks();\r\n        this._spiderTicks = ticks.map(Object(_tick__WEBPACK_IMPORTED_MODULE_5__[\"tick\"])(this, this.renderer, {}, {}, this._getSkippedCategory(ticks), true));\r\n        this._spiderTicks.forEach((function(tick) {\r\n            tick.initCoords()\r\n        }));\r\n        return this._spiderTicks\r\n    },\r\n    _getStripGraphicAttributes: function(fromAngle, toAngle) {\r\n        var center = this.getCenter();\r\n        var spiderTicks = this.getSpiderTicks();\r\n        var firstTick;\r\n        var lastTick;\r\n        var nextTick;\r\n        var tick;\r\n        var points = [];\r\n        var i = 0;\r\n        var len = spiderTicks.length;\r\n        while (i < len) {\r\n            tick = spiderTicks[i].coords;\r\n            if (tick.angle >= fromAngle && tick.angle <= toAngle) {\r\n                if (!firstTick) {\r\n                    firstTick = (spiderTicks[i - 1] || spiderTicks[spiderTicks.length - 1]).coords;\r\n                    points.push((tick.x + firstTick.x) / 2, (tick.y + firstTick.y) / 2)\r\n                }\r\n                points.push(tick.x, tick.y);\r\n                nextTick = (spiderTicks[i + 1] || spiderTicks[0]).coords;\r\n                lastTick = {\r\n                    x: (tick.x + nextTick.x) / 2,\r\n                    y: (tick.y + nextTick.y) / 2\r\n                }\r\n            }\r\n            i++\r\n        }\r\n        points.push(lastTick.x, lastTick.y);\r\n        points.push(center.x, center.y);\r\n        return {\r\n            points: points\r\n        }\r\n    },\r\n    _createStrip: function(_ref2) {\r\n        var {\r\n            points: points\r\n        } = _ref2;\r\n        return this._renderer.path(points, \"area\")\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset) - HALF_PI_ANGLE\r\n    },\r\n    _setTickOffset: function() {\r\n        this._tickOffset = false\r\n    }\r\n});\r\nvar linear = {\r\n    _resetMargins() {\r\n        this._reinitTranslator(this._getViewportRange())\r\n    },\r\n    _getStick: xyAxesLinear._getStick,\r\n    _getSpiderCategoryOption: _core_utils_common__WEBPACK_IMPORTED_MODULE_7__[\"noop\"],\r\n    _getTranslatorOptions: function() {\r\n        return {\r\n            isHorizontal: true,\r\n            stick: this._getStick()\r\n        }\r\n    },\r\n    getRadius: circularAxes.getRadius,\r\n    getCenter: circularAxes.getCenter,\r\n    getAngles: circularAxes.getAngles,\r\n    _updateRadius: circularAxes._updateRadius,\r\n    _updateCenter: circularAxes._updateCenter,\r\n    _processCanvas(canvas) {\r\n        this._updateRadius(canvas);\r\n        this._updateCenter(canvas);\r\n        return {\r\n            left: 0,\r\n            right: 0,\r\n            startPadding: canvas.startPadding,\r\n            endPadding: canvas.endPadding,\r\n            width: this.getRadius()\r\n        }\r\n    },\r\n    _createAxisElement: xyAxesLinear._createAxisElement,\r\n    _updateAxisElementPosition: function() {\r\n        var centerCoord = this.getCenter();\r\n        this._axisElement.attr({\r\n            points: [centerCoord.x, centerCoord.y, centerCoord.x + this.getRadius(), centerCoord.y]\r\n        }).rotate(this.getAngles()[0] - HALF_PI_ANGLE, centerCoord.x, centerCoord.y)\r\n    },\r\n    _getScreenDelta: function() {\r\n        return this.getRadius()\r\n    },\r\n    _getTickMarkPoints: function(coords, length) {\r\n        return [coords.x - length / 2, coords.y, coords.x + length / 2, coords.y]\r\n    },\r\n    _getLabelAdjustedCoord: function(tick) {\r\n        var labelCoords = tick.labelCoords;\r\n        var labelY = labelCoords.y;\r\n        var cosSin = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getCosAndSin\"])(labelCoords.angle);\r\n        var indentFromAxis = this._options.label.indentFromAxis || 0;\r\n        var box = tick.labelBBox;\r\n        var x = labelCoords.x - abs(indentFromAxis * cosSin.sin) + abs(box.width / 2 * cosSin.cos) - box.width / 2;\r\n        var y = labelY + (labelY - box.y) - abs(box.height / 2 * cosSin.sin) + abs(indentFromAxis * cosSin.cos);\r\n        return {\r\n            x: x,\r\n            y: y\r\n        }\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            var grid = that._getGridPoints(tick.coords);\r\n            return that._renderer.circle(grid.cx, grid.cy, grid.r).attr(gridStyle).sharp()\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var pos = this.getCenter();\r\n        var radius = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getDistance\"])(pos.x, pos.y, coords.x, coords.y);\r\n        if (radius > this.getRadius()) {\r\n            return {\r\n                cx: null,\r\n                cy: null,\r\n                r: null\r\n            }\r\n        }\r\n        return {\r\n            cx: pos.x,\r\n            cy: pos.y,\r\n            r: radius\r\n        }\r\n    },\r\n    _getTranslatedValue: function(value, offset) {\r\n        var startAngle = this.getAngles()[0];\r\n        var xy = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"convertPolarToXY\"])(this.getCenter(), startAngle, 0, this._translator.translate(value, offset));\r\n        return {\r\n            x: xy.x,\r\n            y: xy.y,\r\n            angle: startAngle - HALF_PI_ANGLE\r\n        }\r\n    },\r\n    _getTranslatedCoord: function(value, offset) {\r\n        return this._translator.translate(value, offset)\r\n    },\r\n    _getCanvasStartEnd() {\r\n        var invert = this.getTranslator().getBusinessRange().invert;\r\n        var coords = [0, this.getRadius()];\r\n        invert && coords.reverse();\r\n        return {\r\n            start: coords[0],\r\n            end: coords[1]\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var center = this.getCenter();\r\n        return {\r\n            x: center.x,\r\n            y: center.y,\r\n            innerRadius: fromPoint,\r\n            outerRadius: toPoint\r\n        }\r\n    },\r\n    _createStrip: function(attrs) {\r\n        return this._renderer.arc(attrs.x, attrs.y, attrs.innerRadius, attrs.outerRadius, 0, 360)\r\n    },\r\n    _getAdjustedStripLabelCoords: circularAxes._getAdjustedStripLabelCoords,\r\n    _getStripLabelCoords: function(from, to) {\r\n        var labelPos = from + (to - from) / 2;\r\n        var center = this.getCenter();\r\n        var y = round(center.y - labelPos);\r\n        return {\r\n            x: center.x,\r\n            y: y,\r\n            align: _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].center\r\n        }\r\n    },\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        var center = this.getCenter();\r\n        return {\r\n            cx: center.x,\r\n            cy: center.y,\r\n            r: value\r\n        }\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        var attrs = this._getConstantLineGraphicAttributes(value);\r\n        return this._renderer.circle(attrs.cx, attrs.cy, attrs.r).attr(attr).sharp()\r\n    },\r\n    _getConstantLineLabelsCoords: function(value) {\r\n        var center = this.getCenter();\r\n        var y = round(center.y - value);\r\n        return {\r\n            x: center.x,\r\n            y: y\r\n        }\r\n    },\r\n    _checkAlignmentConstantLineLabels: _core_utils_common__WEBPACK_IMPORTED_MODULE_7__[\"noop\"],\r\n    _rotateTick: function(element, coords, isGridLine) {\r\n        !isGridLine && element.rotate(coords.angle + HALF_PI_ANGLE, coords.x, coords.y)\r\n    },\r\n    _validateOverlappingMode: circularAxes._validateOverlappingMode,\r\n    _validateDisplayMode: circularAxes._validateDisplayMode,\r\n    _getStep: function(boxes) {\r\n        var quarter = getPolarQuarter(this.getAngles()[0]);\r\n        var spacing = this._options.label.minSpacing;\r\n        var func = 2 === quarter || 4 === quarter ? function(box) {\r\n            return box.width + spacing\r\n        } : function(box) {\r\n            return box.height\r\n        };\r\n        var maxLabelLength = boxes.reduce((prevValue, box) => _max(prevValue, func(box)), 0);\r\n        return _axes_constants__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getTicksCountInRange(this._majorTicks, 2 === quarter || 4 === quarter ? \"x\" : \"y\", maxLabelLength)\r\n    }\r\n};\r\nvar linearSpider = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, linear, {\r\n    _createPathElement: function(points, attr) {\r\n        return this._renderer.path(points, \"area\").attr(attr).sharp()\r\n    },\r\n    setSpiderTicks: function(ticks) {\r\n        this._spiderTicks = ticks\r\n    },\r\n    _getGridLineDrawer: function() {\r\n        var that = this;\r\n        return function(tick, gridStyle) {\r\n            return that._createPathElement(that._getGridPoints(tick.coords).points, gridStyle)\r\n        }\r\n    },\r\n    _getGridPoints: function(coords) {\r\n        var pos = this.getCenter();\r\n        var radius = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getDistance\"])(pos.x, pos.y, coords.x, coords.y);\r\n        return this._getGridPointsByRadius(radius)\r\n    },\r\n    _getGridPointsByRadius: function(radius) {\r\n        var pos = this.getCenter();\r\n        if (radius > this.getRadius()) {\r\n            return {\r\n                points: null\r\n            }\r\n        }\r\n        return {\r\n            points: Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(this._spiderTicks, (function(tick) {\r\n                var cosSin = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getCosAndSin\"])(tick.coords.angle);\r\n                return {\r\n                    x: round(pos.x + radius * cosSin.cos),\r\n                    y: round(pos.y + radius * cosSin.sin)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _getStripGraphicAttributes: function(fromPoint, toPoint) {\r\n        var innerPoints = this._getGridPointsByRadius(toPoint).points;\r\n        var outerPoints = this._getGridPointsByRadius(fromPoint).points;\r\n        return {\r\n            points: [outerPoints, innerPoints.reverse()]\r\n        }\r\n    },\r\n    _createStrip: circularSpider._createStrip,\r\n    _getConstantLineGraphicAttributes: function(value) {\r\n        return this._getGridPointsByRadius(value)\r\n    },\r\n    _createConstantLine: function(value, attr) {\r\n        return this._createPathElement(this._getConstantLineGraphicAttributes(value).points, attr)\r\n    }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L2F4ZXMvcG9sYXJfYXhlcy5qcz81NTI1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVN1QjtBQUdRO0FBR0U7QUFDUTtBQUNWO0FBR2Y7QUFJTTtBQUdXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLG1CQUFtQixnREFBTTtBQUN6Qjs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxrRUFBYztBQUMxQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrRUFBUztBQUNyQjtBQUNBO0FBQ0EsbURBQW1ELHVEQUFTO0FBQzVEO0FBQ0E7QUFDQSw2QkFBNkIscUVBQWlCO0FBQzlDO0FBQ0EsWUFBWSxrRUFBUztBQUNyQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EscUJBQXFCLGlFQUFNLEdBQUc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsc0JBQXNCLDBFQUFzQjtBQUM1QztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsUUFBUSxpRUFBYTtBQUNyQjtBQUNBO0FBQ0EsS0FBSztBQUNMLHFCQUFxQix1REFBSztBQUMxQiw0QkFBNEIsdURBQUs7QUFDakM7QUFDQSw4RUFBOEUsdURBQVM7QUFDdkYsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0VBQVk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsdURBQVM7QUFDNUI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQSxxQkFBcUIsZ0VBQVk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx1Q0FBdUMsdURBQUs7QUFDNUM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZ0VBQVk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG9FQUFnQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxlQUFlLG9FQUFnQjtBQUMvQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsZUFBZSx1REFBUztBQUN4QixLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsdURBQVM7QUFDeEIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx1REFBUywrRUFBK0UsdURBQVM7QUFDN0c7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBLHFCQUFxQixpRUFBTSxHQUFHO0FBQ3JDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLG9CQUFvQix1REFBSTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esc0NBQXNDLGtEQUFJLHdCQUF3QixJQUFJO0FBQ3RFO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNNO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDhCQUE4Qix1REFBSztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGdFQUFZO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQkFBcUIsK0RBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxpQkFBaUIsb0VBQWdCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUFTO0FBQzVCO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCx1Q0FBdUMsdURBQUs7QUFDNUM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxlQUFlLHVEQUFTO0FBQ3hCO0FBQ0E7QUFDTyxtQkFBbUIsaUVBQU0sR0FBRztBQUNuQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EscUJBQXFCLCtEQUFXO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdURBQUk7QUFDeEIsNkJBQTZCLGdFQUFZO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lL2VzbS92aXovYXhlcy9wb2xhcl9heGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIERldkV4dHJlbWUgKGVzbS92aXovYXhlcy9wb2xhcl9heGVzLmpzKVxyXG4gKiBWZXJzaW9uOiAyMS4yLjdcclxuICogQnVpbGQgZGF0ZTogTW9uIEFwciAxMSAyMDIyXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjIgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqIFJlYWQgYWJvdXQgRGV2RXh0cmVtZSBsaWNlbnNpbmcgaGVyZTogaHR0cHM6Ly9qcy5kZXZleHByZXNzLmNvbS9MaWNlbnNpbmcvXHJcbiAqL1xyXG5pbXBvcnQge1xyXG4gICAgbWFwIGFzIF9tYXAsXHJcbiAgICBjb252ZXJ0UG9sYXJUb1hZLFxyXG4gICAgY29udmVydFhZVG9Qb2xhcixcclxuICAgIG5vcm1hbGl6ZUFuZ2xlLFxyXG4gICAgZ2V0Vml6UmFuZ2VPYmplY3QsXHJcbiAgICBnZXRDb3NBbmRTaW4sXHJcbiAgICBnZXREaXN0YW5jZVxyXG59IGZyb20gXCIuLi9jb3JlL3V0aWxzXCI7XHJcbmltcG9ydCB7XHJcbiAgICBpc0RlZmluZWRcclxufSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy90eXBlXCI7XHJcbmltcG9ydCB7XHJcbiAgICBleHRlbmRcclxufSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9leHRlbmRcIjtcclxuaW1wb3J0IGNvbnN0YW50cyBmcm9tIFwiLi9heGVzX2NvbnN0YW50c1wiO1xyXG5pbXBvcnQgeHlBeGVzIGZyb20gXCIuL3h5X2F4ZXNcIjtcclxuaW1wb3J0IHtcclxuICAgIHRpY2tcclxufSBmcm9tIFwiLi90aWNrXCI7XHJcbmltcG9ydCB7XHJcbiAgICBjYWxjdWxhdGVDYW52YXNNYXJnaW5zLFxyXG4gICAgbWVhc3VyZUxhYmVsc1xyXG59IGZyb20gXCIuL2F4ZXNfdXRpbHNcIjtcclxuaW1wb3J0IHtcclxuICAgIG5vb3AgYXMgX25vb3BcclxufSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy9jb21tb25cIjtcclxudmFyIHtcclxuICAgIFBJOiBQSSxcclxuICAgIGFiczogYWJzLFxyXG4gICAgYXRhbjogYXRhbixcclxuICAgIHJvdW5kOiByb3VuZFxyXG59ID0gTWF0aDtcclxudmFyIF9taW4gPSBNYXRoLm1pbjtcclxudmFyIF9tYXggPSBNYXRoLm1heDtcclxudmFyIHh5QXhlc0xpbmVhciA9IHh5QXhlcy5saW5lYXI7XHJcbnZhciBIQUxGX1BJX0FOR0xFID0gOTA7XHJcblxyXG5mdW5jdGlvbiBnZXRQb2xhclF1YXJ0ZXIoYW5nbGUpIHtcclxuICAgIHZhciBxdWFydGVyO1xyXG4gICAgYW5nbGUgPSBub3JtYWxpemVBbmdsZShhbmdsZSk7XHJcbiAgICBpZiAoYW5nbGUgPj0gMzE1ICYmIGFuZ2xlIDw9IDM2MCB8fCBhbmdsZSA8IDQ1ICYmIGFuZ2xlID49IDApIHtcclxuICAgICAgICBxdWFydGVyID0gMVxyXG4gICAgfSBlbHNlIGlmIChhbmdsZSA+PSA0NSAmJiBhbmdsZSA8IDEzNSkge1xyXG4gICAgICAgIHF1YXJ0ZXIgPSAyXHJcbiAgICB9IGVsc2UgaWYgKGFuZ2xlID49IDEzNSAmJiBhbmdsZSA8IDIyNSkge1xyXG4gICAgICAgIHF1YXJ0ZXIgPSAzXHJcbiAgICB9IGVsc2UgaWYgKGFuZ2xlID49IDIyNSAmJiBhbmdsZSA8IDMxNSkge1xyXG4gICAgICAgIHF1YXJ0ZXIgPSA0XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcXVhcnRlclxyXG59XHJcbnZhciBjaXJjdWxhckF4ZXMgPSB7XHJcbiAgICBfY2FsY3VsYXRlVmFsdWVNYXJnaW5zKHRpY2tzKSB7XHJcbiAgICAgICAgdmFyIHtcclxuICAgICAgICAgICAgbWluVmlzaWJsZTogbWluVmlzaWJsZSxcclxuICAgICAgICAgICAgbWF4VmlzaWJsZTogbWF4VmlzaWJsZVxyXG4gICAgICAgIH0gPSB0aGlzLl9nZXRWaWV3cG9ydFJhbmdlKCk7XHJcbiAgICAgICAgaWYgKHRpY2tzICYmIHRpY2tzLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgbWluVmlzaWJsZSA9IG1pblZpc2libGUgPCB0aWNrc1swXS52YWx1ZSA/IG1pblZpc2libGUgOiB0aWNrc1swXS52YWx1ZTtcclxuICAgICAgICAgICAgbWF4VmlzaWJsZSA9IG1pblZpc2libGUgPiB0aWNrc1t0aWNrcy5sZW5ndGggLSAxXS52YWx1ZSA/IG1heFZpc2libGUgOiB0aWNrc1t0aWNrcy5sZW5ndGggLSAxXS52YWx1ZVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBtaW5WYWx1ZTogbWluVmlzaWJsZSxcclxuICAgICAgICAgICAgbWF4VmFsdWU6IG1heFZpc2libGVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgYXBwbHlNYXJnaW5zKCkge1xyXG4gICAgICAgIHZhciBtYXJnaW5zID0gdGhpcy5fY2FsY3VsYXRlVmFsdWVNYXJnaW5zKHRoaXMuX21ham9yVGlja3MpO1xyXG4gICAgICAgIHZhciBiciA9IHRoaXMuX3RyYW5zbGF0b3IuZ2V0QnVzaW5lc3NSYW5nZSgpO1xyXG4gICAgICAgIGJyLmFkZFJhbmdlKHtcclxuICAgICAgICAgICAgbWluVmlzaWJsZTogbWFyZ2lucy5taW5WYWx1ZSxcclxuICAgICAgICAgICAgbWF4VmlzaWJsZTogbWFyZ2lucy5tYXhWYWx1ZSxcclxuICAgICAgICAgICAgaW50ZXJ2YWw6IHRoaXMuX2NhbGN1bGF0ZVJhbmdlSW50ZXJ2YWwoYnIuaW50ZXJ2YWwpXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fdHJhbnNsYXRvci51cGRhdGVCdXNpbmVzc1JhbmdlKGJyKVxyXG4gICAgfSxcclxuICAgIF9nZXRUcmFuc2xhdG9yT3B0aW9uczogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgaXNIb3Jpem9udGFsOiB0cnVlLFxyXG4gICAgICAgICAgICBjb252ZXJzaW9uVmFsdWU6IHRydWUsXHJcbiAgICAgICAgICAgIGFkZFNwaWRlckNhdGVnb3J5OiB0aGlzLl9nZXRTcGlkZXJDYXRlZ29yeU9wdGlvbigpLFxyXG4gICAgICAgICAgICBzdGljazogdGhpcy5fZ2V0U3RpY2soKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBnZXRDZW50ZXI6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jZW50ZXJcclxuICAgIH0sXHJcbiAgICBnZXRSYWRpdXM6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yYWRpdXNcclxuICAgIH0sXHJcbiAgICBnZXRBbmdsZXM6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciBvcHRpb25zID0gdGhpcy5fb3B0aW9ucztcclxuICAgICAgICByZXR1cm4gW29wdGlvbnMuc3RhcnRBbmdsZSwgb3B0aW9ucy5lbmRBbmdsZV1cclxuICAgIH0sXHJcbiAgICBfdXBkYXRlUmFkaXVzKGNhbnZhcykge1xyXG4gICAgICAgIHZhciByYWQgPSBfbWluKGNhbnZhcy53aWR0aCAtIGNhbnZhcy5sZWZ0IC0gY2FudmFzLnJpZ2h0LCBjYW52YXMuaGVpZ2h0IC0gY2FudmFzLnRvcCAtIGNhbnZhcy5ib3R0b20pIC8gMjtcclxuICAgICAgICB0aGlzLl9yYWRpdXMgPSByYWQgPCAwID8gMCA6IHJhZFxyXG4gICAgfSxcclxuICAgIF91cGRhdGVDZW50ZXI6IGZ1bmN0aW9uKGNhbnZhcykge1xyXG4gICAgICAgIHRoaXMuX2NlbnRlciA9IHtcclxuICAgICAgICAgICAgeDogY2FudmFzLmxlZnQgKyAoY2FudmFzLndpZHRoIC0gY2FudmFzLnJpZ2h0IC0gY2FudmFzLmxlZnQpIC8gMixcclxuICAgICAgICAgICAgeTogY2FudmFzLnRvcCArIChjYW52YXMuaGVpZ2h0IC0gY2FudmFzLnRvcCAtIGNhbnZhcy5ib3R0b20pIC8gMlxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfcHJvY2Vzc0NhbnZhczogZnVuY3Rpb24oY2FudmFzKSB7XHJcbiAgICAgICAgdGhpcy5fdXBkYXRlUmFkaXVzKGNhbnZhcyk7XHJcbiAgICAgICAgdGhpcy5fdXBkYXRlQ2VudGVyKGNhbnZhcyk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbGVmdDogMCxcclxuICAgICAgICAgICAgcmlnaHQ6IDAsXHJcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLl9nZXRTY3JlZW5EZWx0YSgpXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIF9jcmVhdGVBeGlzRWxlbWVudDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlbmRlcmVyLmNpcmNsZSgpXHJcbiAgICB9LFxyXG4gICAgX3VwZGF0ZUF4aXNFbGVtZW50UG9zaXRpb246IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciBjZW50ZXIgPSB0aGlzLmdldENlbnRlcigpO1xyXG4gICAgICAgIHRoaXMuX2F4aXNFbGVtZW50LmF0dHIoe1xyXG4gICAgICAgICAgICBjeDogY2VudGVyLngsXHJcbiAgICAgICAgICAgIGN5OiBjZW50ZXIueSxcclxuICAgICAgICAgICAgcjogdGhpcy5nZXRSYWRpdXMoKVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgX2JvdW5kYXJ5VGlja3NWaXNpYmlsaXR5OiB7XHJcbiAgICAgICAgbWluOiB0cnVlXHJcbiAgICB9LFxyXG4gICAgX2dldFNwaWRlckNhdGVnb3J5T3B0aW9uOiBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fb3B0aW9ucy5maXJzdFBvaW50T25TdGFydEFuZ2xlXHJcbiAgICB9LFxyXG4gICAgX3ZhbGlkYXRlT3B0aW9ucyhvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIG9yaWdpblZhbHVlID0gb3B0aW9ucy5vcmlnaW5WYWx1ZTtcclxuICAgICAgICB2YXIgd2hvbGVSYW5nZSA9IG9wdGlvbnMud2hvbGVSYW5nZSA9IHt9O1xyXG4gICAgICAgIHZhciBwZXJpb2QgPSBvcHRpb25zLnBlcmlvZDtcclxuICAgICAgICBpZiAoaXNEZWZpbmVkKG9yaWdpblZhbHVlKSkge1xyXG4gICAgICAgICAgICBvcmlnaW5WYWx1ZSA9IHRoaXMudmFsaWRhdGVVbml0KG9yaWdpblZhbHVlKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocGVyaW9kID4gMCAmJiBvcHRpb25zLmFyZ3VtZW50VHlwZSA9PT0gY29uc3RhbnRzLm51bWVyaWMpIHtcclxuICAgICAgICAgICAgb3JpZ2luVmFsdWUgPSBvcmlnaW5WYWx1ZSB8fCAwO1xyXG4gICAgICAgICAgICB3aG9sZVJhbmdlLmVuZFZhbHVlID0gb3JpZ2luVmFsdWUgKyBwZXJpb2Q7XHJcbiAgICAgICAgICAgIHRoaXMuX3ZpZXdwb3J0ID0gZ2V0Vml6UmFuZ2VPYmplY3QoW29yaWdpblZhbHVlLCB3aG9sZVJhbmdlLmVuZFZhbHVlXSlcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGlzRGVmaW5lZChvcmlnaW5WYWx1ZSkpIHtcclxuICAgICAgICAgICAgd2hvbGVSYW5nZS5zdGFydFZhbHVlID0gb3JpZ2luVmFsdWVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZ2V0TWFyZ2lucygpIHtcclxuICAgICAgICB2YXIgdGlja09wdGlvbnMgPSB0aGlzLl9vcHRpb25zLnRpY2s7XHJcbiAgICAgICAgdmFyIHRpY2tPdXRlckxlbmd0aCA9IF9tYXgodGlja09wdGlvbnMudmlzaWJsZSA/IHRpY2tPcHRpb25zLmxlbmd0aCAvIDIgKyB0aWNrT3B0aW9ucy5zaGlmdCA6IDAsIDApO1xyXG4gICAgICAgIHZhciByYWRpdXMgPSB0aGlzLmdldFJhZGl1cygpO1xyXG4gICAgICAgIHZhciB7XHJcbiAgICAgICAgICAgIHg6IHgsXHJcbiAgICAgICAgICAgIHk6IHlcclxuICAgICAgICB9ID0gdGhpcy5fY2VudGVyO1xyXG4gICAgICAgIHZhciBsYWJlbEJveGVzID0gdGhpcy5fbWFqb3JUaWNrcy5tYXAodCA9PiB0LmxhYmVsICYmIHQubGFiZWwuZ2V0QkJveCgpKS5maWx0ZXIoYiA9PiBiKTtcclxuICAgICAgICB2YXIgY2FudmFzID0gZXh0ZW5kKHt9LCB0aGlzLl9jYW52YXMsIHtcclxuICAgICAgICAgICAgbGVmdDogeCAtIHJhZGl1cyxcclxuICAgICAgICAgICAgdG9wOiB5IC0gcmFkaXVzLFxyXG4gICAgICAgICAgICByaWdodDogdGhpcy5fY2FudmFzLndpZHRoIC0gKHggKyByYWRpdXMpLFxyXG4gICAgICAgICAgICBib3R0b206IHRoaXMuX2NhbnZhcy5oZWlnaHQgLSAoeSArIHJhZGl1cylcclxuICAgICAgICB9KTtcclxuICAgICAgICB2YXIgbWFyZ2lucyA9IGNhbGN1bGF0ZUNhbnZhc01hcmdpbnMobGFiZWxCb3hlcywgY2FudmFzKTtcclxuICAgICAgICBPYmplY3Qua2V5cyhtYXJnaW5zKS5mb3JFYWNoKGsgPT4gbWFyZ2luc1trXSA9IG1hcmdpbnNba10gPCB0aWNrT3V0ZXJMZW5ndGggPyB0aWNrT3V0ZXJMZW5ndGggOiBtYXJnaW5zW2tdKTtcclxuICAgICAgICByZXR1cm4gbWFyZ2luc1xyXG4gICAgfSxcclxuICAgIF91cGRhdGVMYWJlbHNQb3NpdGlvbigpIHtcclxuICAgICAgICBtZWFzdXJlTGFiZWxzKHRoaXMuX21ham9yVGlja3MpO1xyXG4gICAgICAgIHRoaXMuX2FkanVzdExhYmVsc0Nvb3JkKDAsIDAsIHRydWUpO1xyXG4gICAgICAgIHRoaXMuX2NoZWNrQm91bmRlZExhYmVsc092ZXJsYXBwaW5nKHRoaXMuX21ham9yVGlja3MsIHRoaXMuX21ham9yVGlja3MubWFwKHQgPT4gdC5sYWJlbEJCb3gpKVxyXG4gICAgfSxcclxuICAgIF9zZXRWaXN1YWxSYW5nZTogX25vb3AsXHJcbiAgICBhcHBseVZpc3VhbFJhbmdlU2V0dGVyOiBfbm9vcCxcclxuICAgIF9nZXRTdGljazogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX29wdGlvbnMuZmlyc3RQb2ludE9uU3RhcnRBbmdsZSB8fCB0aGlzLl9vcHRpb25zLnR5cGUgIT09IGNvbnN0YW50cy5kaXNjcmV0ZVxyXG4gICAgfSxcclxuICAgIF9nZXRUcmFuc2xhdGVkQ29vcmQ6IGZ1bmN0aW9uKHZhbHVlLCBvZmZzZXQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdHJhbnNsYXRvci50cmFuc2xhdGUodmFsdWUsIG9mZnNldCkgLSBIQUxGX1BJX0FOR0xFXHJcbiAgICB9LFxyXG4gICAgX2dldENhbnZhc1N0YXJ0RW5kOiBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBzdGFydDogMCAtIEhBTEZfUElfQU5HTEUsXHJcbiAgICAgICAgICAgIGVuZDogMzYwIC0gSEFMRl9QSV9BTkdMRVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfZ2V0U3RyaXBHcmFwaGljQXR0cmlidXRlczogZnVuY3Rpb24oZnJvbUFuZ2xlLCB0b0FuZ2xlKSB7XHJcbiAgICAgICAgdmFyIGNlbnRlciA9IHRoaXMuZ2V0Q2VudGVyKCk7XHJcbiAgICAgICAgdmFyIGFuZ2xlID0gdGhpcy5nZXRBbmdsZXMoKVswXTtcclxuICAgICAgICB2YXIgciA9IHRoaXMuZ2V0UmFkaXVzKCk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgeDogY2VudGVyLngsXHJcbiAgICAgICAgICAgIHk6IGNlbnRlci55LFxyXG4gICAgICAgICAgICBpbm5lclJhZGl1czogMCxcclxuICAgICAgICAgICAgb3V0ZXJSYWRpdXM6IHIsXHJcbiAgICAgICAgICAgIHN0YXJ0QW5nbGU6IC10b0FuZ2xlIC0gYW5nbGUsXHJcbiAgICAgICAgICAgIGVuZEFuZ2xlOiAtZnJvbUFuZ2xlIC0gYW5nbGVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2NyZWF0ZVN0cmlwOiBmdW5jdGlvbihjb29yZHMpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcmVuZGVyZXIuYXJjKGNvb3Jkcy54LCBjb29yZHMueSwgY29vcmRzLmlubmVyUmFkaXVzLCBjb29yZHMub3V0ZXJSYWRpdXMsIGNvb3Jkcy5zdGFydEFuZ2xlLCBjb29yZHMuZW5kQW5nbGUpXHJcbiAgICB9LFxyXG4gICAgX2dldFN0cmlwTGFiZWxDb29yZHM6IGZ1bmN0aW9uKGZyb20sIHRvKSB7XHJcbiAgICAgICAgdmFyIGNvb3JkcyA9IHRoaXMuX2dldFN0cmlwR3JhcGhpY0F0dHJpYnV0ZXMoZnJvbSwgdG8pO1xyXG4gICAgICAgIHZhciBhbmdsZSA9IGNvb3Jkcy5zdGFydEFuZ2xlICsgKGNvb3Jkcy5lbmRBbmdsZSAtIGNvb3Jkcy5zdGFydEFuZ2xlKSAvIDI7XHJcbiAgICAgICAgdmFyIGNvc1NpbiA9IGdldENvc0FuZFNpbihhbmdsZSk7XHJcbiAgICAgICAgdmFyIGhhbGZSYWQgPSB0aGlzLmdldFJhZGl1cygpIC8gMjtcclxuICAgICAgICB2YXIgY2VudGVyID0gdGhpcy5nZXRDZW50ZXIoKTtcclxuICAgICAgICB2YXIgeCA9IHJvdW5kKGNlbnRlci54ICsgaGFsZlJhZCAqIGNvc1Npbi5jb3MpO1xyXG4gICAgICAgIHZhciB5ID0gcm91bmQoY2VudGVyLnkgLSBoYWxmUmFkICogY29zU2luLnNpbik7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgeDogeCxcclxuICAgICAgICAgICAgeTogeSxcclxuICAgICAgICAgICAgYWxpZ246IGNvbnN0YW50cy5jZW50ZXJcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2dldENvbnN0YW50TGluZUdyYXBoaWNBdHRyaWJ1dGVzOiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgIHZhciBjZW50ZXIgPSB0aGlzLmdldENlbnRlcigpO1xyXG4gICAgICAgIHZhciByID0gdGhpcy5nZXRSYWRpdXMoKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBwb2ludHM6IFtjZW50ZXIueCwgY2VudGVyLnksIGNlbnRlci54ICsgciwgY2VudGVyLnldXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIF9jcmVhdGVDb25zdGFudExpbmU6IGZ1bmN0aW9uKHZhbHVlLCBhdHRyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NyZWF0ZVBhdGhFbGVtZW50KHRoaXMuX2dldENvbnN0YW50TGluZUdyYXBoaWNBdHRyaWJ1dGVzKHZhbHVlKS5wb2ludHMsIGF0dHIpXHJcbiAgICB9LFxyXG4gICAgX3JvdGF0ZUNvbnN0YW50TGluZShsaW5lLCB2YWx1ZSkge1xyXG4gICAgICAgIHZhciB7XHJcbiAgICAgICAgICAgIHg6IHgsXHJcbiAgICAgICAgICAgIHk6IHlcclxuICAgICAgICB9ID0gdGhpcy5nZXRDZW50ZXIoKTtcclxuICAgICAgICBsaW5lLnJvdGF0ZSh2YWx1ZSArIHRoaXMuZ2V0QW5nbGVzKClbMF0sIHgsIHkpXHJcbiAgICB9LFxyXG4gICAgX2dldENvbnN0YW50TGluZUxhYmVsc0Nvb3JkczogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICB2YXIgY29zU2luID0gZ2V0Q29zQW5kU2luKC12YWx1ZSAtIHRoaXMuZ2V0QW5nbGVzKClbMF0pO1xyXG4gICAgICAgIHZhciBoYWxmUmFkID0gdGhpcy5nZXRSYWRpdXMoKSAvIDI7XHJcbiAgICAgICAgdmFyIGNlbnRlciA9IHRoaXMuZ2V0Q2VudGVyKCk7XHJcbiAgICAgICAgdmFyIHggPSByb3VuZChjZW50ZXIueCArIGhhbGZSYWQgKiBjb3NTaW4uY29zKTtcclxuICAgICAgICB2YXIgeSA9IHJvdW5kKGNlbnRlci55IC0gaGFsZlJhZCAqIGNvc1Npbi5zaW4pO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IHgsXHJcbiAgICAgICAgICAgIHk6IHlcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2NoZWNrQWxpZ25tZW50Q29uc3RhbnRMaW5lTGFiZWxzOiBfbm9vcCxcclxuICAgIF9hZGp1c3REaXZpc2lvbkZhY3RvcjogZnVuY3Rpb24odmFsKSB7XHJcbiAgICAgICAgcmV0dXJuIDE4MCAqIHZhbCAvICh0aGlzLmdldFJhZGl1cygpICogUEkpXHJcbiAgICB9LFxyXG4gICAgX2dldFNjcmVlbkRlbHRhOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgYW5nbGVzID0gdGhpcy5nZXRBbmdsZXMoKTtcclxuICAgICAgICByZXR1cm4gYWJzKGFuZ2xlc1swXSAtIGFuZ2xlc1sxXSlcclxuICAgIH0sXHJcbiAgICBfZ2V0VGlja01hcmtQb2ludHM6IGZ1bmN0aW9uKGNvb3JkcywgbGVuZ3RoLCBfcmVmKSB7XHJcbiAgICAgICAgdmFyIHtcclxuICAgICAgICAgICAgc2hpZnQ6IHNoaWZ0ID0gMFxyXG4gICAgICAgIH0gPSBfcmVmO1xyXG4gICAgICAgIHZhciBjZW50ZXIgPSB0aGlzLmdldENlbnRlcigpO1xyXG4gICAgICAgIHZhciByYWRpdXNXaXRoVGlja3MgPSB0aGlzLmdldFJhZGl1cygpICsgbGVuZ3RoICoge1xyXG4gICAgICAgICAgICBpbnNpZGU6IC0xLFxyXG4gICAgICAgICAgICBjZW50ZXI6IC0uNSxcclxuICAgICAgICAgICAgb3V0c2lkZTogMFxyXG4gICAgICAgIH0gW3RoaXMuX29wdGlvbnMudGlja09yaWVudGF0aW9uIHx8IFwiY2VudGVyXCJdO1xyXG4gICAgICAgIHJldHVybiBbY2VudGVyLnggKyByYWRpdXNXaXRoVGlja3MgKyBzaGlmdCwgY2VudGVyLnksIGNlbnRlci54ICsgcmFkaXVzV2l0aFRpY2tzICsgbGVuZ3RoICsgc2hpZnQsIGNlbnRlci55XVxyXG4gICAgfSxcclxuICAgIF9nZXRMYWJlbEFkanVzdGVkQ29vcmQ6IGZ1bmN0aW9uKHRpY2ssIF9vZmZzZXQsIF9tYXhXaWR0aCwgY2hlY2tDYW52YXMpIHtcclxuICAgICAgICB2YXIgbGFiZWxDb29yZHMgPSB0aWNrLmxhYmVsQ29vcmRzO1xyXG4gICAgICAgIHZhciBsYWJlbFkgPSBsYWJlbENvb3Jkcy55O1xyXG4gICAgICAgIHZhciBsYWJlbEFuZ2xlID0gbGFiZWxDb29yZHMuYW5nbGU7XHJcbiAgICAgICAgdmFyIGNvc1NpbiA9IGdldENvc0FuZFNpbihsYWJlbEFuZ2xlKTtcclxuICAgICAgICB2YXIgY29zID0gY29zU2luLmNvcztcclxuICAgICAgICB2YXIgc2luID0gY29zU2luLnNpbjtcclxuICAgICAgICB2YXIgYm94ID0gdGljay5sYWJlbEJCb3g7XHJcbiAgICAgICAgdmFyIGhhbGZXaWR0aCA9IGJveC53aWR0aCAvIDI7XHJcbiAgICAgICAgdmFyIGhhbGZIZWlnaHQgPSBib3guaGVpZ2h0IC8gMjtcclxuICAgICAgICB2YXIgaW5kZW50RnJvbUF4aXMgPSB0aGlzLl9vcHRpb25zLmxhYmVsLmluZGVudEZyb21BeGlzIHx8IDA7XHJcbiAgICAgICAgdmFyIHggPSBsYWJlbENvb3Jkcy54ICsgaW5kZW50RnJvbUF4aXMgKiBjb3M7XHJcbiAgICAgICAgdmFyIHkgPSBsYWJlbFkgKyAobGFiZWxZIC0gYm94LnkgLSBoYWxmSGVpZ2h0KSArIGluZGVudEZyb21BeGlzICogc2luO1xyXG4gICAgICAgIHZhciBzaGlmdFggPSAwO1xyXG4gICAgICAgIHZhciBzaGlmdFkgPSAwO1xyXG4gICAgICAgIHN3aXRjaCAoZ2V0UG9sYXJRdWFydGVyKGxhYmVsQW5nbGUpKSB7XHJcbiAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgIHNoaWZ0WCA9IGhhbGZXaWR0aDtcclxuICAgICAgICAgICAgICAgIHNoaWZ0WSA9IGhhbGZIZWlnaHQgKiBzaW47XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICAgICAgc2hpZnRYID0gaGFsZldpZHRoICogY29zO1xyXG4gICAgICAgICAgICAgICAgc2hpZnRZID0gaGFsZkhlaWdodDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDM6XHJcbiAgICAgICAgICAgICAgICBzaGlmdFggPSAtaGFsZldpZHRoO1xyXG4gICAgICAgICAgICAgICAgc2hpZnRZID0gaGFsZkhlaWdodCAqIHNpbjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIDQ6XHJcbiAgICAgICAgICAgICAgICBzaGlmdFggPSBoYWxmV2lkdGggKiBjb3M7XHJcbiAgICAgICAgICAgICAgICBzaGlmdFkgPSAtaGFsZkhlaWdodFxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY2hlY2tDYW52YXMpIHtcclxuICAgICAgICAgICAgdmFyIGNhbnZhcyA9IHRoaXMuX2NhbnZhcztcclxuICAgICAgICAgICAgdmFyIGJveFNoaWZ0WCA9IHggLSBsYWJlbENvb3Jkcy54ICsgc2hpZnRYO1xyXG4gICAgICAgICAgICB2YXIgYm94U2hpZnRZID0geSAtIGxhYmVsQ29vcmRzLnkgKyBzaGlmdFk7XHJcbiAgICAgICAgICAgIGlmIChib3gueCArIGJveFNoaWZ0WCA8IGNhbnZhcy5vcmlnaW5hbExlZnQpIHtcclxuICAgICAgICAgICAgICAgIHNoaWZ0WCAtPSBib3gueCArIGJveFNoaWZ0WCAtIGNhbnZhcy5vcmlnaW5hbExlZnRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoYm94LnggKyBib3gud2lkdGggKyBib3hTaGlmdFggPiBjYW52YXMud2lkdGggLSBjYW52YXMub3JpZ2luYWxSaWdodCkge1xyXG4gICAgICAgICAgICAgICAgc2hpZnRYIC09IGJveC54ICsgYm94LndpZHRoICsgYm94U2hpZnRYIC0gKGNhbnZhcy53aWR0aCAtIGNhbnZhcy5vcmlnaW5hbFJpZ2h0KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChib3gueSArIGJveFNoaWZ0WSA8IGNhbnZhcy5vcmlnaW5hbFRvcCkge1xyXG4gICAgICAgICAgICAgICAgc2hpZnRZIC09IGJveC55ICsgYm94U2hpZnRZIC0gY2FudmFzLm9yaWdpbmFsVG9wXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGJveC55ICsgYm94LmhlaWdodCArIGJveFNoaWZ0WSA+IGNhbnZhcy5oZWlnaHQgLSBjYW52YXMub3JpZ2luYWxCb3R0b20pIHtcclxuICAgICAgICAgICAgICAgIHNoaWZ0WSAtPSBib3gueSArIGJveC5oZWlnaHQgKyBib3hTaGlmdFkgLSAoY2FudmFzLmhlaWdodCAtIGNhbnZhcy5vcmlnaW5hbEJvdHRvbSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB4OiB4ICsgc2hpZnRYLFxyXG4gICAgICAgICAgICB5OiB5ICsgc2hpZnRZXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIF9nZXRHcmlkTGluZURyYXdlcjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbih0aWNrLCBncmlkU3R5bGUpIHtcclxuICAgICAgICAgICAgdmFyIGNlbnRlciA9IHRoYXQuZ2V0Q2VudGVyKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGF0Ll9jcmVhdGVQYXRoRWxlbWVudCh0aGF0Ll9nZXRHcmlkUG9pbnRzKCkucG9pbnRzLCBncmlkU3R5bGUpLnJvdGF0ZSh0aWNrLmNvb3Jkcy5hbmdsZSwgY2VudGVyLngsIGNlbnRlci55KVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfZ2V0R3JpZFBvaW50czogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIHIgPSB0aGlzLmdldFJhZGl1cygpO1xyXG4gICAgICAgIHZhciBjZW50ZXIgPSB0aGlzLmdldENlbnRlcigpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHBvaW50czogW2NlbnRlci54LCBjZW50ZXIueSwgY2VudGVyLnggKyByLCBjZW50ZXIueV1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2dldFRyYW5zbGF0ZWRWYWx1ZTogZnVuY3Rpb24odmFsdWUsIG9mZnNldCkge1xyXG4gICAgICAgIHZhciBzdGFydEFuZ2xlID0gdGhpcy5nZXRBbmdsZXMoKVswXTtcclxuICAgICAgICB2YXIgYW5nbGUgPSB0aGlzLl90cmFuc2xhdG9yLnRyYW5zbGF0ZSh2YWx1ZSwgLW9mZnNldCk7XHJcbiAgICAgICAgdmFyIGNvb3JkcyA9IGNvbnZlcnRQb2xhclRvWFkodGhpcy5nZXRDZW50ZXIoKSwgc3RhcnRBbmdsZSwgYW5nbGUsIHRoaXMuZ2V0UmFkaXVzKCkpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IGNvb3Jkcy54LFxyXG4gICAgICAgICAgICB5OiBjb29yZHMueSxcclxuICAgICAgICAgICAgYW5nbGU6IHRoaXMuZ2V0VHJhbnNsYXRlZEFuZ2xlKGFuZ2xlKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfZ2V0QWRqdXN0ZWRTdHJpcExhYmVsQ29vcmRzOiBmdW5jdGlvbihzdHJpcCkge1xyXG4gICAgICAgIHZhciBib3ggPSBzdHJpcC5sYWJlbEJCb3g7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdHJhbnNsYXRlWTogc3RyaXAubGFiZWwuYXR0cihcInlcIikgLSBib3gueSAtIGJveC5oZWlnaHQgLyAyXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNvb3Jkc0luOiBmdW5jdGlvbih4LCB5KSB7XHJcbiAgICAgICAgcmV0dXJuIGNvbnZlcnRYWVRvUG9sYXIodGhpcy5nZXRDZW50ZXIoKSwgeCwgeSkuciA+IHRoaXMuZ2V0UmFkaXVzKClcclxuICAgIH0sXHJcbiAgICBfcm90YXRlVGljazogZnVuY3Rpb24oZWxlbWVudCwgY29vcmRzKSB7XHJcbiAgICAgICAgdmFyIGNlbnRlciA9IHRoaXMuZ2V0Q2VudGVyKCk7XHJcbiAgICAgICAgZWxlbWVudC5yb3RhdGUoY29vcmRzLmFuZ2xlLCBjZW50ZXIueCwgY2VudGVyLnkpXHJcbiAgICB9LFxyXG4gICAgX3ZhbGlkYXRlT3ZlcmxhcHBpbmdNb2RlOiBmdW5jdGlvbihtb2RlKSB7XHJcbiAgICAgICAgcmV0dXJuIGNvbnN0YW50cy52YWxpZGF0ZU92ZXJsYXBwaW5nTW9kZShtb2RlKVxyXG4gICAgfSxcclxuICAgIF92YWxpZGF0ZURpc3BsYXlNb2RlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gXCJzdGFuZGFyZFwiXHJcbiAgICB9LFxyXG4gICAgX2dldFN0ZXA6IGZ1bmN0aW9uKGJveGVzKSB7XHJcbiAgICAgICAgdmFyIHJhZGl1cyA9IHRoaXMuZ2V0UmFkaXVzKCkgKyAodGhpcy5fb3B0aW9ucy5sYWJlbC5pbmRlbnRGcm9tQXhpcyB8fCAwKTtcclxuICAgICAgICB2YXIgbWF4TGFiZWxCb3ggPSBib3hlcy5yZWR1Y2UoKGZ1bmN0aW9uKHByZXZWYWx1ZSwgYm94KSB7XHJcbiAgICAgICAgICAgIHZhciBjdXJWYWx1ZSA9IHByZXZWYWx1ZTtcclxuICAgICAgICAgICAgaWYgKHByZXZWYWx1ZS53aWR0aCA8IGJveC53aWR0aCkge1xyXG4gICAgICAgICAgICAgICAgY3VyVmFsdWUud2lkdGggPSBib3gud2lkdGhcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAocHJldlZhbHVlLmhlaWdodCA8IGJveC5oZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgIGN1clZhbHVlLmhlaWdodCA9IGJveC5oZWlnaHRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gY3VyVmFsdWVcclxuICAgICAgICB9KSwge1xyXG4gICAgICAgICAgICB3aWR0aDogMCxcclxuICAgICAgICAgICAgaGVpZ2h0OiAwXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdmFyIGFuZ2xlMSA9IGFicygyICogYXRhbihtYXhMYWJlbEJveC5oZWlnaHQgLyAoMiAqIHJhZGl1cyAtIG1heExhYmVsQm94LndpZHRoKSkgKiAxODAgLyBQSSk7XHJcbiAgICAgICAgdmFyIGFuZ2xlMiA9IGFicygyICogYXRhbihtYXhMYWJlbEJveC53aWR0aCAvICgyICogcmFkaXVzIC0gbWF4TGFiZWxCb3guaGVpZ2h0KSkgKiAxODAgLyBQSSk7XHJcbiAgICAgICAgcmV0dXJuIGNvbnN0YW50cy5nZXRUaWNrc0NvdW50SW5SYW5nZSh0aGlzLl9tYWpvclRpY2tzLCBcImFuZ2xlXCIsIF9tYXgoYW5nbGUxLCBhbmdsZTIpKVxyXG4gICAgfSxcclxuICAgIF9jaGVja0JvdW5kZWRMYWJlbHNPdmVybGFwcGluZzogZnVuY3Rpb24obWFqb3JUaWNrcywgYm94ZXMsIG1vZGUpIHtcclxuICAgICAgICB2YXIgbGFiZWxPcHQgPSB0aGlzLl9vcHRpb25zLmxhYmVsO1xyXG4gICAgICAgIG1vZGUgPSBtb2RlIHx8IHRoaXMuX3ZhbGlkYXRlT3ZlcmxhcHBpbmdNb2RlKGxhYmVsT3B0Lm92ZXJsYXBwaW5nQmVoYXZpb3IpO1xyXG4gICAgICAgIGlmIChcImhpZGVcIiAhPT0gbW9kZSkge1xyXG4gICAgICAgICAgICByZXR1cm5cclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGxhc3RWaXNpYmxlTGFiZWxJbmRleCA9IG1ham9yVGlja3MucmVkdWNlKChsYXN0VmlzaWJsZUxhYmVsSW5kZXgsIHRpY2ssIGluZGV4KSA9PiB0aWNrLmxhYmVsID8gaW5kZXggOiBsYXN0VmlzaWJsZUxhYmVsSW5kZXgsIG51bGwpO1xyXG4gICAgICAgIGlmICghbGFzdFZpc2libGVMYWJlbEluZGV4KSB7XHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY29uc3RhbnRzLmFyZUxhYmVsc092ZXJsYXAoYm94ZXNbMF0sIGJveGVzW2xhc3RWaXNpYmxlTGFiZWxJbmRleF0sIGxhYmVsT3B0Lm1pblNwYWNpbmcsIGNvbnN0YW50cy5jZW50ZXIpKSB7XHJcbiAgICAgICAgICAgIFwiZmlyc3RcIiA9PT0gbGFiZWxPcHQuaGlkZUZpcnN0T3JMYXN0ID8gbWFqb3JUaWNrc1swXS5yZW1vdmVMYWJlbCgpIDogbWFqb3JUaWNrc1tsYXN0VmlzaWJsZUxhYmVsSW5kZXhdLnJlbW92ZUxhYmVsKClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgc2hpZnQ6IGZ1bmN0aW9uKG1hcmdpbnMpIHtcclxuICAgICAgICB0aGlzLl9heGlzR3JvdXAuYXR0cih7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0ZVg6IG1hcmdpbnMucmlnaHQsXHJcbiAgICAgICAgICAgIHRyYW5zbGF0ZVk6IG1hcmdpbnMuYm90dG9tXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fYXhpc0VsZW1lbnRzR3JvdXAuYXR0cih7XHJcbiAgICAgICAgICAgIHRyYW5zbGF0ZVg6IG1hcmdpbnMucmlnaHQsXHJcbiAgICAgICAgICAgIHRyYW5zbGF0ZVk6IG1hcmdpbnMuYm90dG9tXHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBnZXRUcmFuc2xhdGVkQW5nbGUoYW5nbGUpIHtcclxuICAgICAgICB2YXIgc3RhcnRBbmdsZSA9IHRoaXMuZ2V0QW5nbGVzKClbMF07XHJcbiAgICAgICAgcmV0dXJuIGFuZ2xlICsgc3RhcnRBbmdsZSAtIEhBTEZfUElfQU5HTEVcclxuICAgIH1cclxufTtcclxuZXhwb3J0IHZhciBjaXJjdWxhciA9IGNpcmN1bGFyQXhlcztcclxuZXhwb3J0IHZhciBjaXJjdWxhclNwaWRlciA9IGV4dGVuZCh7fSwgY2lyY3VsYXJBeGVzLCB7XHJcbiAgICBfY3JlYXRlQXhpc0VsZW1lbnQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJlci5wYXRoKFtdLCBcImFyZWFcIilcclxuICAgIH0sXHJcbiAgICBfdXBkYXRlQXhpc0VsZW1lbnRQb3NpdGlvbjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdGhpcy5fYXhpc0VsZW1lbnQuYXR0cih7XHJcbiAgICAgICAgICAgIHBvaW50czogX21hcCh0aGlzLmdldFNwaWRlclRpY2tzKCksIChmdW5jdGlvbih0aWNrKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHg6IHRpY2suY29vcmRzLngsXHJcbiAgICAgICAgICAgICAgICAgICAgeTogdGljay5jb29yZHMueVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KSlcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIF9nZXRTdGljazogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWVcclxuICAgIH0sXHJcbiAgICBfZ2V0U3BpZGVyQ2F0ZWdvcnlPcHRpb246IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB0cnVlXHJcbiAgICB9LFxyXG4gICAgZ2V0U3BpZGVyVGlja3M6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciB0aWNrcyA9IHRoaXMuZ2V0RnVsbFRpY2tzKCk7XHJcbiAgICAgICAgdGhpcy5fc3BpZGVyVGlja3MgPSB0aWNrcy5tYXAodGljayh0aGlzLCB0aGlzLnJlbmRlcmVyLCB7fSwge30sIHRoaXMuX2dldFNraXBwZWRDYXRlZ29yeSh0aWNrcyksIHRydWUpKTtcclxuICAgICAgICB0aGlzLl9zcGlkZXJUaWNrcy5mb3JFYWNoKChmdW5jdGlvbih0aWNrKSB7XHJcbiAgICAgICAgICAgIHRpY2suaW5pdENvb3JkcygpXHJcbiAgICAgICAgfSkpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zcGlkZXJUaWNrc1xyXG4gICAgfSxcclxuICAgIF9nZXRTdHJpcEdyYXBoaWNBdHRyaWJ1dGVzOiBmdW5jdGlvbihmcm9tQW5nbGUsIHRvQW5nbGUpIHtcclxuICAgICAgICB2YXIgY2VudGVyID0gdGhpcy5nZXRDZW50ZXIoKTtcclxuICAgICAgICB2YXIgc3BpZGVyVGlja3MgPSB0aGlzLmdldFNwaWRlclRpY2tzKCk7XHJcbiAgICAgICAgdmFyIGZpcnN0VGljaztcclxuICAgICAgICB2YXIgbGFzdFRpY2s7XHJcbiAgICAgICAgdmFyIG5leHRUaWNrO1xyXG4gICAgICAgIHZhciB0aWNrO1xyXG4gICAgICAgIHZhciBwb2ludHMgPSBbXTtcclxuICAgICAgICB2YXIgaSA9IDA7XHJcbiAgICAgICAgdmFyIGxlbiA9IHNwaWRlclRpY2tzLmxlbmd0aDtcclxuICAgICAgICB3aGlsZSAoaSA8IGxlbikge1xyXG4gICAgICAgICAgICB0aWNrID0gc3BpZGVyVGlja3NbaV0uY29vcmRzO1xyXG4gICAgICAgICAgICBpZiAodGljay5hbmdsZSA+PSBmcm9tQW5nbGUgJiYgdGljay5hbmdsZSA8PSB0b0FuZ2xlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWZpcnN0VGljaykge1xyXG4gICAgICAgICAgICAgICAgICAgIGZpcnN0VGljayA9IChzcGlkZXJUaWNrc1tpIC0gMV0gfHwgc3BpZGVyVGlja3Nbc3BpZGVyVGlja3MubGVuZ3RoIC0gMV0pLmNvb3JkcztcclxuICAgICAgICAgICAgICAgICAgICBwb2ludHMucHVzaCgodGljay54ICsgZmlyc3RUaWNrLngpIC8gMiwgKHRpY2sueSArIGZpcnN0VGljay55KSAvIDIpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBwb2ludHMucHVzaCh0aWNrLngsIHRpY2sueSk7XHJcbiAgICAgICAgICAgICAgICBuZXh0VGljayA9IChzcGlkZXJUaWNrc1tpICsgMV0gfHwgc3BpZGVyVGlja3NbMF0pLmNvb3JkcztcclxuICAgICAgICAgICAgICAgIGxhc3RUaWNrID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHg6ICh0aWNrLnggKyBuZXh0VGljay54KSAvIDIsXHJcbiAgICAgICAgICAgICAgICAgICAgeTogKHRpY2sueSArIG5leHRUaWNrLnkpIC8gMlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGkrK1xyXG4gICAgICAgIH1cclxuICAgICAgICBwb2ludHMucHVzaChsYXN0VGljay54LCBsYXN0VGljay55KTtcclxuICAgICAgICBwb2ludHMucHVzaChjZW50ZXIueCwgY2VudGVyLnkpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHBvaW50czogcG9pbnRzXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIF9jcmVhdGVTdHJpcDogZnVuY3Rpb24oX3JlZjIpIHtcclxuICAgICAgICB2YXIge1xyXG4gICAgICAgICAgICBwb2ludHM6IHBvaW50c1xyXG4gICAgICAgIH0gPSBfcmVmMjtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcmVuZGVyZXIucGF0aChwb2ludHMsIFwiYXJlYVwiKVxyXG4gICAgfSxcclxuICAgIF9nZXRUcmFuc2xhdGVkQ29vcmQ6IGZ1bmN0aW9uKHZhbHVlLCBvZmZzZXQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdHJhbnNsYXRvci50cmFuc2xhdGUodmFsdWUsIG9mZnNldCkgLSBIQUxGX1BJX0FOR0xFXHJcbiAgICB9LFxyXG4gICAgX3NldFRpY2tPZmZzZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHRoaXMuX3RpY2tPZmZzZXQgPSBmYWxzZVxyXG4gICAgfVxyXG59KTtcclxuZXhwb3J0IHZhciBsaW5lYXIgPSB7XHJcbiAgICBfcmVzZXRNYXJnaW5zKCkge1xyXG4gICAgICAgIHRoaXMuX3JlaW5pdFRyYW5zbGF0b3IodGhpcy5fZ2V0Vmlld3BvcnRSYW5nZSgpKVxyXG4gICAgfSxcclxuICAgIF9nZXRTdGljazogeHlBeGVzTGluZWFyLl9nZXRTdGljayxcclxuICAgIF9nZXRTcGlkZXJDYXRlZ29yeU9wdGlvbjogX25vb3AsXHJcbiAgICBfZ2V0VHJhbnNsYXRvck9wdGlvbnM6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGlzSG9yaXpvbnRhbDogdHJ1ZSxcclxuICAgICAgICAgICAgc3RpY2s6IHRoaXMuX2dldFN0aWNrKClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZ2V0UmFkaXVzOiBjaXJjdWxhckF4ZXMuZ2V0UmFkaXVzLFxyXG4gICAgZ2V0Q2VudGVyOiBjaXJjdWxhckF4ZXMuZ2V0Q2VudGVyLFxyXG4gICAgZ2V0QW5nbGVzOiBjaXJjdWxhckF4ZXMuZ2V0QW5nbGVzLFxyXG4gICAgX3VwZGF0ZVJhZGl1czogY2lyY3VsYXJBeGVzLl91cGRhdGVSYWRpdXMsXHJcbiAgICBfdXBkYXRlQ2VudGVyOiBjaXJjdWxhckF4ZXMuX3VwZGF0ZUNlbnRlcixcclxuICAgIF9wcm9jZXNzQ2FudmFzKGNhbnZhcykge1xyXG4gICAgICAgIHRoaXMuX3VwZGF0ZVJhZGl1cyhjYW52YXMpO1xyXG4gICAgICAgIHRoaXMuX3VwZGF0ZUNlbnRlcihjYW52YXMpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDAsXHJcbiAgICAgICAgICAgIHJpZ2h0OiAwLFxyXG4gICAgICAgICAgICBzdGFydFBhZGRpbmc6IGNhbnZhcy5zdGFydFBhZGRpbmcsXHJcbiAgICAgICAgICAgIGVuZFBhZGRpbmc6IGNhbnZhcy5lbmRQYWRkaW5nLFxyXG4gICAgICAgICAgICB3aWR0aDogdGhpcy5nZXRSYWRpdXMoKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfY3JlYXRlQXhpc0VsZW1lbnQ6IHh5QXhlc0xpbmVhci5fY3JlYXRlQXhpc0VsZW1lbnQsXHJcbiAgICBfdXBkYXRlQXhpc0VsZW1lbnRQb3NpdGlvbjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIGNlbnRlckNvb3JkID0gdGhpcy5nZXRDZW50ZXIoKTtcclxuICAgICAgICB0aGlzLl9heGlzRWxlbWVudC5hdHRyKHtcclxuICAgICAgICAgICAgcG9pbnRzOiBbY2VudGVyQ29vcmQueCwgY2VudGVyQ29vcmQueSwgY2VudGVyQ29vcmQueCArIHRoaXMuZ2V0UmFkaXVzKCksIGNlbnRlckNvb3JkLnldXHJcbiAgICAgICAgfSkucm90YXRlKHRoaXMuZ2V0QW5nbGVzKClbMF0gLSBIQUxGX1BJX0FOR0xFLCBjZW50ZXJDb29yZC54LCBjZW50ZXJDb29yZC55KVxyXG4gICAgfSxcclxuICAgIF9nZXRTY3JlZW5EZWx0YTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UmFkaXVzKClcclxuICAgIH0sXHJcbiAgICBfZ2V0VGlja01hcmtQb2ludHM6IGZ1bmN0aW9uKGNvb3JkcywgbGVuZ3RoKSB7XHJcbiAgICAgICAgcmV0dXJuIFtjb29yZHMueCAtIGxlbmd0aCAvIDIsIGNvb3Jkcy55LCBjb29yZHMueCArIGxlbmd0aCAvIDIsIGNvb3Jkcy55XVxyXG4gICAgfSxcclxuICAgIF9nZXRMYWJlbEFkanVzdGVkQ29vcmQ6IGZ1bmN0aW9uKHRpY2spIHtcclxuICAgICAgICB2YXIgbGFiZWxDb29yZHMgPSB0aWNrLmxhYmVsQ29vcmRzO1xyXG4gICAgICAgIHZhciBsYWJlbFkgPSBsYWJlbENvb3Jkcy55O1xyXG4gICAgICAgIHZhciBjb3NTaW4gPSBnZXRDb3NBbmRTaW4obGFiZWxDb29yZHMuYW5nbGUpO1xyXG4gICAgICAgIHZhciBpbmRlbnRGcm9tQXhpcyA9IHRoaXMuX29wdGlvbnMubGFiZWwuaW5kZW50RnJvbUF4aXMgfHwgMDtcclxuICAgICAgICB2YXIgYm94ID0gdGljay5sYWJlbEJCb3g7XHJcbiAgICAgICAgdmFyIHggPSBsYWJlbENvb3Jkcy54IC0gYWJzKGluZGVudEZyb21BeGlzICogY29zU2luLnNpbikgKyBhYnMoYm94LndpZHRoIC8gMiAqIGNvc1Npbi5jb3MpIC0gYm94LndpZHRoIC8gMjtcclxuICAgICAgICB2YXIgeSA9IGxhYmVsWSArIChsYWJlbFkgLSBib3gueSkgLSBhYnMoYm94LmhlaWdodCAvIDIgKiBjb3NTaW4uc2luKSArIGFicyhpbmRlbnRGcm9tQXhpcyAqIGNvc1Npbi5jb3MpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IHgsXHJcbiAgICAgICAgICAgIHk6IHlcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2dldEdyaWRMaW5lRHJhd2VyOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHRpY2ssIGdyaWRTdHlsZSkge1xyXG4gICAgICAgICAgICB2YXIgZ3JpZCA9IHRoYXQuX2dldEdyaWRQb2ludHModGljay5jb29yZHMpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhhdC5fcmVuZGVyZXIuY2lyY2xlKGdyaWQuY3gsIGdyaWQuY3ksIGdyaWQucikuYXR0cihncmlkU3R5bGUpLnNoYXJwKClcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2dldEdyaWRQb2ludHM6IGZ1bmN0aW9uKGNvb3Jkcykge1xyXG4gICAgICAgIHZhciBwb3MgPSB0aGlzLmdldENlbnRlcigpO1xyXG4gICAgICAgIHZhciByYWRpdXMgPSBnZXREaXN0YW5jZShwb3MueCwgcG9zLnksIGNvb3Jkcy54LCBjb29yZHMueSk7XHJcbiAgICAgICAgaWYgKHJhZGl1cyA+IHRoaXMuZ2V0UmFkaXVzKCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGN4OiBudWxsLFxyXG4gICAgICAgICAgICAgICAgY3k6IG51bGwsXHJcbiAgICAgICAgICAgICAgICByOiBudWxsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgY3g6IHBvcy54LFxyXG4gICAgICAgICAgICBjeTogcG9zLnksXHJcbiAgICAgICAgICAgIHI6IHJhZGl1c1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfZ2V0VHJhbnNsYXRlZFZhbHVlOiBmdW5jdGlvbih2YWx1ZSwgb2Zmc2V0KSB7XHJcbiAgICAgICAgdmFyIHN0YXJ0QW5nbGUgPSB0aGlzLmdldEFuZ2xlcygpWzBdO1xyXG4gICAgICAgIHZhciB4eSA9IGNvbnZlcnRQb2xhclRvWFkodGhpcy5nZXRDZW50ZXIoKSwgc3RhcnRBbmdsZSwgMCwgdGhpcy5fdHJhbnNsYXRvci50cmFuc2xhdGUodmFsdWUsIG9mZnNldCkpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IHh5LngsXHJcbiAgICAgICAgICAgIHk6IHh5LnksXHJcbiAgICAgICAgICAgIGFuZ2xlOiBzdGFydEFuZ2xlIC0gSEFMRl9QSV9BTkdMRVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfZ2V0VHJhbnNsYXRlZENvb3JkOiBmdW5jdGlvbih2YWx1ZSwgb2Zmc2V0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyYW5zbGF0b3IudHJhbnNsYXRlKHZhbHVlLCBvZmZzZXQpXHJcbiAgICB9LFxyXG4gICAgX2dldENhbnZhc1N0YXJ0RW5kKCkge1xyXG4gICAgICAgIHZhciBpbnZlcnQgPSB0aGlzLmdldFRyYW5zbGF0b3IoKS5nZXRCdXNpbmVzc1JhbmdlKCkuaW52ZXJ0O1xyXG4gICAgICAgIHZhciBjb29yZHMgPSBbMCwgdGhpcy5nZXRSYWRpdXMoKV07XHJcbiAgICAgICAgaW52ZXJ0ICYmIGNvb3Jkcy5yZXZlcnNlKCk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgc3RhcnQ6IGNvb3Jkc1swXSxcclxuICAgICAgICAgICAgZW5kOiBjb29yZHNbMV1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2dldFN0cmlwR3JhcGhpY0F0dHJpYnV0ZXM6IGZ1bmN0aW9uKGZyb21Qb2ludCwgdG9Qb2ludCkge1xyXG4gICAgICAgIHZhciBjZW50ZXIgPSB0aGlzLmdldENlbnRlcigpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IGNlbnRlci54LFxyXG4gICAgICAgICAgICB5OiBjZW50ZXIueSxcclxuICAgICAgICAgICAgaW5uZXJSYWRpdXM6IGZyb21Qb2ludCxcclxuICAgICAgICAgICAgb3V0ZXJSYWRpdXM6IHRvUG9pbnRcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2NyZWF0ZVN0cmlwOiBmdW5jdGlvbihhdHRycykge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJlci5hcmMoYXR0cnMueCwgYXR0cnMueSwgYXR0cnMuaW5uZXJSYWRpdXMsIGF0dHJzLm91dGVyUmFkaXVzLCAwLCAzNjApXHJcbiAgICB9LFxyXG4gICAgX2dldEFkanVzdGVkU3RyaXBMYWJlbENvb3JkczogY2lyY3VsYXJBeGVzLl9nZXRBZGp1c3RlZFN0cmlwTGFiZWxDb29yZHMsXHJcbiAgICBfZ2V0U3RyaXBMYWJlbENvb3JkczogZnVuY3Rpb24oZnJvbSwgdG8pIHtcclxuICAgICAgICB2YXIgbGFiZWxQb3MgPSBmcm9tICsgKHRvIC0gZnJvbSkgLyAyO1xyXG4gICAgICAgIHZhciBjZW50ZXIgPSB0aGlzLmdldENlbnRlcigpO1xyXG4gICAgICAgIHZhciB5ID0gcm91bmQoY2VudGVyLnkgLSBsYWJlbFBvcyk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgeDogY2VudGVyLngsXHJcbiAgICAgICAgICAgIHk6IHksXHJcbiAgICAgICAgICAgIGFsaWduOiBjb25zdGFudHMuY2VudGVyXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIF9nZXRDb25zdGFudExpbmVHcmFwaGljQXR0cmlidXRlczogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICB2YXIgY2VudGVyID0gdGhpcy5nZXRDZW50ZXIoKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBjeDogY2VudGVyLngsXHJcbiAgICAgICAgICAgIGN5OiBjZW50ZXIueSxcclxuICAgICAgICAgICAgcjogdmFsdWVcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2NyZWF0ZUNvbnN0YW50TGluZTogZnVuY3Rpb24odmFsdWUsIGF0dHIpIHtcclxuICAgICAgICB2YXIgYXR0cnMgPSB0aGlzLl9nZXRDb25zdGFudExpbmVHcmFwaGljQXR0cmlidXRlcyh2YWx1ZSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlbmRlcmVyLmNpcmNsZShhdHRycy5jeCwgYXR0cnMuY3ksIGF0dHJzLnIpLmF0dHIoYXR0cikuc2hhcnAoKVxyXG4gICAgfSxcclxuICAgIF9nZXRDb25zdGFudExpbmVMYWJlbHNDb29yZHM6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgdmFyIGNlbnRlciA9IHRoaXMuZ2V0Q2VudGVyKCk7XHJcbiAgICAgICAgdmFyIHkgPSByb3VuZChjZW50ZXIueSAtIHZhbHVlKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICB4OiBjZW50ZXIueCxcclxuICAgICAgICAgICAgeTogeVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfY2hlY2tBbGlnbm1lbnRDb25zdGFudExpbmVMYWJlbHM6IF9ub29wLFxyXG4gICAgX3JvdGF0ZVRpY2s6IGZ1bmN0aW9uKGVsZW1lbnQsIGNvb3JkcywgaXNHcmlkTGluZSkge1xyXG4gICAgICAgICFpc0dyaWRMaW5lICYmIGVsZW1lbnQucm90YXRlKGNvb3Jkcy5hbmdsZSArIEhBTEZfUElfQU5HTEUsIGNvb3Jkcy54LCBjb29yZHMueSlcclxuICAgIH0sXHJcbiAgICBfdmFsaWRhdGVPdmVybGFwcGluZ01vZGU6IGNpcmN1bGFyQXhlcy5fdmFsaWRhdGVPdmVybGFwcGluZ01vZGUsXHJcbiAgICBfdmFsaWRhdGVEaXNwbGF5TW9kZTogY2lyY3VsYXJBeGVzLl92YWxpZGF0ZURpc3BsYXlNb2RlLFxyXG4gICAgX2dldFN0ZXA6IGZ1bmN0aW9uKGJveGVzKSB7XHJcbiAgICAgICAgdmFyIHF1YXJ0ZXIgPSBnZXRQb2xhclF1YXJ0ZXIodGhpcy5nZXRBbmdsZXMoKVswXSk7XHJcbiAgICAgICAgdmFyIHNwYWNpbmcgPSB0aGlzLl9vcHRpb25zLmxhYmVsLm1pblNwYWNpbmc7XHJcbiAgICAgICAgdmFyIGZ1bmMgPSAyID09PSBxdWFydGVyIHx8IDQgPT09IHF1YXJ0ZXIgPyBmdW5jdGlvbihib3gpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGJveC53aWR0aCArIHNwYWNpbmdcclxuICAgICAgICB9IDogZnVuY3Rpb24oYm94KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBib3guaGVpZ2h0XHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YXIgbWF4TGFiZWxMZW5ndGggPSBib3hlcy5yZWR1Y2UoKHByZXZWYWx1ZSwgYm94KSA9PiBfbWF4KHByZXZWYWx1ZSwgZnVuYyhib3gpKSwgMCk7XHJcbiAgICAgICAgcmV0dXJuIGNvbnN0YW50cy5nZXRUaWNrc0NvdW50SW5SYW5nZSh0aGlzLl9tYWpvclRpY2tzLCAyID09PSBxdWFydGVyIHx8IDQgPT09IHF1YXJ0ZXIgPyBcInhcIiA6IFwieVwiLCBtYXhMYWJlbExlbmd0aClcclxuICAgIH1cclxufTtcclxuZXhwb3J0IHZhciBsaW5lYXJTcGlkZXIgPSBleHRlbmQoe30sIGxpbmVhciwge1xyXG4gICAgX2NyZWF0ZVBhdGhFbGVtZW50OiBmdW5jdGlvbihwb2ludHMsIGF0dHIpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcmVuZGVyZXIucGF0aChwb2ludHMsIFwiYXJlYVwiKS5hdHRyKGF0dHIpLnNoYXJwKClcclxuICAgIH0sXHJcbiAgICBzZXRTcGlkZXJUaWNrczogZnVuY3Rpb24odGlja3MpIHtcclxuICAgICAgICB0aGlzLl9zcGlkZXJUaWNrcyA9IHRpY2tzXHJcbiAgICB9LFxyXG4gICAgX2dldEdyaWRMaW5lRHJhd2VyOiBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHRpY2ssIGdyaWRTdHlsZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhhdC5fY3JlYXRlUGF0aEVsZW1lbnQodGhhdC5fZ2V0R3JpZFBvaW50cyh0aWNrLmNvb3JkcykucG9pbnRzLCBncmlkU3R5bGUpXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIF9nZXRHcmlkUG9pbnRzOiBmdW5jdGlvbihjb29yZHMpIHtcclxuICAgICAgICB2YXIgcG9zID0gdGhpcy5nZXRDZW50ZXIoKTtcclxuICAgICAgICB2YXIgcmFkaXVzID0gZ2V0RGlzdGFuY2UocG9zLngsIHBvcy55LCBjb29yZHMueCwgY29vcmRzLnkpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRHcmlkUG9pbnRzQnlSYWRpdXMocmFkaXVzKVxyXG4gICAgfSxcclxuICAgIF9nZXRHcmlkUG9pbnRzQnlSYWRpdXM6IGZ1bmN0aW9uKHJhZGl1cykge1xyXG4gICAgICAgIHZhciBwb3MgPSB0aGlzLmdldENlbnRlcigpO1xyXG4gICAgICAgIGlmIChyYWRpdXMgPiB0aGlzLmdldFJhZGl1cygpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBwb2ludHM6IG51bGxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBwb2ludHM6IF9tYXAodGhpcy5fc3BpZGVyVGlja3MsIChmdW5jdGlvbih0aWNrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgY29zU2luID0gZ2V0Q29zQW5kU2luKHRpY2suY29vcmRzLmFuZ2xlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgeDogcm91bmQocG9zLnggKyByYWRpdXMgKiBjb3NTaW4uY29zKSxcclxuICAgICAgICAgICAgICAgICAgICB5OiByb3VuZChwb3MueSArIHJhZGl1cyAqIGNvc1Npbi5zaW4pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBfZ2V0U3RyaXBHcmFwaGljQXR0cmlidXRlczogZnVuY3Rpb24oZnJvbVBvaW50LCB0b1BvaW50KSB7XHJcbiAgICAgICAgdmFyIGlubmVyUG9pbnRzID0gdGhpcy5fZ2V0R3JpZFBvaW50c0J5UmFkaXVzKHRvUG9pbnQpLnBvaW50cztcclxuICAgICAgICB2YXIgb3V0ZXJQb2ludHMgPSB0aGlzLl9nZXRHcmlkUG9pbnRzQnlSYWRpdXMoZnJvbVBvaW50KS5wb2ludHM7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcG9pbnRzOiBbb3V0ZXJQb2ludHMsIGlubmVyUG9pbnRzLnJldmVyc2UoKV1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgX2NyZWF0ZVN0cmlwOiBjaXJjdWxhclNwaWRlci5fY3JlYXRlU3RyaXAsXHJcbiAgICBfZ2V0Q29uc3RhbnRMaW5lR3JhcGhpY0F0dHJpYnV0ZXM6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldEdyaWRQb2ludHNCeVJhZGl1cyh2YWx1ZSlcclxuICAgIH0sXHJcbiAgICBfY3JlYXRlQ29uc3RhbnRMaW5lOiBmdW5jdGlvbih2YWx1ZSwgYXR0cikge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jcmVhdGVQYXRoRWxlbWVudCh0aGlzLl9nZXRDb25zdGFudExpbmVHcmFwaGljQXR0cmlidXRlcyh2YWx1ZSkucG9pbnRzLCBhdHRyKVxyXG4gICAgfVxyXG59KTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/polar_axes.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/smart_formatter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/smart_formatter.js ***!
  \*****************************************************************/
/*! exports provided: smartFormatter, formatRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"smartFormatter\", function() { return smartFormatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatRange\", function() { return formatRange; });\n/* harmony import */ var _format_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../format_helper */ \"./node_modules/devextreme/esm/format_helper.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/**\r\n * DevExtreme (esm/viz/axes/smart_formatter.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\nvar _format = _format_helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].format;\r\nvar {\r\n    abs: abs,\r\n    floor: floor\r\n} = Math;\r\nvar EXPONENTIAL = \"exponential\";\r\nvar formats = [\"fixedPoint\", \"thousands\", \"millions\", \"billions\", \"trillions\", EXPONENTIAL];\r\nvar dateUnitIntervals = [\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"month\", \"year\"];\r\n\r\nfunction getDatesDifferences(prevDate, curDate, nextDate, tickFormat) {\r\n    var prevDifferences;\r\n    var nextDifferences;\r\n    var dateUnitInterval;\r\n    var dateUnitsLength = dateUnitIntervals.length;\r\n    var i;\r\n    var j;\r\n    if (\"week\" === tickFormat) {\r\n        tickFormat = \"day\"\r\n    } else if (\"quarter\" === tickFormat) {\r\n        tickFormat = \"month\"\r\n    } else if (\"shorttime\" === tickFormat) {\r\n        tickFormat = \"hour\"\r\n    } else if (\"longtime\" === tickFormat) {\r\n        tickFormat = \"second\"\r\n    }\r\n    var tickFormatIndex = dateUnitIntervals.indexOf(tickFormat);\r\n    if (nextDate) {\r\n        nextDifferences = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDatesDifferences(curDate, nextDate);\r\n        prevDifferences = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDatesDifferences(curDate, prevDate);\r\n        if (nextDifferences[tickFormat]) {\r\n            for (i = dateUnitsLength - 1; i >= tickFormatIndex; i--) {\r\n                dateUnitInterval = dateUnitIntervals[i];\r\n                if (i === tickFormatIndex) {\r\n                    setDateUnitInterval(nextDifferences, tickFormatIndex + (nextDifferences.millisecond ? 2 : 1))\r\n                } else if (nextDifferences[dateUnitInterval]) {\r\n                    resetDateUnitInterval(nextDifferences, i);\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        prevDifferences = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDatesDifferences(prevDate, curDate);\r\n        for (i = dateUnitsLength - 1; i >= tickFormatIndex; i--) {\r\n            dateUnitInterval = dateUnitIntervals[i];\r\n            if (prevDifferences[dateUnitInterval]) {\r\n                if (i - tickFormatIndex > 1) {\r\n                    for (j = tickFormatIndex + 1; j >= 0; j--) {\r\n                        resetDateUnitInterval(prevDifferences, j)\r\n                    }\r\n                    break\r\n                } else if (isDateTimeStart(curDate, dateUnitInterval)) {\r\n                    for (j = i - 1; j > 0; j--) {\r\n                        resetDateUnitInterval(prevDifferences, j)\r\n                    }\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return nextDate ? nextDifferences : prevDifferences\r\n}\r\n\r\nfunction isDateTimeStart(date, dateUnitInterval) {\r\n    var unitNumbers = [date.getMilliseconds(), date.getSeconds(), date.getMinutes(), date.getHours(), date.getDate(), date.getMonth()];\r\n    var unitIndex = dateUnitIntervals.indexOf(dateUnitInterval);\r\n    var i;\r\n    for (i = 0; i < unitIndex; i++) {\r\n        if (4 === i && 1 !== unitNumbers[i] || 4 !== i && 0 !== unitNumbers[i]) {\r\n            return false\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\nfunction resetDateUnitInterval(differences, intervalIndex) {\r\n    var dateUnitInterval = dateUnitIntervals[intervalIndex];\r\n    if (differences[dateUnitInterval]) {\r\n        differences[dateUnitInterval] = false;\r\n        differences.count--\r\n    }\r\n}\r\n\r\nfunction setDateUnitInterval(differences, intervalIndex) {\r\n    var dateUnitInterval = dateUnitIntervals[intervalIndex];\r\n    if (false === differences[dateUnitInterval]) {\r\n        differences[dateUnitInterval] = true;\r\n        differences.count++\r\n    }\r\n}\r\n\r\nfunction getNoZeroIndex(str) {\r\n    return str.length - parseInt(str).toString().length\r\n}\r\n\r\nfunction getTransitionTickIndex(ticks, value) {\r\n    var i;\r\n    var curDiff;\r\n    var minDiff;\r\n    var nearestTickIndex = 0;\r\n    minDiff = abs(value - ticks[0]);\r\n    for (i = 1; i < ticks.length; i++) {\r\n        curDiff = abs(value - ticks[i]);\r\n        if (curDiff < minDiff) {\r\n            minDiff = curDiff;\r\n            nearestTickIndex = i\r\n        }\r\n    }\r\n    return nearestTickIndex\r\n}\r\n\r\nfunction splitDecimalNumber(value) {\r\n    return value.toString().split(\".\")\r\n}\r\n\r\nfunction createFormat(type) {\r\n    var formatter;\r\n    if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(type)) {\r\n        formatter = type;\r\n        type = null\r\n    }\r\n    return {\r\n        type: type,\r\n        formatter: formatter\r\n    }\r\n}\r\nfunction smartFormatter(tick, options) {\r\n    var tickInterval = options.tickInterval;\r\n    var tickIntervalIndex;\r\n    var tickIndex;\r\n    var actualIndex;\r\n    var stringTick = abs(tick).toString();\r\n    var precision = 0;\r\n    var typeFormat;\r\n    var offset = 0;\r\n    var separatedTickInterval;\r\n    var indexOfFormat = 0;\r\n    var indexOfTick = -1;\r\n    var datesDifferences;\r\n    var format = options.labelOptions.format;\r\n    var ticks = options.ticks;\r\n    var log10Tick;\r\n    var prevDateIndex;\r\n    var nextDateIndex;\r\n    var isLogarithmic = \"logarithmic\" === options.type;\r\n    if (1 === ticks.length && 0 === ticks.indexOf(tick) && !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(tickInterval)) {\r\n        tickInterval = abs(tick) >= 1 ? 1 : Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(1 - abs(tick), tick)\r\n    }\r\n    if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(format) && \"discrete\" !== options.type && tick && (10 === options.logarithmBase || !isLogarithmic)) {\r\n        if (\"datetime\" !== options.dataType && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(tickInterval)) {\r\n            if (ticks.length && -1 === ticks.indexOf(tick)) {\r\n                indexOfTick = getTransitionTickIndex(ticks, tick);\r\n                tickInterval = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(abs(tick - ticks[indexOfTick]), tick)\r\n            }\r\n            separatedTickInterval = splitDecimalNumber(tickInterval);\r\n            if (separatedTickInterval < 2) {\r\n                separatedTickInterval = splitDecimalNumber(tick)\r\n            }\r\n            if (isLogarithmic) {\r\n                log10Tick = Object(_core_utils__WEBPACK_IMPORTED_MODULE_4__[\"getAdjustedLog10\"])(abs(tick));\r\n                if (log10Tick > 0) {\r\n                    typeFormat = formats[floor(log10Tick / 3)] || EXPONENTIAL\r\n                } else if (log10Tick < -4) {\r\n                    typeFormat = EXPONENTIAL\r\n                } else {\r\n                    return _format(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(tick))\r\n                }\r\n            } else if (separatedTickInterval.length > 1 && !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isExponential\"])(tickInterval)) {\r\n                precision = separatedTickInterval[1].length;\r\n                typeFormat = formats[indexOfFormat]\r\n            } else if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isExponential\"])(tickInterval) && (-1 !== stringTick.indexOf(\".\") || Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isExponential\"])(tick))) {\r\n                typeFormat = EXPONENTIAL;\r\n                if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isExponential\"])(tick)) {\r\n                    precision = abs(getNoZeroIndex(stringTick.split(\".\")[1]) - Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"getExponent\"])(tickInterval) + 1)\r\n                } else {\r\n                    precision = Math.max(abs(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"getExponent\"])(tick) - Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"getExponent\"])(tickInterval)), abs(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"getPrecision\"])(tick) - Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"getPrecision\"])(tickInterval)))\r\n                }\r\n            } else {\r\n                tickIntervalIndex = floor(Object(_core_utils__WEBPACK_IMPORTED_MODULE_4__[\"getAdjustedLog10\"])(tickInterval));\r\n                actualIndex = tickIndex = floor(Object(_core_utils__WEBPACK_IMPORTED_MODULE_4__[\"getAdjustedLog10\"])(abs(tick)));\r\n                if (tickIndex - tickIntervalIndex >= 2) {\r\n                    actualIndex = tickIntervalIndex\r\n                }\r\n                indexOfFormat = floor(actualIndex / 3);\r\n                offset = 3 * indexOfFormat;\r\n                if (indexOfFormat < 5) {\r\n                    if (tickIntervalIndex - offset === 2 && tickIndex >= 3) {\r\n                        indexOfFormat++;\r\n                        offset = 3 * indexOfFormat\r\n                    }\r\n                    typeFormat = formats[indexOfFormat]\r\n                } else {\r\n                    typeFormat = formats[formats.length - 1]\r\n                }\r\n                if (offset > 0) {\r\n                    separatedTickInterval = splitDecimalNumber(tickInterval / Math.pow(10, offset));\r\n                    if (separatedTickInterval[1]) {\r\n                        precision = separatedTickInterval[1].length\r\n                    }\r\n                }\r\n            }\r\n            if (void 0 !== typeFormat || void 0 !== precision) {\r\n                format = {\r\n                    type: typeFormat,\r\n                    precision: precision\r\n                }\r\n            }\r\n        } else if (\"datetime\" === options.dataType) {\r\n            typeFormat = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDateFormatByTickInterval(tickInterval);\r\n            if (options.showTransition && ticks.length) {\r\n                indexOfTick = ticks.map(Number).indexOf(+tick);\r\n                if (1 === ticks.length && 0 === indexOfTick) {\r\n                    typeFormat = _format_helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDateFormatByTicks(ticks)\r\n                } else {\r\n                    if (-1 === indexOfTick) {\r\n                        prevDateIndex = getTransitionTickIndex(ticks, tick)\r\n                    } else {\r\n                        prevDateIndex = 0 === indexOfTick ? ticks.length - 1 : indexOfTick - 1;\r\n                        nextDateIndex = 0 === indexOfTick ? 1 : -1\r\n                    }\r\n                    datesDifferences = getDatesDifferences(ticks[prevDateIndex], tick, ticks[nextDateIndex], typeFormat);\r\n                    typeFormat = _format_helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDateFormatByDifferences(datesDifferences, typeFormat)\r\n                }\r\n            }\r\n            format = createFormat(typeFormat)\r\n        }\r\n    }\r\n    return _format(tick, format)\r\n}\r\n\r\nfunction getHighDiffFormat(diff) {\r\n    var stop = false;\r\n    for (var i in diff) {\r\n        if (true === diff[i] || \"hour\" === i || stop) {\r\n            diff[i] = false;\r\n            stop = true\r\n        } else if (false === diff[i]) {\r\n            diff[i] = true\r\n        }\r\n    }\r\n    return createFormat(_format_helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDateFormatByDifferences(diff))\r\n}\r\n\r\nfunction getHighAndSelfDiffFormat(diff, interval) {\r\n    var stop = false;\r\n    for (var i in diff) {\r\n        if (stop) {\r\n            diff[i] = false\r\n        } else if (i === interval) {\r\n            stop = true\r\n        } else {\r\n            diff[i] = true\r\n        }\r\n    }\r\n    return createFormat(_format_helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDateFormatByDifferences(diff))\r\n}\r\n\r\nfunction formatDateRange(startValue, endValue, tickInterval) {\r\n    var diff = getDatesDifferences(startValue, endValue);\r\n    var typeFormat = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDateFormatByTickInterval(tickInterval);\r\n    var diffFormatType = _format_helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getDateFormatByDifferences(diff, typeFormat);\r\n    var diffFormat = createFormat(diffFormatType);\r\n    var values = [];\r\n    if (tickInterval in diff) {\r\n        var rangeFormat = getHighAndSelfDiffFormat(getDatesDifferences(startValue, endValue), tickInterval);\r\n        var value = _format(startValue, rangeFormat);\r\n        if (value) {\r\n            values.push(value)\r\n        }\r\n    } else {\r\n        var _rangeFormat = getHighDiffFormat(getDatesDifferences(startValue, endValue));\r\n        var highValue = _format(startValue, _rangeFormat);\r\n        if (highValue) {\r\n            values.push(highValue)\r\n        }\r\n        values.push(\"\".concat(_format(startValue, diffFormat), \" - \").concat(_format(endValue, diffFormat)))\r\n    }\r\n    return values.join(\", \")\r\n}\r\n\r\nfunction processDateInterval(interval) {\r\n    if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isObject\"])(interval)) {\r\n        var dateUnits = Object.keys(interval);\r\n        var sum = dateUnits.reduce((sum, k) => interval[k] + sum, 0);\r\n        if (1 === sum) {\r\n            var dateUnit = dateUnits.filter(k => 1 === interval[k])[0];\r\n            return dateUnit.slice(0, dateUnit.length - 1)\r\n        }\r\n    }\r\n    return interval\r\n}\r\nfunction formatRange(_ref) {\r\n    var {\r\n        startValue: startValue,\r\n        endValue: endValue,\r\n        tickInterval: tickInterval,\r\n        argumentFormat: argumentFormat,\r\n        axisOptions: {\r\n            dataType: dataType,\r\n            type: type,\r\n            logarithmBase: logarithmBase\r\n        }\r\n    } = _ref;\r\n    if (\"discrete\" === type) {\r\n        return \"\"\r\n    }\r\n    if (\"datetime\" === dataType) {\r\n        return formatDateRange(startValue, endValue, processDateInterval(tickInterval))\r\n    }\r\n    var formatOptions = {\r\n        ticks: [],\r\n        type: type,\r\n        dataType: dataType,\r\n        tickInterval: tickInterval,\r\n        logarithmBase: logarithmBase,\r\n        labelOptions: {\r\n            format: argumentFormat\r\n        }\r\n    };\r\n    return \"\".concat(smartFormatter(startValue, formatOptions), \" - \").concat(smartFormatter(endValue, formatOptions))\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/smart_formatter.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/strip.js":
/*!*******************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/strip.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return createStrip; });\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/**\r\n * DevExtreme (esm/viz/axes/strip.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\nfunction createStrip(axis, options) {\r\n    var storedCoord;\r\n    var lastStoredCoordinates;\r\n    var labelOptions = options.label || {};\r\n    return {\r\n        options: options,\r\n        label: null,\r\n        rect: null,\r\n        _getCoord() {\r\n            var canvas = axis._getCanvasStartEnd();\r\n            var range = axis._translator.getBusinessRange();\r\n            return axis._getStripPos(options.startValue, options.endValue, canvas.start, canvas.end, range)\r\n        },\r\n        _drawLabel: coords => axis._renderer.text(labelOptions.text, coords.x, coords.y).css(Object(_core_utils__WEBPACK_IMPORTED_MODULE_1__[\"patchFontOptions\"])(Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, axis.getOptions().label.font, labelOptions.font))).attr({\r\n            align: \"center\",\r\n            class: labelOptions.cssClass\r\n        }).append(axis._axisStripLabelGroup),\r\n        draw() {\r\n            if (axis._translator.getBusinessRange().isEmpty()) {\r\n                return\r\n            }\r\n            if ((Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(options.startValue) || Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(options.endValue)) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(options.color)) {\r\n                var stripPos = this._getCoord();\r\n                this.labelCoords = labelOptions.text ? axis._getStripLabelCoords(stripPos.from, stripPos.to, labelOptions) : null;\r\n                if (stripPos.outOfCanvas || !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(stripPos.to) || !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(stripPos.from)) {\r\n                    return\r\n                }\r\n                this.rect = axis._createStrip(axis._getStripGraphicAttributes(stripPos.from, stripPos.to)).attr({\r\n                    fill: options.color\r\n                }).append(axis._axisStripGroup);\r\n                this.label = labelOptions.text ? this._drawLabel(this.labelCoords) : null\r\n            }\r\n        },\r\n        getContentContainer() {\r\n            return this.label\r\n        },\r\n        removeLabel() {},\r\n        updatePosition(animate) {\r\n            var stripPos = this._getCoord();\r\n            if (animate && storedCoord) {\r\n                this.label && this.label.attr(axis._getStripLabelCoords(storedCoord.from, storedCoord.to, options.label));\r\n                this.rect && this.rect.attr(axis._getStripGraphicAttributes(storedCoord.from, storedCoord.to));\r\n                this.label && this.label.animate(axis._getStripLabelCoords(stripPos.from, stripPos.to, options.label));\r\n                this.rect && this.rect.animate(axis._getStripGraphicAttributes(stripPos.from, stripPos.to))\r\n            } else {\r\n                this.label && this.label.attr(axis._getStripLabelCoords(stripPos.from, stripPos.to, options.label));\r\n                this.rect && this.rect.attr(axis._getStripGraphicAttributes(stripPos.from, stripPos.to))\r\n            }\r\n        },\r\n        saveCoords() {\r\n            lastStoredCoordinates = storedCoord;\r\n            storedCoord = this._getCoord()\r\n        },\r\n        resetCoordinates() {\r\n            storedCoord = lastStoredCoordinates\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L2F4ZXMvc3RyaXAuanM/ZGM2NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUcrQjtBQUdSO0FBR1U7QUFDbEI7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULDZGQUE2RixvRUFBZ0IsQ0FBQyxpRUFBTSxHQUFHO0FBQ3ZIO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsa0VBQVMsd0JBQXdCLGtFQUFTLHVCQUF1QixrRUFBUztBQUMzRjtBQUNBO0FBQ0EsNkNBQTZDLGtFQUFTLGtCQUFrQixrRUFBUztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lL2VzbS92aXovYXhlcy9zdHJpcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBEZXZFeHRyZW1lIChlc20vdml6L2F4ZXMvc3RyaXAuanMpXHJcbiAqIFZlcnNpb246IDIxLjIuN1xyXG4gKiBCdWlsZCBkYXRlOiBNb24gQXByIDExIDIwMjJcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMiBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICogUmVhZCBhYm91dCBEZXZFeHRyZW1lIGxpY2Vuc2luZyBoZXJlOiBodHRwczovL2pzLmRldmV4cHJlc3MuY29tL0xpY2Vuc2luZy9cclxuICovXHJcbmltcG9ydCB7XHJcbiAgICBpc0RlZmluZWRcclxufSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy90eXBlXCI7XHJcbmltcG9ydCB7XHJcbiAgICBwYXRjaEZvbnRPcHRpb25zXHJcbn0gZnJvbSBcIi4uL2NvcmUvdXRpbHNcIjtcclxuaW1wb3J0IHtcclxuICAgIGV4dGVuZFxyXG59IGZyb20gXCIuLi8uLi9jb3JlL3V0aWxzL2V4dGVuZFwiO1xyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVTdHJpcChheGlzLCBvcHRpb25zKSB7XHJcbiAgICB2YXIgc3RvcmVkQ29vcmQ7XHJcbiAgICB2YXIgbGFzdFN0b3JlZENvb3JkaW5hdGVzO1xyXG4gICAgdmFyIGxhYmVsT3B0aW9ucyA9IG9wdGlvbnMubGFiZWwgfHwge307XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIG9wdGlvbnM6IG9wdGlvbnMsXHJcbiAgICAgICAgbGFiZWw6IG51bGwsXHJcbiAgICAgICAgcmVjdDogbnVsbCxcclxuICAgICAgICBfZ2V0Q29vcmQoKSB7XHJcbiAgICAgICAgICAgIHZhciBjYW52YXMgPSBheGlzLl9nZXRDYW52YXNTdGFydEVuZCgpO1xyXG4gICAgICAgICAgICB2YXIgcmFuZ2UgPSBheGlzLl90cmFuc2xhdG9yLmdldEJ1c2luZXNzUmFuZ2UoKTtcclxuICAgICAgICAgICAgcmV0dXJuIGF4aXMuX2dldFN0cmlwUG9zKG9wdGlvbnMuc3RhcnRWYWx1ZSwgb3B0aW9ucy5lbmRWYWx1ZSwgY2FudmFzLnN0YXJ0LCBjYW52YXMuZW5kLCByYW5nZSlcclxuICAgICAgICB9LFxyXG4gICAgICAgIF9kcmF3TGFiZWw6IGNvb3JkcyA9PiBheGlzLl9yZW5kZXJlci50ZXh0KGxhYmVsT3B0aW9ucy50ZXh0LCBjb29yZHMueCwgY29vcmRzLnkpLmNzcyhwYXRjaEZvbnRPcHRpb25zKGV4dGVuZCh7fSwgYXhpcy5nZXRPcHRpb25zKCkubGFiZWwuZm9udCwgbGFiZWxPcHRpb25zLmZvbnQpKSkuYXR0cih7XHJcbiAgICAgICAgICAgIGFsaWduOiBcImNlbnRlclwiLFxyXG4gICAgICAgICAgICBjbGFzczogbGFiZWxPcHRpb25zLmNzc0NsYXNzXHJcbiAgICAgICAgfSkuYXBwZW5kKGF4aXMuX2F4aXNTdHJpcExhYmVsR3JvdXApLFxyXG4gICAgICAgIGRyYXcoKSB7XHJcbiAgICAgICAgICAgIGlmIChheGlzLl90cmFuc2xhdG9yLmdldEJ1c2luZXNzUmFuZ2UoKS5pc0VtcHR5KCkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICgoaXNEZWZpbmVkKG9wdGlvbnMuc3RhcnRWYWx1ZSkgfHwgaXNEZWZpbmVkKG9wdGlvbnMuZW5kVmFsdWUpKSAmJiBpc0RlZmluZWQob3B0aW9ucy5jb2xvcikpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzdHJpcFBvcyA9IHRoaXMuX2dldENvb3JkKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxhYmVsQ29vcmRzID0gbGFiZWxPcHRpb25zLnRleHQgPyBheGlzLl9nZXRTdHJpcExhYmVsQ29vcmRzKHN0cmlwUG9zLmZyb20sIHN0cmlwUG9zLnRvLCBsYWJlbE9wdGlvbnMpIDogbnVsbDtcclxuICAgICAgICAgICAgICAgIGlmIChzdHJpcFBvcy5vdXRPZkNhbnZhcyB8fCAhaXNEZWZpbmVkKHN0cmlwUG9zLnRvKSB8fCAhaXNEZWZpbmVkKHN0cmlwUG9zLmZyb20pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlY3QgPSBheGlzLl9jcmVhdGVTdHJpcChheGlzLl9nZXRTdHJpcEdyYXBoaWNBdHRyaWJ1dGVzKHN0cmlwUG9zLmZyb20sIHN0cmlwUG9zLnRvKSkuYXR0cih7XHJcbiAgICAgICAgICAgICAgICAgICAgZmlsbDogb3B0aW9ucy5jb2xvclxyXG4gICAgICAgICAgICAgICAgfSkuYXBwZW5kKGF4aXMuX2F4aXNTdHJpcEdyb3VwKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGFiZWwgPSBsYWJlbE9wdGlvbnMudGV4dCA/IHRoaXMuX2RyYXdMYWJlbCh0aGlzLmxhYmVsQ29vcmRzKSA6IG51bGxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0Q29udGVudENvbnRhaW5lcigpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGFiZWxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbW92ZUxhYmVsKCkge30sXHJcbiAgICAgICAgdXBkYXRlUG9zaXRpb24oYW5pbWF0ZSkge1xyXG4gICAgICAgICAgICB2YXIgc3RyaXBQb3MgPSB0aGlzLl9nZXRDb29yZCgpO1xyXG4gICAgICAgICAgICBpZiAoYW5pbWF0ZSAmJiBzdG9yZWRDb29yZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sYWJlbCAmJiB0aGlzLmxhYmVsLmF0dHIoYXhpcy5fZ2V0U3RyaXBMYWJlbENvb3JkcyhzdG9yZWRDb29yZC5mcm9tLCBzdG9yZWRDb29yZC50bywgb3B0aW9ucy5sYWJlbCkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yZWN0ICYmIHRoaXMucmVjdC5hdHRyKGF4aXMuX2dldFN0cmlwR3JhcGhpY0F0dHJpYnV0ZXMoc3RvcmVkQ29vcmQuZnJvbSwgc3RvcmVkQ29vcmQudG8pKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGFiZWwgJiYgdGhpcy5sYWJlbC5hbmltYXRlKGF4aXMuX2dldFN0cmlwTGFiZWxDb29yZHMoc3RyaXBQb3MuZnJvbSwgc3RyaXBQb3MudG8sIG9wdGlvbnMubGFiZWwpKTtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVjdCAmJiB0aGlzLnJlY3QuYW5pbWF0ZShheGlzLl9nZXRTdHJpcEdyYXBoaWNBdHRyaWJ1dGVzKHN0cmlwUG9zLmZyb20sIHN0cmlwUG9zLnRvKSlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubGFiZWwgJiYgdGhpcy5sYWJlbC5hdHRyKGF4aXMuX2dldFN0cmlwTGFiZWxDb29yZHMoc3RyaXBQb3MuZnJvbSwgc3RyaXBQb3MudG8sIG9wdGlvbnMubGFiZWwpKTtcclxuICAgICAgICAgICAgICAgIHRoaXMucmVjdCAmJiB0aGlzLnJlY3QuYXR0cihheGlzLl9nZXRTdHJpcEdyYXBoaWNBdHRyaWJ1dGVzKHN0cmlwUG9zLmZyb20sIHN0cmlwUG9zLnRvKSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2F2ZUNvb3JkcygpIHtcclxuICAgICAgICAgICAgbGFzdFN0b3JlZENvb3JkaW5hdGVzID0gc3RvcmVkQ29vcmQ7XHJcbiAgICAgICAgICAgIHN0b3JlZENvb3JkID0gdGhpcy5fZ2V0Q29vcmQoKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmVzZXRDb29yZGluYXRlcygpIHtcclxuICAgICAgICAgICAgc3RvcmVkQ29vcmQgPSBsYXN0U3RvcmVkQ29vcmRpbmF0ZXNcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/strip.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/tick.js":
/*!******************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/tick.js ***!
  \******************************************************/
/*! exports provided: tick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tick\", function() { return createTick; });\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _core_utils_deferred__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/deferred */ \"./node_modules/devextreme/esm/core/utils/deferred.js\");\n/**\r\n * DevExtreme (esm/viz/axes/tick.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\nfunction getPathStyle(options) {\r\n    return {\r\n        stroke: options.color,\r\n        \"stroke-width\": options.width,\r\n        \"stroke-opacity\": options.opacity,\r\n        opacity: 1\r\n    }\r\n}\r\n\r\nfunction createTick(axis, renderer, tickOptions, gridOptions, skippedCategory, skipLabels, offset) {\r\n    var tickOffset = offset || axis._tickOffset;\r\n    var lineGroup = axis._axisLineGroup;\r\n    var elementsGroup = axis._axisElementsGroup;\r\n    var tickStyle = getPathStyle(tickOptions);\r\n    var gridStyle = getPathStyle(gridOptions);\r\n    var emptyStrRegExp = /^\\s+$/;\r\n    var axisOptions = axis.getOptions();\r\n    var labelOptions = axisOptions.label;\r\n    var labelStyle = axis._textOptions;\r\n\r\n    function getLabelFontStyle(tick) {\r\n        var fontStyle = axis._textFontStyles;\r\n        var customizeColor = labelOptions.customizeColor;\r\n        if (customizeColor && customizeColor.call) {\r\n            fontStyle = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])({}, axis._textFontStyles, {\r\n                fill: customizeColor.call(tick, tick)\r\n            })\r\n        }\r\n        return fontStyle\r\n    }\r\n\r\n    function createLabelHint(tick, range) {\r\n        var labelHint = axis.formatHint(tick.value, labelOptions, range);\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(labelHint) && \"\" !== labelHint) {\r\n            tick.getContentContainer().setTitle(labelHint)\r\n        }\r\n    }\r\n    return function(value) {\r\n        var tick = {\r\n            value: value,\r\n            updateValue(newValue) {\r\n                this.value = value = newValue\r\n            },\r\n            initCoords: function() {\r\n                this.coords = axis._getTranslatedValue(value, tickOffset);\r\n                this.labelCoords = axis._getTranslatedValue(value)\r\n            },\r\n            saveCoords() {\r\n                this._lastStoredCoordinates = {\r\n                    coords: this._storedCoords,\r\n                    labelCoords: this._storedLabelsCoords\r\n                };\r\n                this._storedCoords = this.coords;\r\n                this._storedLabelsCoords = this.templateContainer ? this._getTemplateCoords() : this.labelCoords\r\n            },\r\n            resetCoordinates() {\r\n                if (this._lastStoredCoordinates) {\r\n                    this._storedCoords = this._lastStoredCoordinates.coords;\r\n                    this._storedLabelsCoords = this._lastStoredCoordinates.labelCoords\r\n                }\r\n            },\r\n            drawMark(options) {\r\n                if (!tickOptions.visible || skippedCategory === value) {\r\n                    return\r\n                }\r\n                if (axis.areCoordsOutsideAxis(this.coords)) {\r\n                    return\r\n                }\r\n                if (this.mark) {\r\n                    this.mark.append(lineGroup);\r\n                    axis.sharp(this.mark, axis.getSharpDirectionByCoords(this.coords));\r\n                    this.updateTickPosition(options)\r\n                } else {\r\n                    this.mark = axis._createPathElement([], tickStyle, axis.getSharpDirectionByCoords(this.coords)).append(lineGroup);\r\n                    this.updateTickPosition(options)\r\n                }\r\n            },\r\n            setSkippedCategory(category) {\r\n                skippedCategory = category\r\n            },\r\n            _updateLine(lineElement, settings, storedSettings, animate, isGridLine) {\r\n                if (!lineElement) {\r\n                    return\r\n                }\r\n                if (null === settings.points || null === settings.r) {\r\n                    lineElement.remove();\r\n                    return\r\n                }\r\n                if (animate && storedSettings && null !== storedSettings.points) {\r\n                    settings.opacity = 1;\r\n                    lineElement.attr(storedSettings);\r\n                    lineElement.animate(settings)\r\n                } else {\r\n                    settings.opacity = animate ? 0 : 1;\r\n                    lineElement.attr(settings);\r\n                    animate && lineElement.animate({\r\n                        opacity: 1\r\n                    }, {\r\n                        delay: .5,\r\n                        partitionDuration: .5\r\n                    })\r\n                }\r\n                this.coords.angle && axis._rotateTick(lineElement, this.coords, isGridLine)\r\n            },\r\n            updateTickPosition: function(options, animate) {\r\n                this._updateLine(this.mark, {\r\n                    points: axis._getTickMarkPoints(tick.coords, tickOptions.length, options)\r\n                }, this._storedCoords && {\r\n                    points: axis._getTickMarkPoints(tick._storedCoords, tickOptions.length, options)\r\n                }, animate, false)\r\n            },\r\n            drawLabel: function(range, template) {\r\n                if (this.templateContainer && axis.isRendered()) {\r\n                    this.updateLabelPosition();\r\n                    return\r\n                }\r\n                var labelIsVisible = labelOptions.visible && !skipLabels && !axis.getTranslator().getBusinessRange().isEmpty() && !axis.areCoordsOutsideAxis(this.labelCoords);\r\n                if (!labelIsVisible) {\r\n                    if (this.label) {\r\n                        this.removeLabel()\r\n                    }\r\n                    return\r\n                }\r\n                var templateOption = labelOptions.template;\r\n                var text = axis.formatLabel(value, labelOptions, range);\r\n                if (this.label) {\r\n                    this.label.attr({\r\n                        text: text,\r\n                        rotate: 0\r\n                    }).append(elementsGroup);\r\n                    createLabelHint(this, range);\r\n                    this.updateLabelPosition();\r\n                    return\r\n                }\r\n                if (templateOption) {\r\n                    this.templateContainer = renderer.g().append(elementsGroup);\r\n                    this._templateDef && this._templateDef.reject();\r\n                    this._templateDef = new _core_utils_deferred__WEBPACK_IMPORTED_MODULE_2__[\"Deferred\"];\r\n                    template.render({\r\n                        model: {\r\n                            valueText: text,\r\n                            value: this.value,\r\n                            labelFontStyle: getLabelFontStyle(this),\r\n                            labelStyle: labelStyle\r\n                        },\r\n                        container: this.templateContainer.element,\r\n                        onRendered: () => {\r\n                            this.updateLabelPosition();\r\n                            this._templateDef && this._templateDef.resolve()\r\n                        }\r\n                    })\r\n                } else if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(text) && \"\" !== text && !emptyStrRegExp.test(text)) {\r\n                    this.label = renderer.text(text).css(getLabelFontStyle(this)).attr(labelStyle).append(elementsGroup);\r\n                    this.updateLabelPosition();\r\n                    createLabelHint(this, range)\r\n                }\r\n                var containerForData = this.getContentContainer();\r\n                containerForData && containerForData.data(\"chart-data-argument\", this.value);\r\n                this.templateContainer && createLabelHint(this, range)\r\n            },\r\n            getTemplateDeferred() {\r\n                return this._templateDef\r\n            },\r\n            getContentContainer() {\r\n                return this.templateContainer || this.label\r\n            },\r\n            fadeOutElements() {\r\n                var startSettings = {\r\n                    opacity: 1\r\n                };\r\n                var endSettings = {\r\n                    opacity: 0\r\n                };\r\n                var animationSettings = {\r\n                    partitionDuration: .5\r\n                };\r\n                if (this.getContentContainer()) {\r\n                    this._fadeOutLabel()\r\n                }\r\n                if (this.grid) {\r\n                    this.grid.append(axis._axisGridGroup).attr(startSettings).animate(endSettings, animationSettings)\r\n                }\r\n                if (this.mark) {\r\n                    this.mark.append(axis._axisLineGroup).attr(startSettings).animate(endSettings, animationSettings)\r\n                }\r\n            },\r\n            _fadeInLabel() {\r\n                var group = axis._renderer.g().attr({\r\n                    opacity: 0\r\n                }).append(axis._axisElementsGroup).animate({\r\n                    opacity: 1\r\n                }, {\r\n                    delay: .5,\r\n                    partitionDuration: .5\r\n                });\r\n                this.getContentContainer().append(group)\r\n            },\r\n            _fadeOutLabel() {\r\n                var group = axis._renderer.g().attr({\r\n                    opacity: 1\r\n                }).animate({\r\n                    opacity: 0\r\n                }, {\r\n                    partitionDuration: .5\r\n                }).append(axis._axisElementsGroup).toBackground();\r\n                this.getContentContainer().append(group)\r\n            },\r\n            _getTemplateCoords() {\r\n                return axis._getLabelAdjustedCoord(this, (axis._constantLabelOffset || 0) + (tick.labelOffset || 0))\r\n            },\r\n            updateLabelPosition: function(animate) {\r\n                var templateContainer = this.templateContainer;\r\n                if (!this.getContentContainer()) {\r\n                    return\r\n                }\r\n                if (animate && this._storedLabelsCoords) {\r\n                    if (templateContainer) {\r\n                        templateContainer.attr(this._storedLabelsCoords);\r\n                        var lCoords = this._getTemplateCoords();\r\n                        templateContainer.animate(lCoords)\r\n                    } else {\r\n                        this.label.attr({\r\n                            x: this._storedLabelsCoords.x,\r\n                            y: this._storedLabelsCoords.y\r\n                        });\r\n                        this.label.animate({\r\n                            x: this.labelCoords.x,\r\n                            y: this.labelCoords.y\r\n                        })\r\n                    }\r\n                } else {\r\n                    if (templateContainer) {\r\n                        var _lCoords = this._getTemplateCoords();\r\n                        templateContainer.attr(_lCoords)\r\n                    } else {\r\n                        this.label.attr({\r\n                            x: this.labelCoords.x,\r\n                            y: this.labelCoords.y\r\n                        })\r\n                    }\r\n                    if (animate) {\r\n                        this._fadeInLabel()\r\n                    }\r\n                }\r\n            },\r\n            updateMultilineTextAlignment() {\r\n                if (labelOptions.template || !this.label) {\r\n                    return\r\n                }\r\n                this.label.attr({\r\n                    textsAlignment: this.labelAlignment || axis.getOptions().label.alignment\r\n                })\r\n            },\r\n            drawGrid: function(drawLine) {\r\n                if (gridOptions.visible && skippedCategory !== this.value) {\r\n                    if (this.grid) {\r\n                        this.grid.append(axis._axisGridGroup);\r\n                        axis.sharp(this.grid, axis.getSharpDirectionByCoords(this.coords));\r\n                        this.updateGridPosition()\r\n                    } else {\r\n                        this.grid = drawLine(this, gridStyle);\r\n                        this.grid && this.grid.append(axis._axisGridGroup)\r\n                    }\r\n                }\r\n            },\r\n            updateGridPosition: function(animate) {\r\n                this._updateLine(this.grid, axis._getGridPoints(tick.coords), this._storedCoords && axis._getGridPoints(this._storedCoords), animate, true)\r\n            },\r\n            removeLabel() {\r\n                var contentContainer = this.getContentContainer();\r\n                contentContainer && contentContainer.remove();\r\n                this._templateDef && this._templateDef.reject();\r\n                this._templateDef = this.templateContainer = this.label = null\r\n            }\r\n        };\r\n        return tick\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/tick.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/tick_generator.js":
/*!****************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/tick_generator.js ***!
  \****************************************************************/
/*! exports provided: tickGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tickGenerator\", function() { return tickGenerator; });\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/**\r\n * DevExtreme (esm/viz/axes/tick_generator.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\nvar convertDateUnitToMilliseconds = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].convertDateUnitToMilliseconds;\r\nvar dateToMilliseconds = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].dateToMilliseconds;\r\nvar math = Math;\r\nvar mathAbs = math.abs;\r\nvar mathFloor = math.floor;\r\nvar mathCeil = math.ceil;\r\nvar mathPow = math.pow;\r\nvar NUMBER_MULTIPLIERS = [1, 2, 2.5, 5];\r\nvar LOGARITHMIC_MULTIPLIERS = [1, 2, 3, 5];\r\nvar DATETIME_MULTIPLIERS = {\r\n    millisecond: [1, 2, 5, 10, 25, 50, 100, 250, 500],\r\n    second: [1, 2, 3, 5, 10, 15, 20, 30],\r\n    minute: [1, 2, 3, 5, 10, 15, 20, 30],\r\n    hour: [1, 2, 3, 4, 6, 8, 12],\r\n    day: [1, 2],\r\n    week: [1, 2],\r\n    month: [1, 2, 3, 6]\r\n};\r\nvar DATETIME_MULTIPLIERS_WITH_BIG_WEEKEND = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_4__[\"extend\"])({}, DATETIME_MULTIPLIERS, {\r\n    day: [1]\r\n});\r\nvar DATETIME_MINOR_MULTIPLIERS = {\r\n    millisecond: [1, 2, 5, 10, 25, 50, 100, 250, 500],\r\n    second: [1, 2, 3, 5, 10, 15, 20, 30],\r\n    minute: [1, 2, 3, 5, 10, 15, 20, 30],\r\n    hour: [1, 2, 3, 4, 6, 8, 12],\r\n    day: [1, 2, 3, 7, 14],\r\n    month: [1, 2, 3, 6]\r\n};\r\nvar MINOR_DELIMITERS = [2, 4, 5, 8, 10];\r\nvar VISIBILITY_DELIMITER = 3;\r\nvar MINUTE = 6e4;\r\n\r\nfunction dummyGenerator(options) {\r\n    return function(data, screenDelta, tickInterval, forceTickInterval) {\r\n        var count = mathFloor(screenDelta / options.axisDivisionFactor);\r\n        count = count < 1 ? 1 : count;\r\n        var interval = screenDelta / count;\r\n        return {\r\n            ticks: interval > 0 ? Array.apply(null, new Array(count + 1)).map((_, i) => interval * i) : [],\r\n            tickInterval: interval\r\n        }\r\n    }\r\n}\r\n\r\nfunction discreteGenerator(options) {\r\n    return function(data, screenDelta, tickInterval, forceTickInterval) {\r\n        var categories = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getCategoriesInfo\"])(data.categories, data.min, data.max).categories;\r\n        return {\r\n            ticks: categories,\r\n            tickInterval: mathCeil(categories.length * options.axisDivisionFactor / screenDelta)\r\n        }\r\n    }\r\n}\r\nvar getValue = value => value;\r\nvar getLogValue = (base, allowNegatives, linearThreshold) => value => Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getLogExt\"])(value, base, allowNegatives, linearThreshold);\r\nvar raiseTo = (base, allowNegatives, linearThreshold) => value => Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"raiseToExt\"])(value, base, allowNegatives, linearThreshold);\r\nvar mathRaiseTo = base => value => Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"raiseTo\"])(value, base);\r\nvar logAbsValue = base => value => 0 === value ? 0 : Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getLog\"])(mathAbs(value), base);\r\nvar correctValueByInterval = (post, round, getValue) => (value, interval) => Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(post(round(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(getValue(value) / interval)) * interval));\r\n\r\nfunction correctMinValueByEndOnTick(floorFunc, ceilFunc, resolveEndOnTick, endOnTick) {\r\n    if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(endOnTick)) {\r\n        return endOnTick ? floorFunc : ceilFunc\r\n    }\r\n    return function(value, interval, businessViewInfo, forceEndOnTick) {\r\n        var floorTickValue = floorFunc(value, interval);\r\n        if (value - floorTickValue === 0 || !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(businessViewInfo) || resolveEndOnTick(value, floorTickValue, interval, businessViewInfo) || forceEndOnTick) {\r\n            return floorTickValue\r\n        }\r\n        return ceilFunc(value, interval)\r\n    }\r\n}\r\n\r\nfunction resolveEndOnTick(curValue, tickValue, interval, businessViewInfo) {\r\n    var prevTickDataDiff = interval - mathAbs(tickValue - curValue);\r\n    var intervalCount = math.max(mathCeil(businessViewInfo.businessDelta / interval), 2);\r\n    var businessRatio = businessViewInfo.screenDelta / (intervalCount * interval);\r\n    var potentialTickScreenDiff = math.round(businessRatio * prevTickDataDiff);\r\n    var delimiterFactor = Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getLogExt\"])(businessRatio * interval / businessViewInfo.axisDivisionFactor, 2) + 1;\r\n    var delimiterMultiplier = (businessViewInfo.isSpacedMargin ? 2 : 1) * delimiterFactor;\r\n    var screenDelimiter = math.round(VISIBILITY_DELIMITER * delimiterMultiplier);\r\n    return businessViewInfo.businessDelta > businessViewInfo.interval && potentialTickScreenDiff >= screenDelimiter\r\n}\r\n\r\nfunction resolveEndOnTickLog(base) {\r\n    return function(curValue, tickValue, interval, businessViewInfo) {\r\n        return resolveEndOnTick(Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getLogExt\"])(curValue, base), Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getLogExt\"])(tickValue, base), interval, businessViewInfo)\r\n    }\r\n}\r\n\r\nfunction resolveEndOnTickDate(curValue, tickValue, interval, businessViewInfo) {\r\n    return resolveEndOnTick(curValue.valueOf(), tickValue.valueOf(), dateToMilliseconds(interval), businessViewInfo)\r\n}\r\n\r\nfunction getBusinessDelta(data, breaks) {\r\n    var spacing = 0;\r\n    if (breaks) {\r\n        spacing = breaks.reduce((prev, item) => prev + (item.to - item.from), 0)\r\n    }\r\n    return mathAbs(data.max - data.min - spacing)\r\n}\r\n\r\nfunction getBusinessDeltaLog(base, allowNegatives, linearThreshold) {\r\n    var getLog = getLogValue(base, allowNegatives, linearThreshold);\r\n    return function(data, breaks) {\r\n        var spacing = 0;\r\n        if (breaks) {\r\n            spacing = breaks.reduce((prev, item) => prev + mathAbs(getLog(item.to / item.from)), 0)\r\n        }\r\n        return mathCeil(mathAbs(getLog(data.max) - getLog(data.min)) - spacing)\r\n    }\r\n}\r\n\r\nfunction getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor, addTickCount) {\r\n    var count = screenDelta / axisDivisionFactor - (addTickCount || 0);\r\n    count = count < 1 ? 1 : count;\r\n    return businessDelta / count\r\n}\r\n\r\nfunction getMultiplierFactor(interval, factorDelta) {\r\n    return mathPow(10, mathFloor(Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getLogExt\"])(interval, 10)) + (factorDelta || 0))\r\n}\r\n\r\nfunction calculateTickInterval(businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, addTickCount, _, minTickInterval) {\r\n    var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor, addTickCount);\r\n    var result = 1;\r\n    var onlyIntegers = false === allowDecimals;\r\n    if (!forceTickInterval || !tickInterval) {\r\n        if (interval >= 1 || !onlyIntegers && interval > 0) {\r\n            result = adjustInterval(interval, multipliers, onlyIntegers)\r\n        }\r\n        if (!tickInterval || !forceTickInterval && tickInterval < result) {\r\n            tickInterval = result\r\n        }\r\n    }\r\n    if (!forceTickInterval && minTickInterval) {\r\n        minTickInterval = adjustInterval(minTickInterval, multipliers, onlyIntegers);\r\n        if (minTickInterval > tickInterval) {\r\n            tickInterval = minTickInterval\r\n        }\r\n    }\r\n    return tickInterval\r\n}\r\n\r\nfunction adjustInterval(interval, multipliers, onlyIntegers) {\r\n    var factor = getMultiplierFactor(interval, -1);\r\n    var result = 1;\r\n    multipliers = multipliers || NUMBER_MULTIPLIERS;\r\n    if (interval > 0) {\r\n        interval /= factor;\r\n        result = multipliers.concat(10 * multipliers[0]).map(m => 10 * m).reduce((r, m) => {\r\n            if (.1 === factor && onlyIntegers && 25 === m) {\r\n                return r\r\n            }\r\n            return r < interval ? m : r\r\n        }, 0);\r\n        result = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(result * factor, factor)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction calculateMinorTickInterval(businessDelta, screenDelta, tickInterval, axisDivisionFactor) {\r\n    var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor);\r\n    return tickInterval || MINOR_DELIMITERS.reduce((r, d) => {\r\n        var cur = businessDelta / d;\r\n        return cur >= interval ? cur : r\r\n    }, 0)\r\n}\r\n\r\nfunction getCalculateTickIntervalLog(skipCalculationLimits) {\r\n    return function(businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, _, __, minTickInterval) {\r\n        var interval = getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor);\r\n        var result = 0;\r\n        var adjustInterval = getAdjustIntervalLog(skipCalculationLimits);\r\n        if (!forceTickInterval || !tickInterval) {\r\n            if (interval > 0) {\r\n                result = adjustInterval(interval, multipliers)\r\n            }\r\n            if (!tickInterval || !forceTickInterval && tickInterval < result) {\r\n                tickInterval = result\r\n            }\r\n        }\r\n        if (!forceTickInterval && minTickInterval) {\r\n            minTickInterval = adjustInterval(minTickInterval, multipliers);\r\n            if (minTickInterval > tickInterval) {\r\n                tickInterval = minTickInterval\r\n            }\r\n        }\r\n        return tickInterval\r\n    }\r\n}\r\n\r\nfunction getAdjustIntervalLog(skipCalculationLimits) {\r\n    return function(interval, multipliers) {\r\n        var factor = getMultiplierFactor(interval);\r\n        multipliers = multipliers || LOGARITHMIC_MULTIPLIERS;\r\n        if (!skipCalculationLimits && factor < 1) {\r\n            factor = 1\r\n        }\r\n        return multipliers.concat(10 * multipliers[0]).reduce((r, m) => r < interval ? m * factor : r, 0)\r\n    }\r\n}\r\n\r\nfunction getDataTimeMultipliers(gapSize) {\r\n    if (gapSize && gapSize > 2) {\r\n        return DATETIME_MULTIPLIERS_WITH_BIG_WEEKEND\r\n    } else {\r\n        return DATETIME_MULTIPLIERS\r\n    }\r\n}\r\n\r\nfunction numbersReducer(interval, key) {\r\n    return function(r, m) {\r\n        if (!r && interval <= convertDateUnitToMilliseconds(key, m)) {\r\n            r = {};\r\n            r[key + \"s\"] = m\r\n        }\r\n        return r\r\n    }\r\n}\r\n\r\nfunction yearsReducer(interval, factor) {\r\n    return function(r, m) {\r\n        var years = factor * m;\r\n        if (!r && interval <= convertDateUnitToMilliseconds(\"year\", years) && 2.5 !== years) {\r\n            r = {\r\n                years: years\r\n            }\r\n        }\r\n        return r\r\n    }\r\n}\r\n\r\nfunction calculateTickIntervalDateTime(businessDelta, screenDelta, tickInterval, forceTickInterval, axisDivisionFactor, multipliers, allowDecimals, addTickCount, gapSize, minTickInterval) {\r\n    if (!forceTickInterval || !tickInterval) {\r\n        var result = adjustIntervalDateTime(getIntervalByFactor(businessDelta, screenDelta, axisDivisionFactor), multipliers, null, gapSize);\r\n        if (!tickInterval || !forceTickInterval && dateToMilliseconds(tickInterval) <= dateToMilliseconds(result)) {\r\n            tickInterval = result\r\n        }\r\n    }\r\n    if (!forceTickInterval && minTickInterval) {\r\n        minTickInterval = adjustIntervalDateTime(minTickInterval, multipliers, null, gapSize);\r\n        if (dateToMilliseconds(minTickInterval) > dateToMilliseconds(tickInterval)) {\r\n            tickInterval = minTickInterval\r\n        }\r\n    }\r\n    return tickInterval\r\n}\r\n\r\nfunction adjustIntervalDateTime(interval, multipliers, _, gapSize) {\r\n    var result;\r\n    multipliers = multipliers || getDataTimeMultipliers(gapSize);\r\n    for (var key in multipliers) {\r\n        result = multipliers[key].reduce(numbersReducer(interval, key), result);\r\n        if (result) {\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        for (var factor = 1;; factor *= 10) {\r\n            result = NUMBER_MULTIPLIERS.reduce(yearsReducer(interval, factor), result);\r\n            if (result) {\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction calculateMinorTickIntervalDateTime(businessDelta, screenDelta, tickInterval, axisDivisionFactor) {\r\n    return calculateTickIntervalDateTime(businessDelta, screenDelta, tickInterval, true, axisDivisionFactor, DATETIME_MINOR_MULTIPLIERS)\r\n}\r\n\r\nfunction getTickIntervalByCustomTicks(getValue, postProcess) {\r\n    return ticks => ticks ? postProcess(mathAbs(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(getValue(ticks[1]) - getValue(ticks[0])))) || void 0 : void 0\r\n}\r\n\r\nfunction addInterval(value, interval, isNegative) {\r\n    return _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addInterval(value, interval, isNegative)\r\n}\r\n\r\nfunction addIntervalLog(log, raise) {\r\n    return (value, interval, isNegative) => raise(addInterval(log(value), interval, isNegative))\r\n}\r\n\r\nfunction addIntervalDate(value, interval, isNegative) {\r\n    return addInterval(value, interval, isNegative)\r\n}\r\n\r\nfunction addIntervalWithBreaks(addInterval, breaks, correctValue) {\r\n    breaks = breaks.filter(b => !b.gapSize);\r\n    return function(value, interval, isNegative) {\r\n        var breakSize;\r\n        value = addInterval(value, interval, isNegative);\r\n        if (!breaks.every(item => {\r\n                if (value >= addInterval(item.from, interval) && addInterval(value, interval) < item.to) {\r\n                    breakSize = item.to - item.from - 2 * (addInterval(item.from, interval) - item.from)\r\n                }\r\n                return !breakSize\r\n            })) {\r\n            value = correctValue(addInterval(value, breakSize), interval)\r\n        }\r\n        return value\r\n    }\r\n}\r\n\r\nfunction calculateTicks(addInterval, correctMinValue, adjustInterval, resolveEndOnTick) {\r\n    return function(data, tickInterval, endOnTick, gaps, breaks, businessDelta, screenDelta, axisDivisionFactor, generateExtraTick) {\r\n        var correctTickValue = correctTickValueOnGapSize(addInterval, gaps);\r\n        var min = data.min;\r\n        var max = data.max;\r\n        var businessViewInfo = {\r\n            screenDelta: screenDelta,\r\n            businessDelta: businessDelta,\r\n            axisDivisionFactor: axisDivisionFactor,\r\n            isSpacedMargin: data.isSpacedMargin,\r\n            interval: tickInterval\r\n        };\r\n        var cur = correctMinValue(min, tickInterval, businessViewInfo);\r\n        var ticks = [];\r\n        if (null !== breaks && void 0 !== breaks && breaks.length) {\r\n            addInterval = addIntervalWithBreaks(addInterval, breaks, correctMinValue)\r\n        }\r\n        if (cur > max) {\r\n            cur = correctMinValue(min, adjustInterval(businessDelta / 2), businessViewInfo);\r\n            if (cur > max) {\r\n                endOnTick = true;\r\n                cur = correctMinValue(min, tickInterval, businessViewInfo, endOnTick)\r\n            }\r\n        }\r\n        cur = correctTickValue(cur);\r\n        var prev;\r\n        while (cur < max && cur !== prev || generateExtraTick && cur <= max) {\r\n            ticks.push(cur);\r\n            prev = cur;\r\n            cur = correctTickValue(addInterval(cur, tickInterval))\r\n        }\r\n        if (endOnTick || cur - max === 0 || !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(endOnTick) && resolveEndOnTick(max, cur, tickInterval, businessViewInfo)) {\r\n            ticks.push(cur)\r\n        }\r\n        return ticks\r\n    }\r\n}\r\n\r\nfunction calculateMinorTicks(updateTickInterval, addInterval, correctMinValue, correctTickValue, ceil) {\r\n    return function(min, max, majorTicks, minorTickInterval, tickInterval, breaks, maxCount) {\r\n        var factor = tickInterval / minorTickInterval;\r\n        var lastMajor = majorTicks[majorTicks.length - 1];\r\n        var firstMajor = majorTicks[0];\r\n        var tickBalance = maxCount - 1;\r\n        if (null !== breaks && void 0 !== breaks && breaks.length) {\r\n            addInterval = addIntervalWithBreaks(addInterval, breaks, correctMinValue)\r\n        }\r\n        minorTickInterval = updateTickInterval(minorTickInterval, firstMajor, firstMajor, factor);\r\n        if (0 === minorTickInterval) {\r\n            return []\r\n        }\r\n        var cur = correctTickValue(correctMinValue(min, tickInterval, min), minorTickInterval);\r\n        minorTickInterval = updateTickInterval(minorTickInterval, firstMajor, cur, factor);\r\n        var ticks = [];\r\n        while (cur < firstMajor && (!tickBalance || tickBalance > 0)) {\r\n            cur >= min && ticks.push(cur);\r\n            tickBalance--;\r\n            cur = addInterval(cur, minorTickInterval)\r\n        }\r\n        var middleTicks = majorTicks.reduce((r, tick) => {\r\n            tickBalance = maxCount - 1;\r\n            if (null === r.prevTick) {\r\n                r.prevTick = tick;\r\n                return r\r\n            }\r\n            minorTickInterval = updateTickInterval(minorTickInterval, tick, r.prevTick, factor);\r\n            var cur = correctTickValue(r.prevTick, minorTickInterval);\r\n            while (cur < tick && (!tickBalance || tickBalance > 0)) {\r\n                cur !== r.prevTick && r.minors.push(cur);\r\n                tickBalance--;\r\n                cur = addInterval(cur, minorTickInterval)\r\n            }\r\n            r.prevTick = tick;\r\n            return r\r\n        }, {\r\n            prevTick: null,\r\n            minors: []\r\n        });\r\n        ticks = ticks.concat(middleTicks.minors);\r\n        var maxValue = ceil(max, tickInterval, min);\r\n        minorTickInterval = updateTickInterval(minorTickInterval, maxValue, maxValue, factor);\r\n        cur = correctTickValue(lastMajor, minorTickInterval);\r\n        var prev;\r\n        while (cur < max && cur !== prev) {\r\n            ticks.push(cur);\r\n            prev = cur;\r\n            cur = addInterval(cur, minorTickInterval)\r\n        }\r\n        if (lastMajor - max !== 0 && cur - max === 0) {\r\n            ticks.push(cur)\r\n        }\r\n        return ticks\r\n    }\r\n}\r\n\r\nfunction filterTicks(ticks, breaks) {\r\n    if (breaks.length) {\r\n        var result = breaks.reduce((result, b) => {\r\n            var tmpTicks = [];\r\n            var i;\r\n            for (i = result[1]; i < ticks.length; i++) {\r\n                var tickValue = ticks[i];\r\n                if (tickValue < b.from) {\r\n                    tmpTicks.push(tickValue)\r\n                }\r\n                if (tickValue >= b.to) {\r\n                    break\r\n                }\r\n            }\r\n            return [result[0].concat(tmpTicks), i]\r\n        }, [\r\n            [], 0\r\n        ]);\r\n        return result[0].concat(ticks.slice(result[1]))\r\n    }\r\n    return ticks\r\n}\r\n\r\nfunction correctTickValueOnGapSize(addInterval, breaks) {\r\n    return function(value) {\r\n        var gapSize;\r\n        if (!breaks.every(item => {\r\n                if (value >= item.from && value < item.to) {\r\n                    gapSize = item.gapSize\r\n                }\r\n                return !gapSize\r\n            })) {\r\n            value = addInterval(value, gapSize)\r\n        }\r\n        return value\r\n    }\r\n}\r\n\r\nfunction generator(options, getBusinessDelta, calculateTickInterval, calculateMinorTickInterval, getMajorTickIntervalByCustomTicks, getMinorTickIntervalByCustomTicks, convertTickInterval, calculateTicks, calculateMinorTicks, processScaleBreaks) {\r\n    function correctUserTickInterval(tickInterval, businessDelta, limit) {\r\n        if (tickInterval && businessDelta / convertTickInterval(tickInterval) >= limit + 1) {\r\n            options.incidentOccurred(\"W2003\");\r\n            tickInterval = void 0\r\n        }\r\n        return tickInterval\r\n    }\r\n    return function(data, screenDelta, tickInterval, forceTickInterval, customTicks, minorTickInterval, minorTickCount, breaks) {\r\n        customTicks = customTicks || {};\r\n        var businessDelta = getBusinessDelta(data, breaks);\r\n        var result = function(customTicks) {\r\n            return {\r\n                tickInterval: getMajorTickIntervalByCustomTicks(customTicks.majors),\r\n                ticks: customTicks.majors || [],\r\n                minorTickInterval: getMinorTickIntervalByCustomTicks(customTicks.minors),\r\n                minorTicks: customTicks.minors || []\r\n            }\r\n        }(customTicks);\r\n        if (!isNaN(businessDelta)) {\r\n            if (0 === businessDelta && !customTicks.majors) {\r\n                result.ticks = [data.min]\r\n            } else {\r\n                result = function(ticks, data, businessDelta, screenDelta, tickInterval, forceTickInterval, customTicks, breaks) {\r\n                    if (customTicks.majors) {\r\n                        ticks.breaks = breaks;\r\n                        return ticks\r\n                    }\r\n                    var gaps = breaks.filter(b => b.gapSize);\r\n                    var majorTicks;\r\n                    tickInterval = options.skipCalculationLimits ? tickInterval : correctUserTickInterval(tickInterval, businessDelta, screenDelta);\r\n                    tickInterval = calculateTickInterval(businessDelta, screenDelta, tickInterval, forceTickInterval, options.axisDivisionFactor, options.numberMultipliers, options.allowDecimals, breaks.length, gaps[0] && gaps[0].gapSize.days, options.minTickInterval);\r\n                    if (!options.skipTickGeneration) {\r\n                        majorTicks = calculateTicks(data, tickInterval, options.endOnTick, gaps, breaks, businessDelta, screenDelta, options.axisDivisionFactor, options.generateExtraTick);\r\n                        breaks = processScaleBreaks(breaks, majorTicks, tickInterval);\r\n                        majorTicks = filterTicks(majorTicks, breaks);\r\n                        ticks.breaks = breaks;\r\n                        ticks.ticks = ticks.ticks.concat(majorTicks)\r\n                    }\r\n                    ticks.tickInterval = tickInterval;\r\n                    return ticks\r\n                }(result, data, businessDelta, screenDelta, tickInterval, forceTickInterval, customTicks, breaks || []);\r\n                if (!options.skipTickGeneration && businessDelta > 0) {\r\n                    result = function(ticks, data, businessDelta, screenDelta, minorTickInterval, minorTickCount, customTicks) {\r\n                        if (!options.calculateMinors) {\r\n                            return ticks\r\n                        }\r\n                        if (customTicks.minors) {\r\n                            return ticks\r\n                        }\r\n                        var minorBusinessDelta = convertTickInterval(ticks.tickInterval);\r\n                        var minorScreenDelta = screenDelta * minorBusinessDelta / businessDelta;\r\n                        var breaks = ticks.breaks;\r\n                        if (!minorTickInterval && minorTickCount) {\r\n                            minorTickInterval = getMinorTickIntervalByCustomTicks([minorBusinessDelta / (minorTickCount + 1), minorBusinessDelta / (minorTickCount + 1) * 2])\r\n                        } else {\r\n                            minorTickCount = void 0\r\n                        }\r\n                        minorTickInterval = correctUserTickInterval(minorTickInterval, minorBusinessDelta, minorScreenDelta);\r\n                        minorTickInterval = calculateMinorTickInterval(minorBusinessDelta, minorScreenDelta, minorTickInterval, options.minorAxisDivisionFactor);\r\n                        ticks.minorTicks = filterTicks(ticks.minorTicks.concat(calculateMinorTicks(data.min, data.max, ticks.ticks, minorTickInterval, ticks.tickInterval, breaks, minorTickCount)), breaks);\r\n                        ticks.minorTickInterval = minorTickInterval;\r\n                        return ticks\r\n                    }(result, data, businessDelta, screenDelta, minorTickInterval, minorTickCount, customTicks)\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n}\r\n\r\nfunction getBaseTick(breakValue, _ref, interval, getValue) {\r\n    var [tick, insideTick] = _ref;\r\n    if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(tick) || mathAbs(getValue(breakValue) - getValue(tick)) / interval > .25) {\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(insideTick) && mathAbs(getValue(insideTick) - getValue(tick)) / interval < 2) {\r\n            tick = insideTick\r\n        } else if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(tick)) {\r\n            tick = breakValue\r\n        }\r\n    }\r\n    return tick\r\n}\r\n\r\nfunction getScaleBreaksProcessor(convertTickInterval, getValue, addCorrection) {\r\n    return function(breaks, ticks, tickInterval) {\r\n        var interval = convertTickInterval(tickInterval);\r\n        var correction = .5 * interval;\r\n        return breaks.reduce((result, b) => {\r\n            var breakTicks = ticks.filter(tick => tick <= b.from);\r\n            var from = addCorrection(getBaseTick(b.from, [].concat(breakTicks[breakTicks.length - 1], ticks[breakTicks.length]), interval, getValue), correction);\r\n            breakTicks = ticks.filter(tick => tick >= b.to);\r\n            var to = addCorrection(getBaseTick(b.to, [].concat(breakTicks[0], ticks[ticks.length - breakTicks.length - 1]), interval, getValue), -correction);\r\n            if (getValue(to) - getValue(from) < interval && !b.gapSize) {\r\n                return result\r\n            }\r\n            if (b.gapSize) {\r\n                return result.concat([b])\r\n            }\r\n            return result.concat([{\r\n                from: from,\r\n                to: to,\r\n                cumulativeWidth: b.cumulativeWidth\r\n            }])\r\n        }, [])\r\n    }\r\n}\r\n\r\nfunction numericGenerator(options) {\r\n    var floor = correctValueByInterval(getValue, mathFloor, getValue);\r\n    var ceil = correctValueByInterval(getValue, mathCeil, getValue);\r\n    var calculateTickIntervalByCustomTicks = getTickIntervalByCustomTicks(getValue, getValue);\r\n    return generator(options, getBusinessDelta, calculateTickInterval, calculateMinorTickInterval, calculateTickIntervalByCustomTicks, calculateTickIntervalByCustomTicks, getValue, calculateTicks(addInterval, correctMinValueByEndOnTick(floor, ceil, resolveEndOnTick, options.endOnTick), adjustInterval, resolveEndOnTick), calculateMinorTicks(getValue, addInterval, floor, addInterval, getValue), getScaleBreaksProcessor(getValue, getValue, (value, correction) => value + correction))\r\n}\r\nvar correctValueByIntervalLog = (post, getRound, getValue) => (value, interval) => Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"sign\"])(value) * Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(post(getRound(value)(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"adjust\"])(getValue(value) / interval)) * interval));\r\n\r\nfunction logarithmicGenerator(options) {\r\n    var base = options.logBase;\r\n    var raise = raiseTo(base, options.allowNegatives, options.linearThreshold);\r\n    var log = getLogValue(base, options.allowNegatives, options.linearThreshold);\r\n    var absLog = logAbsValue(base);\r\n    var absRaise = mathRaiseTo(base);\r\n    var floor = correctValueByIntervalLog(absRaise, value => value < 0 ? mathCeil : mathFloor, absLog);\r\n    var ceil = correctValueByIntervalLog(absRaise, value => value < 0 ? mathFloor : mathCeil, absLog);\r\n    var ceilNumber = correctValueByInterval(getValue, mathCeil, getValue);\r\n    return generator(options, getBusinessDeltaLog(base, options.allowNegatives, options.linearThreshold), getCalculateTickIntervalLog(options.skipCalculationLimits), calculateMinorTickInterval, getTickIntervalByCustomTicks(log, getValue), getTickIntervalByCustomTicks(getValue, getValue), getValue, calculateTicks(addIntervalLog(log, raise), correctMinValueByEndOnTick(floor, ceil, resolveEndOnTickLog(base), options.endOnTick), getAdjustIntervalLog(options.skipCalculationLimits), resolveEndOnTickLog(base)), calculateMinorTicks((_, tick, prevTick, factor) => Math.max(Math.abs(tick), Math.abs(prevTick)) / factor, addInterval, floor, ceilNumber, ceil), getScaleBreaksProcessor(getValue, log, (value, correction) => raise(log(value) + correction)))\r\n}\r\n\r\nfunction dateGenerator(options) {\r\n    function floor(value, interval) {\r\n        var floorNumber = correctValueByInterval(getValue, mathFloor, getValue);\r\n        var intervalObject = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(interval) ? _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getDateIntervalByString(interval.toLowerCase()) : interval;\r\n        var divider = dateToMilliseconds(interval);\r\n        if (intervalObject.days % 7 === 0 || interval.quarters) {\r\n            intervalObject = adjustIntervalDateTime(divider)\r\n        }\r\n        var correctDateWithUnitBeginning = v => _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].correctDateWithUnitBeginning(v, intervalObject, null, options.firstDayOfWeek);\r\n        var floorAtStartDate = v => new Date(mathFloor((v.getTime() - v.getTimezoneOffset() * MINUTE) / divider) * divider + v.getTimezoneOffset() * MINUTE);\r\n        value = correctDateWithUnitBeginning(value);\r\n        if (\"years\" in intervalObject) {\r\n            value.setFullYear(floorNumber(value.getFullYear(), intervalObject.years))\r\n        } else if (\"quarters\" in intervalObject) {\r\n            value = correctDateWithUnitBeginning(floorAtStartDate(value))\r\n        } else if (\"months\" in intervalObject) {\r\n            value.setMonth(floorNumber(value.getMonth(), intervalObject.months))\r\n        } else if (\"weeks\" in intervalObject || \"days\" in intervalObject) {\r\n            value = correctDateWithUnitBeginning(floorAtStartDate(value))\r\n        } else if (\"hours\" in intervalObject) {\r\n            value.setHours(floorNumber(value.getHours(), intervalObject.hours))\r\n        } else if (\"minutes\" in intervalObject) {\r\n            value.setMinutes(floorNumber(value.getMinutes(), intervalObject.minutes))\r\n        } else if (\"seconds\" in intervalObject) {\r\n            value.setSeconds(floorNumber(value.getSeconds(), intervalObject.seconds))\r\n        } else if (\"milliseconds\" in intervalObject) {\r\n            value = floorAtStartDate(value)\r\n        }\r\n        return value\r\n    }\r\n    var calculateTickIntervalByCustomTicks = getTickIntervalByCustomTicks(getValue, _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].convertMillisecondsToDateUnits);\r\n    return generator(options, getBusinessDelta, calculateTickIntervalDateTime, calculateMinorTickIntervalDateTime, calculateTickIntervalByCustomTicks, calculateTickIntervalByCustomTicks, dateToMilliseconds, calculateTicks(addIntervalDate, correctMinValueByEndOnTick(floor, (function(value, interval) {\r\n        var newValue = floor(value, interval);\r\n        while (value - newValue > 0) {\r\n            newValue = addIntervalDate(newValue, interval)\r\n        }\r\n        return newValue\r\n    }), resolveEndOnTickDate, options.endOnTick), adjustIntervalDateTime, resolveEndOnTickDate), calculateMinorTicks(getValue, addIntervalDate, floor, addIntervalDate, getValue), getScaleBreaksProcessor(dateToMilliseconds, getValue, (value, correction) => new Date(value.getTime() + correction)))\r\n}\r\nvar tickGenerator = function(options) {\r\n    var result;\r\n    if (options.rangeIsEmpty) {\r\n        result = dummyGenerator(options)\r\n    } else if (\"discrete\" === options.axisType) {\r\n        result = discreteGenerator(options)\r\n    } else if (\"logarithmic\" === options.axisType) {\r\n        result = logarithmicGenerator(options)\r\n    } else if (\"datetime\" === options.dataType) {\r\n        result = dateGenerator(options)\r\n    } else {\r\n        result = numericGenerator(options)\r\n    }\r\n    return result\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/tick_generator.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/axes/xy_axes.js":
/*!*********************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/axes/xy_axes.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _translators_range__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../translators/range */ \"./node_modules/devextreme/esm/viz/translators/range.js\");\n/* harmony import */ var _format_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../format_helper */ \"./node_modules/devextreme/esm/format_helper.js\");\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _datetime_breaks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./datetime_breaks */ \"./node_modules/devextreme/esm/viz/axes/datetime_breaks.js\");\n/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/common */ \"./node_modules/devextreme/esm/core/utils/common.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _axes_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./axes_constants */ \"./node_modules/devextreme/esm/viz/axes/axes_constants.js\");\n/**\r\n * DevExtreme (esm/viz/axes/xy_axes.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar getNextDateUnit = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getNextDateUnit;\r\nvar correctDateWithUnitBeginning = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].correctDateWithUnitBeginning;\r\nvar _math = Math;\r\nvar _max = _math.max;\r\nvar TOP = _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].top;\r\nvar BOTTOM = _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].bottom;\r\nvar LEFT = _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].left;\r\nvar RIGHT = _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].right;\r\nvar CENTER = _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].center;\r\nvar SCALE_BREAK_OFFSET = 3;\r\nvar RANGE_RATIO = .3;\r\nvar WAVED_LINE_CENTER = 2;\r\nvar WAVED_LINE_TOP = 0;\r\nvar WAVED_LINE_BOTTOM = 4;\r\nvar WAVED_LINE_LENGTH = 24;\r\nvar TICKS_CORRECTIONS = {\r\n    left: -1,\r\n    top: -1,\r\n    right: 0,\r\n    bottom: 0,\r\n    center: -.5\r\n};\r\n\r\nfunction prepareDatesDifferences(datesDifferences, tickInterval) {\r\n    var dateUnitInterval;\r\n    var i;\r\n    if (\"week\" === tickInterval) {\r\n        tickInterval = \"day\"\r\n    }\r\n    if (\"quarter\" === tickInterval) {\r\n        tickInterval = \"month\"\r\n    }\r\n    if (datesDifferences[tickInterval]) {\r\n        for (i = 0; i < _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].dateUnitIntervals.length; i++) {\r\n            dateUnitInterval = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].dateUnitIntervals[i];\r\n            if (datesDifferences[dateUnitInterval]) {\r\n                datesDifferences[dateUnitInterval] = false;\r\n                datesDifferences.count--\r\n            }\r\n            if (dateUnitInterval === tickInterval) {\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction sortingBreaks(breaks) {\r\n    return breaks.sort((function(a, b) {\r\n        return a.from - b.from\r\n    }))\r\n}\r\n\r\nfunction getMarkerDates(min, max, markerInterval) {\r\n    var origMin = min;\r\n    var dates;\r\n    min = correctDateWithUnitBeginning(min, markerInterval);\r\n    max = correctDateWithUnitBeginning(max, markerInterval);\r\n    dates = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getSequenceByInterval(min, max, markerInterval);\r\n    if (dates.length && origMin > dates[0]) {\r\n        dates = dates.slice(1)\r\n    }\r\n    return dates\r\n}\r\n\r\nfunction getStripHorizontalAlignmentPosition(alignment) {\r\n    var position = \"start\";\r\n    if (\"center\" === alignment) {\r\n        position = \"center\"\r\n    }\r\n    if (\"right\" === alignment) {\r\n        position = \"end\"\r\n    }\r\n    return position\r\n}\r\n\r\nfunction getStripVerticalAlignmentPosition(alignment) {\r\n    var position = \"start\";\r\n    if (\"center\" === alignment) {\r\n        position = \"center\"\r\n    }\r\n    if (\"bottom\" === alignment) {\r\n        position = \"end\"\r\n    }\r\n    return position\r\n}\r\n\r\nfunction getMarkerInterval(tickInterval) {\r\n    var markerInterval = getNextDateUnit(tickInterval);\r\n    if (\"quarter\" === markerInterval) {\r\n        markerInterval = getNextDateUnit(markerInterval)\r\n    }\r\n    return markerInterval\r\n}\r\n\r\nfunction getMarkerFormat(curDate, prevDate, tickInterval, markerInterval) {\r\n    var format = markerInterval;\r\n    var datesDifferences = prevDate && _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDatesDifferences(prevDate, curDate);\r\n    if (prevDate && \"year\" !== tickInterval) {\r\n        prepareDatesDifferences(datesDifferences, tickInterval);\r\n        format = _format_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getDateFormatByDifferences(datesDifferences)\r\n    }\r\n    return format\r\n}\r\n\r\nfunction getMaxSide(act, boxes) {\r\n    return boxes.reduce((function(prevValue, box) {\r\n        return _max(prevValue, act(box))\r\n    }), 0)\r\n}\r\n\r\nfunction getDistanceByAngle(bBox, rotationAngle) {\r\n    rotationAngle = _math.abs(rotationAngle);\r\n    rotationAngle = rotationAngle % 180 >= 90 ? 90 - rotationAngle % 90 : rotationAngle % 90;\r\n    var a = rotationAngle * (_math.PI / 180);\r\n    if (a >= _math.atan(bBox.height / bBox.width)) {\r\n        return bBox.height / _math.abs(_math.sin(a))\r\n    } else {\r\n        return bBox.width\r\n    }\r\n}\r\n\r\nfunction getMaxConstantLinePadding(constantLines) {\r\n    return constantLines.reduce((function(padding, options) {\r\n        return _max(padding, options.paddingTopBottom)\r\n    }), 0)\r\n}\r\n\r\nfunction getConstantLineLabelMarginForVerticalAlignment(constantLines, alignment, labelHeight) {\r\n    return constantLines.some((function(options) {\r\n        return options.label.verticalAlignment === alignment\r\n    })) && labelHeight || 0\r\n}\r\n\r\nfunction getLeftMargin(bBox) {\r\n    return _math.abs(bBox.x) || 0\r\n}\r\n\r\nfunction getRightMargin(bBox) {\r\n    return _math.abs(bBox.width - _math.abs(bBox.x)) || 0\r\n}\r\n\r\nfunction generateRangesOnPoints(points, edgePoints, getRange) {\r\n    var i;\r\n    var length;\r\n    var maxRange = null;\r\n    var ranges = [];\r\n    var curValue;\r\n    var prevValue;\r\n    var curRange;\r\n    for (i = 1, length = points.length; i < length; i++) {\r\n        curValue = points[i];\r\n        prevValue = points[i - 1];\r\n        curRange = getRange(curValue, prevValue);\r\n        if (edgePoints.indexOf(curValue) >= 0) {\r\n            if (!maxRange || curRange > maxRange.length) {\r\n                maxRange = {\r\n                    start: curValue,\r\n                    end: prevValue,\r\n                    length: curRange\r\n                }\r\n            }\r\n        } else {\r\n            if (maxRange && curRange < maxRange.length) {\r\n                ranges.push(maxRange)\r\n            } else {\r\n                ranges.push({\r\n                    start: curValue,\r\n                    end: prevValue,\r\n                    length: curRange\r\n                })\r\n            }\r\n            maxRange = null\r\n        }\r\n    }\r\n    if (maxRange) {\r\n        ranges.push(maxRange)\r\n    }\r\n    return ranges\r\n}\r\n\r\nfunction generateAutoBreaks(_ref, series, _ref2) {\r\n    var {\r\n        logarithmBase: logarithmBase,\r\n        type: type,\r\n        maxAutoBreakCount: maxAutoBreakCount\r\n    } = _ref;\r\n    var {\r\n        minVisible: minVisible,\r\n        maxVisible: maxVisible\r\n    } = _ref2;\r\n    var breaks = [];\r\n    var getRange = \"logarithmic\" === type ? (min, max) => Object(_core_utils__WEBPACK_IMPORTED_MODULE_6__[\"getLog\"])(max / min, logarithmBase) : (min, max) => max - min;\r\n    var visibleRange = getRange(minVisible, maxVisible);\r\n    var points = series.reduce((result, s) => {\r\n        var points = s.getPointsInViewPort();\r\n        result[0] = result[0].concat(points[0]);\r\n        result[1] = result[1].concat(points[1]);\r\n        return result\r\n    }, [\r\n        [],\r\n        []\r\n    ]);\r\n    var sortedAllPoints = points[0].concat(points[1]).sort((a, b) => b - a);\r\n    var edgePoints = points[1].filter(p => points[0].indexOf(p) < 0);\r\n    var minDiff = RANGE_RATIO * visibleRange;\r\n    var ranges = generateRangesOnPoints(sortedAllPoints, edgePoints, getRange).sort((a, b) => b.length - a.length);\r\n    var epsilon = _math.min.apply(null, ranges.map(r => r.length)) / 1e3;\r\n    var _maxAutoBreakCount = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(maxAutoBreakCount) ? _math.min(maxAutoBreakCount, ranges.length) : ranges.length;\r\n    for (var i = 0; i < _maxAutoBreakCount; i++) {\r\n        if (ranges[i].length >= minDiff) {\r\n            if (visibleRange <= ranges[i].length) {\r\n                break\r\n            }\r\n            visibleRange -= ranges[i].length;\r\n            if (visibleRange > epsilon || visibleRange < -epsilon) {\r\n                breaks.push({\r\n                    from: ranges[i].start,\r\n                    to: ranges[i].end\r\n                });\r\n                minDiff = RANGE_RATIO * visibleRange\r\n            }\r\n        } else {\r\n            break\r\n        }\r\n    }\r\n    sortingBreaks(breaks);\r\n    return breaks\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    linear: {\r\n        _getStep: function(boxes, rotationAngle) {\r\n            var spacing = this._options.label.minSpacing;\r\n            var func = this._isHorizontal ? function(box) {\r\n                return box.width + spacing\r\n            } : function(box) {\r\n                return box.height\r\n            };\r\n            var maxLabelLength = getMaxSide(func, boxes);\r\n            if (rotationAngle) {\r\n                maxLabelLength = getDistanceByAngle({\r\n                    width: maxLabelLength,\r\n                    height: this._getMaxLabelHeight(boxes, 0)\r\n                }, rotationAngle)\r\n            }\r\n            return _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getTicksCountInRange(this._majorTicks, this._isHorizontal ? \"x\" : \"y\", maxLabelLength)\r\n        },\r\n        _getMaxLabelHeight: function(boxes, spacing) {\r\n            return getMaxSide((function(box) {\r\n                return box.height\r\n            }), boxes) + spacing\r\n        },\r\n        _validateOverlappingMode: function(mode, displayMode) {\r\n            if (this._isHorizontal && (\"rotate\" === displayMode || \"stagger\" === displayMode) || !this._isHorizontal) {\r\n                return _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].validateOverlappingMode(mode)\r\n            }\r\n            return mode\r\n        },\r\n        _validateDisplayMode: function(mode) {\r\n            return this._isHorizontal ? mode : \"standard\"\r\n        },\r\n        getMarkerTrackers: function() {\r\n            return this._markerTrackers\r\n        },\r\n        _getSharpParam: function(opposite) {\r\n            return this._isHorizontal ^ opposite ? \"h\" : \"v\"\r\n        },\r\n        _createAxisElement: function() {\r\n            return this._renderer.path([], \"line\")\r\n        },\r\n        _updateAxisElementPosition: function() {\r\n            var axisCoord = this._axisPosition;\r\n            var canvas = this._getCanvasStartEnd();\r\n            this._axisElement.attr({\r\n                points: this._isHorizontal ? [canvas.start, axisCoord, canvas.end, axisCoord] : [axisCoord, canvas.start, axisCoord, canvas.end]\r\n            })\r\n        },\r\n        _getTranslatedCoord: function(value, offset) {\r\n            return this._translator.translate(value, offset)\r\n        },\r\n        _initAxisPositions() {\r\n            if (this.customPositionIsAvailable()) {\r\n                this._customBoundaryPosition = this.getCustomBoundaryPosition()\r\n            }\r\n            if (!this.customPositionIsAvailable() || this.customPositionIsBoundary()) {\r\n                this._axisPosition = this.getPredefinedPosition(this.getResolvedBoundaryPosition())\r\n            } else {\r\n                this._axisPosition = this.getCustomPosition()\r\n            }\r\n        },\r\n        _getTickMarkPoints(coords, length, tickOptions) {\r\n            var isHorizontal = this._isHorizontal;\r\n            var tickOrientation = this._options.tickOrientation;\r\n            var labelPosition = this._options.label.position;\r\n            var tickStartCoord;\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(tickOrientation)) {\r\n                tickStartCoord = TICKS_CORRECTIONS[tickOrientation] * length\r\n            } else {\r\n                var shift = tickOptions.shift || 0;\r\n                if (!isHorizontal && labelPosition === LEFT || isHorizontal && labelPosition !== BOTTOM) {\r\n                    shift = -shift\r\n                }\r\n                tickStartCoord = shift + this.getTickStartPositionShift(length)\r\n            }\r\n            return [coords.x + (isHorizontal ? 0 : tickStartCoord), coords.y + (isHorizontal ? tickStartCoord : 0), coords.x + (isHorizontal ? 0 : tickStartCoord + length), coords.y + (isHorizontal ? tickStartCoord + length : 0)]\r\n        },\r\n        getTickStartPositionShift(length) {\r\n            var width = this._options.width;\r\n            var position = this.getResolvedBoundaryPosition();\r\n            return length % 2 === 1 ? width % 2 === 0 && (position === LEFT || position === TOP) || width % 2 === 1 && (position === RIGHT || position === BOTTOM) && !this.hasNonBoundaryPosition() ? Math.floor(-length / 2) : -Math.floor(length / 2) : -length / 2 + (width % 2 === 0 ? 0 : position === BOTTOM || position === RIGHT ? -1 : 1)\r\n        },\r\n        _getTitleCoords: function() {\r\n            var horizontal = this._isHorizontal;\r\n            var x = this._axisPosition;\r\n            var y = this._axisPosition;\r\n            var align = this._options.title.alignment;\r\n            var canvas = this._getCanvasStartEnd();\r\n            var fromStartToEnd = horizontal || this._options.position === LEFT;\r\n            var canvasStart = fromStartToEnd ? canvas.start : canvas.end;\r\n            var canvasEnd = fromStartToEnd ? canvas.end : canvas.start;\r\n            var coord = align === LEFT ? canvasStart : align === RIGHT ? canvasEnd : canvas.start + (canvas.end - canvas.start) / 2;\r\n            if (horizontal) {\r\n                x = coord\r\n            } else {\r\n                y = coord\r\n            }\r\n            return {\r\n                x: x,\r\n                y: y\r\n            }\r\n        },\r\n        _drawTitleText: function(group, coords) {\r\n            var options = this._options;\r\n            var titleOptions = options.title;\r\n            var attrs = {\r\n                opacity: titleOptions.opacity,\r\n                align: titleOptions.alignment,\r\n                class: titleOptions.cssClass\r\n            };\r\n            if (!titleOptions.text || !group) {\r\n                return\r\n            }\r\n            coords = coords || this._getTitleCoords();\r\n            if (!this._isHorizontal) {\r\n                attrs.rotate = options.position === LEFT ? 270 : 90\r\n            }\r\n            var text = this._renderer.text(titleOptions.text, coords.x, coords.y).css(Object(_core_utils__WEBPACK_IMPORTED_MODULE_6__[\"patchFontOptions\"])(titleOptions.font)).attr(attrs).append(group);\r\n            this._checkTitleOverflow(text);\r\n            return text\r\n        },\r\n        _updateTitleCoords: function() {\r\n            this._title && this._title.element.attr(this._getTitleCoords())\r\n        },\r\n        _drawTitle: function() {\r\n            var title = this._drawTitleText(this._axisTitleGroup);\r\n            if (title) {\r\n                this._title = {\r\n                    element: title\r\n                }\r\n            }\r\n        },\r\n        _measureTitle: function() {\r\n            if (this._title) {\r\n                if (this._title.bBox && !this._title.originalSize) {\r\n                    this._title.originalSize = this._title.bBox\r\n                }\r\n                this._title.bBox = this._title.element.getBBox()\r\n            }\r\n        },\r\n        _drawDateMarker: function(date, options, range) {\r\n            var markerOptions = this._options.marker;\r\n            var invert = this._translator.getBusinessRange().invert;\r\n            var textIndent = markerOptions.width + markerOptions.textLeftIndent;\r\n            var pathElement;\r\n            if (null === options.x) {\r\n                return\r\n            }\r\n            if (!options.withoutStick) {\r\n                pathElement = this._renderer.path([options.x, options.y, options.x, options.y + markerOptions.separatorHeight], \"line\").attr({\r\n                    \"stroke-width\": markerOptions.width,\r\n                    stroke: markerOptions.color,\r\n                    \"stroke-opacity\": markerOptions.opacity,\r\n                    sharp: \"h\"\r\n                }).append(this._axisElementsGroup)\r\n            }\r\n            var text = String(this.formatLabel(date, options.labelOptions, range));\r\n            return {\r\n                date: date,\r\n                x: options.x,\r\n                y: options.y,\r\n                cropped: options.withoutStick,\r\n                label: this._renderer.text(text, options.x, options.y).css(Object(_core_utils__WEBPACK_IMPORTED_MODULE_6__[\"patchFontOptions\"])(markerOptions.label.font)).append(this._axisElementsGroup),\r\n                line: pathElement,\r\n                getContentContainer() {\r\n                    return this.label\r\n                },\r\n                getEnd: function() {\r\n                    return this.x + (invert ? -1 : 1) * (textIndent + this.labelBBox.width)\r\n                },\r\n                setTitle: function() {\r\n                    this.title = text\r\n                },\r\n                hideLabel: function() {\r\n                    this.label.dispose();\r\n                    this.label = null;\r\n                    this.title = text\r\n                },\r\n                hide: function() {\r\n                    if (pathElement) {\r\n                        pathElement.dispose();\r\n                        pathElement = null\r\n                    }\r\n                    this.label.dispose();\r\n                    this.label = null;\r\n                    this.hidden = true\r\n                }\r\n            }\r\n        },\r\n        _drawDateMarkers: function() {\r\n            var that = this;\r\n            var options = that._options;\r\n            var translator = that._translator;\r\n            var viewport = that._getViewportRange();\r\n            var minBound = viewport.minVisible;\r\n            var dateMarkers = [];\r\n            var dateMarker;\r\n\r\n            function draw(markerDate, format, withoutStick) {\r\n                return that._drawDateMarker(markerDate, {\r\n                    x: translator.translate(markerDate),\r\n                    y: markersAreaTop,\r\n                    labelOptions: that._getLabelFormatOptions(format),\r\n                    withoutStick: withoutStick\r\n                }, viewport)\r\n            }\r\n            if (viewport.isEmpty() || !options.marker.visible || \"datetime\" !== options.argumentType || \"discrete\" === options.type || that._majorTicks.length <= 1) {\r\n                return []\r\n            }\r\n            var markersAreaTop = that._axisPosition + options.marker.topIndent;\r\n            var tickInterval = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDateUnitInterval(this._tickInterval);\r\n            var markerInterval = getMarkerInterval(tickInterval);\r\n            var markerDates = getMarkerDates(minBound, viewport.maxVisible, markerInterval);\r\n            if (markerDates.length > 1 || 1 === markerDates.length && minBound < markerDates[0]) {\r\n                dateMarkers = markerDates.reduce((function(markers, curDate, i, dates) {\r\n                    var marker = draw(curDate, getMarkerFormat(curDate, dates[i - 1] || minBound < curDate && minBound, tickInterval, markerInterval));\r\n                    marker && markers.push(marker);\r\n                    return markers\r\n                }), []);\r\n                if (minBound < markerDates[0]) {\r\n                    dateMarker = draw(minBound, getMarkerFormat(minBound, markerDates[0], tickInterval, markerInterval), true);\r\n                    dateMarker && dateMarkers.unshift(dateMarker)\r\n                }\r\n            }\r\n            return dateMarkers\r\n        },\r\n        _adjustDateMarkers: function(offset) {\r\n            offset = offset || 0;\r\n            var that = this;\r\n            var markerOptions = this._options.marker;\r\n            var textIndent = markerOptions.width + markerOptions.textLeftIndent;\r\n            var invert = this._translator.getBusinessRange().invert;\r\n            var canvas = that._getCanvasStartEnd();\r\n            var dateMarkers = this._dateMarkers;\r\n            if (!dateMarkers.length) {\r\n                return offset\r\n            }\r\n            if (dateMarkers[0].cropped) {\r\n                if (!this._checkMarkersPosition(invert, dateMarkers[1], dateMarkers[0])) {\r\n                    dateMarkers[0].hideLabel()\r\n                }\r\n            }\r\n            var prevDateMarker;\r\n            dateMarkers.forEach((function(marker, i, markers) {\r\n                if (marker.cropped) {\r\n                    return\r\n                }\r\n                if (invert ? marker.getEnd() < canvas.end : marker.getEnd() > canvas.end) {\r\n                    marker.hideLabel()\r\n                } else if (that._checkMarkersPosition(invert, marker, prevDateMarker)) {\r\n                    prevDateMarker = marker\r\n                } else {\r\n                    marker.hide()\r\n                }\r\n            }));\r\n            this._dateMarkers.forEach((function(marker) {\r\n                if (marker.label) {\r\n                    var labelBBox = marker.labelBBox;\r\n                    var dy = marker.y + markerOptions.textTopIndent - labelBBox.y;\r\n                    marker.label.attr({\r\n                        translateX: invert ? marker.x - textIndent - labelBBox.x - labelBBox.width : marker.x + textIndent - labelBBox.x,\r\n                        translateY: dy + offset\r\n                    })\r\n                }\r\n                if (marker.line) {\r\n                    marker.line.attr({\r\n                        translateY: offset\r\n                    })\r\n                }\r\n            }));\r\n            that._initializeMarkersTrackers(offset);\r\n            return offset + markerOptions.topIndent + markerOptions.separatorHeight\r\n        },\r\n        _checkMarkersPosition: function(invert, dateMarker, prevDateMarker) {\r\n            if (void 0 === prevDateMarker) {\r\n                return true\r\n            }\r\n            return invert ? dateMarker.x < prevDateMarker.getEnd() : dateMarker.x > prevDateMarker.getEnd()\r\n        },\r\n        _initializeMarkersTrackers: function(offset) {\r\n            var separatorHeight = this._options.marker.separatorHeight;\r\n            var renderer = this._renderer;\r\n            var businessRange = this._translator.getBusinessRange();\r\n            var canvas = this._getCanvasStartEnd();\r\n            var group = this._axisElementsGroup;\r\n            this._markerTrackers = this._dateMarkers.filter((function(marker) {\r\n                return !marker.hidden\r\n            })).map((function(marker, i, markers) {\r\n                var nextMarker = markers[i + 1] || {\r\n                    x: canvas.end,\r\n                    date: businessRange.max\r\n                };\r\n                var x = marker.x;\r\n                var y = marker.y + offset;\r\n                var markerTracker = renderer.path([x, y, x, y + separatorHeight, nextMarker.x, y + separatorHeight, nextMarker.x, y, x, y], \"area\").attr({\r\n                    \"stroke-width\": 1,\r\n                    stroke: \"grey\",\r\n                    fill: \"grey\",\r\n                    opacity: 1e-4\r\n                }).append(group);\r\n                markerTracker.data(\"range\", {\r\n                    startValue: marker.date,\r\n                    endValue: nextMarker.date\r\n                });\r\n                if (marker.title) {\r\n                    markerTracker.setTitle(marker.title)\r\n                }\r\n                return markerTracker\r\n            }))\r\n        },\r\n        _getLabelFormatOptions: function(formatString) {\r\n            var markerLabelOptions = this._markerLabelOptions;\r\n            if (!markerLabelOptions) {\r\n                this._markerLabelOptions = markerLabelOptions = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_3__[\"extend\"])(true, {}, this._options.marker.label)\r\n            }\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(this._options.marker.label.format)) {\r\n                markerLabelOptions.format = formatString\r\n            }\r\n            return markerLabelOptions\r\n        },\r\n        _adjustConstantLineLabels: function(constantLines) {\r\n            var that = this;\r\n            var axisPosition = that._options.position;\r\n            var canvas = that.getCanvas();\r\n            var canvasLeft = canvas.left;\r\n            var canvasRight = canvas.width - canvas.right;\r\n            var canvasTop = canvas.top;\r\n            var canvasBottom = canvas.height - canvas.bottom;\r\n            var verticalCenter = canvasTop + (canvasBottom - canvasTop) / 2;\r\n            var horizontalCenter = canvasLeft + (canvasRight - canvasLeft) / 2;\r\n            var maxLabel = 0;\r\n            constantLines.forEach((function(item) {\r\n                var isHorizontal = that._isHorizontal;\r\n                var linesOptions = item.options;\r\n                var paddingTopBottom = linesOptions.paddingTopBottom;\r\n                var paddingLeftRight = linesOptions.paddingLeftRight;\r\n                var labelOptions = linesOptions.label;\r\n                var labelVerticalAlignment = labelOptions.verticalAlignment;\r\n                var labelHorizontalAlignment = labelOptions.horizontalAlignment;\r\n                var labelIsInside = \"inside\" === labelOptions.position;\r\n                var label = item.label;\r\n                var box = item.labelBBox;\r\n                var translateX;\r\n                var translateY;\r\n                if (null === label || box.isEmpty) {\r\n                    return\r\n                }\r\n                if (isHorizontal) {\r\n                    if (labelIsInside) {\r\n                        if (labelHorizontalAlignment === LEFT) {\r\n                            translateX = item.coord - paddingLeftRight - box.x - box.width\r\n                        } else {\r\n                            translateX = item.coord + paddingLeftRight - box.x\r\n                        }\r\n                        switch (labelVerticalAlignment) {\r\n                            case CENTER:\r\n                                translateY = verticalCenter - box.y - box.height / 2;\r\n                                break;\r\n                            case BOTTOM:\r\n                                translateY = canvasBottom - paddingTopBottom - box.y - box.height;\r\n                                break;\r\n                            default:\r\n                                translateY = canvasTop + paddingTopBottom - box.y\r\n                        }\r\n                    } else {\r\n                        if (axisPosition === labelVerticalAlignment) {\r\n                            maxLabel = _max(maxLabel, box.height + paddingTopBottom)\r\n                        }\r\n                        translateX = item.coord - box.x - box.width / 2;\r\n                        if (labelVerticalAlignment === BOTTOM) {\r\n                            translateY = canvasBottom + paddingTopBottom - box.y\r\n                        } else {\r\n                            translateY = canvasTop - paddingTopBottom - box.y - box.height\r\n                        }\r\n                    }\r\n                } else if (labelIsInside) {\r\n                    if (labelVerticalAlignment === BOTTOM) {\r\n                        translateY = item.coord + paddingTopBottom - box.y\r\n                    } else {\r\n                        translateY = item.coord - paddingTopBottom - box.y - box.height\r\n                    }\r\n                    switch (labelHorizontalAlignment) {\r\n                        case CENTER:\r\n                            translateX = horizontalCenter - box.x - box.width / 2;\r\n                            break;\r\n                        case RIGHT:\r\n                            translateX = canvasRight - paddingLeftRight - box.x - box.width;\r\n                            break;\r\n                        default:\r\n                            translateX = canvasLeft + paddingLeftRight - box.x\r\n                    }\r\n                } else {\r\n                    if (axisPosition === labelHorizontalAlignment) {\r\n                        maxLabel = _max(maxLabel, box.width + paddingLeftRight)\r\n                    }\r\n                    translateY = item.coord - box.y - box.height / 2;\r\n                    if (labelHorizontalAlignment === RIGHT) {\r\n                        translateX = canvasRight + paddingLeftRight - box.x\r\n                    } else {\r\n                        translateX = canvasLeft - paddingLeftRight - box.x - box.width\r\n                    }\r\n                }\r\n                label.attr({\r\n                    translateX: translateX,\r\n                    translateY: translateY\r\n                })\r\n            }));\r\n            return maxLabel\r\n        },\r\n        _drawConstantLinesForEstimating: function(constantLines) {\r\n            var that = this;\r\n            var renderer = this._renderer;\r\n            var group = renderer.g();\r\n            constantLines.forEach((function(options) {\r\n                that._drawConstantLineLabelText(options.label.text, 0, 0, options.label, group).attr({\r\n                    align: \"center\"\r\n                })\r\n            }));\r\n            return group.append(renderer.root)\r\n        },\r\n        _estimateLabelHeight: function(bBox, labelOptions) {\r\n            var height = bBox.height;\r\n            var drawingType = labelOptions.drawingType;\r\n            if (\"stagger\" === this._validateDisplayMode(drawingType) || \"stagger\" === this._validateOverlappingMode(labelOptions.overlappingBehavior, drawingType)) {\r\n                height = 2 * height + labelOptions.staggeringSpacing\r\n            }\r\n            if (\"rotate\" === this._validateDisplayMode(drawingType) || \"rotate\" === this._validateOverlappingMode(labelOptions.overlappingBehavior, drawingType)) {\r\n                var sinCos = Object(_core_utils__WEBPACK_IMPORTED_MODULE_6__[\"getCosAndSin\"])(labelOptions.rotationAngle);\r\n                height = height * sinCos.cos + bBox.width * sinCos.sin\r\n            }\r\n            return height && (height + labelOptions.indentFromAxis || 0) || 0\r\n        },\r\n        estimateMargins: function(canvas) {\r\n            this.updateCanvas(canvas);\r\n            var range = this._getViewportRange();\r\n            var ticksData = this._createTicksAndLabelFormat(range);\r\n            var ticks = ticksData.ticks;\r\n            var tickInterval = ticksData.tickInterval;\r\n            var options = this._options;\r\n            var constantLineOptions = this._outsideConstantLines.filter(l => l.labelOptions.visible).map(l => l.options);\r\n            var rootElement = this._renderer.root;\r\n            var labelIsVisible = options.label.visible && !range.isEmpty() && ticks.length;\r\n            var labelValue = labelIsVisible && this.formatLabel(ticks[ticks.length - 1], options.label, void 0, void 0, tickInterval, ticks);\r\n            var labelElement = labelIsVisible && this._renderer.text(labelValue, 0, 0).css(this._textFontStyles).attr(this._textOptions).append(rootElement);\r\n            var titleElement = this._drawTitleText(rootElement, {\r\n                x: 0,\r\n                y: 0\r\n            });\r\n            var constantLinesLabelsElement = this._drawConstantLinesForEstimating(constantLineOptions);\r\n            var labelBox = !options.label.template && labelElement && labelElement.getBBox() || {\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0\r\n            };\r\n            var titleBox = titleElement && titleElement.getBBox() || {\r\n                x: 0,\r\n                y: 0,\r\n                width: 0,\r\n                height: 0\r\n            };\r\n            var constantLinesBox = constantLinesLabelsElement.getBBox();\r\n            var titleHeight = titleBox.height ? titleBox.height + options.title.margin : 0;\r\n            var labelHeight = this._estimateLabelHeight(labelBox, options.label);\r\n            var constantLinesHeight = constantLinesBox.height ? constantLinesBox.height + getMaxConstantLinePadding(constantLineOptions) : 0;\r\n            var height = labelHeight + titleHeight;\r\n            var margins = {\r\n                left: _max(getLeftMargin(labelBox), getLeftMargin(constantLinesBox)),\r\n                right: _max(getRightMargin(labelBox), getRightMargin(constantLinesBox)),\r\n                top: (\"top\" === options.position ? height : 0) + getConstantLineLabelMarginForVerticalAlignment(constantLineOptions, \"top\", constantLinesHeight),\r\n                bottom: (\"top\" !== options.position ? height : 0) + getConstantLineLabelMarginForVerticalAlignment(constantLineOptions, \"bottom\", constantLinesHeight)\r\n            };\r\n            labelElement && labelElement.remove();\r\n            titleElement && titleElement.remove();\r\n            constantLinesLabelsElement && constantLinesLabelsElement.remove();\r\n            return margins\r\n        },\r\n        _checkAlignmentConstantLineLabels: function(labelOptions) {\r\n            var position = labelOptions.position;\r\n            var verticalAlignment = (labelOptions.verticalAlignment || \"\").toLowerCase();\r\n            var horizontalAlignment = (labelOptions.horizontalAlignment || \"\").toLowerCase();\r\n            if (this._isHorizontal) {\r\n                if (\"outside\" === position) {\r\n                    verticalAlignment = verticalAlignment === BOTTOM ? BOTTOM : TOP;\r\n                    horizontalAlignment = CENTER\r\n                } else {\r\n                    verticalAlignment = verticalAlignment === CENTER ? CENTER : verticalAlignment === BOTTOM ? BOTTOM : TOP;\r\n                    horizontalAlignment = horizontalAlignment === LEFT ? LEFT : RIGHT\r\n                }\r\n            } else if (\"outside\" === position) {\r\n                verticalAlignment = CENTER;\r\n                horizontalAlignment = horizontalAlignment === LEFT ? LEFT : RIGHT\r\n            } else {\r\n                verticalAlignment = verticalAlignment === BOTTOM ? BOTTOM : TOP;\r\n                horizontalAlignment = horizontalAlignment === RIGHT ? RIGHT : horizontalAlignment === CENTER ? CENTER : LEFT\r\n            }\r\n            labelOptions.verticalAlignment = verticalAlignment;\r\n            labelOptions.horizontalAlignment = horizontalAlignment\r\n        },\r\n        _getConstantLineLabelsCoords: function(value, lineLabelOptions) {\r\n            var x = value;\r\n            var y = value;\r\n            if (this._isHorizontal) {\r\n                y = this._orthogonalPositions[\"top\" === lineLabelOptions.verticalAlignment ? \"start\" : \"end\"]\r\n            } else {\r\n                x = this._orthogonalPositions[\"right\" === lineLabelOptions.horizontalAlignment ? \"end\" : \"start\"]\r\n            }\r\n            return {\r\n                x: x,\r\n                y: y\r\n            }\r\n        },\r\n        _getAdjustedStripLabelCoords: function(strip) {\r\n            var stripOptions = strip.options;\r\n            var paddingTopBottom = stripOptions.paddingTopBottom;\r\n            var paddingLeftRight = stripOptions.paddingLeftRight;\r\n            var horizontalAlignment = stripOptions.label.horizontalAlignment;\r\n            var verticalAlignment = stripOptions.label.verticalAlignment;\r\n            var box = strip.labelBBox;\r\n            var labelHeight = box.height;\r\n            var labelWidth = box.width;\r\n            var labelCoords = strip.labelCoords;\r\n            var y = labelCoords.y - box.y;\r\n            var x = labelCoords.x - box.x;\r\n            if (verticalAlignment === TOP) {\r\n                y += paddingTopBottom\r\n            } else if (verticalAlignment === CENTER) {\r\n                y -= labelHeight / 2\r\n            } else if (verticalAlignment === BOTTOM) {\r\n                y -= paddingTopBottom + labelHeight\r\n            }\r\n            if (horizontalAlignment === LEFT) {\r\n                x += paddingLeftRight\r\n            } else if (horizontalAlignment === CENTER) {\r\n                x -= labelWidth / 2\r\n            } else if (horizontalAlignment === RIGHT) {\r\n                x -= paddingLeftRight + labelWidth\r\n            }\r\n            return {\r\n                translateX: x,\r\n                translateY: y\r\n            }\r\n        },\r\n        _adjustTitle: function(offset) {\r\n            offset = offset || 0;\r\n            if (!this._title) {\r\n                return\r\n            }\r\n            var options = this._options;\r\n            var position = options.position;\r\n            var margin = options.title.margin;\r\n            var title = this._title;\r\n            var boxTitle = title.bBox;\r\n            var x = boxTitle.x;\r\n            var y = boxTitle.y;\r\n            var width = boxTitle.width;\r\n            var height = boxTitle.height;\r\n            var axisPosition = this._axisPosition;\r\n            var loCoord = axisPosition - margin - offset;\r\n            var hiCoord = axisPosition + margin + offset;\r\n            var params = {};\r\n            if (this._isHorizontal) {\r\n                if (position === TOP) {\r\n                    params.translateY = loCoord - (y + height)\r\n                } else {\r\n                    params.translateY = hiCoord - y\r\n                }\r\n            } else if (position === LEFT) {\r\n                params.translateX = loCoord - (x + width)\r\n            } else {\r\n                params.translateX = hiCoord - x\r\n            }\r\n            title.element.attr(params)\r\n        },\r\n        _checkTitleOverflow: function(titleElement) {\r\n            if (!this._title && !titleElement) {\r\n                return\r\n            }\r\n            var canvasLength = this._getScreenDelta();\r\n            var title = titleElement ? {\r\n                bBox: titleElement.getBBox(),\r\n                element: titleElement\r\n            } : this._title;\r\n            var titleOptions = this._options.title;\r\n            var boxTitle = title.bBox;\r\n            if ((this._isHorizontal ? boxTitle.width : boxTitle.height) > canvasLength) {\r\n                title.element.setMaxSize(canvasLength, void 0, {\r\n                    wordWrap: titleOptions.wordWrap || \"none\",\r\n                    textOverflow: titleOptions.textOverflow || \"ellipsis\"\r\n                });\r\n                this._wrapped = titleOptions.wordWrap && \"none\" !== titleOptions.wordWrap\r\n            } else {\r\n                var moreThanOriginalSize = title.originalSize && canvasLength > (this._isHorizontal ? title.originalSize.width : title.originalSize.height);\r\n                !this._wrapped && moreThanOriginalSize && title.element.restoreText()\r\n            }\r\n        },\r\n        coordsIn: function(x, y) {\r\n            var canvas = this.getCanvas();\r\n            var isHorizontal = this._options.isHorizontal;\r\n            var position = this._options.position;\r\n            var coord = isHorizontal ? y : x;\r\n            if (isHorizontal && (x < canvas.left || x > canvas.width - canvas.right) || !isHorizontal && (y < canvas.top || y > canvas.height - canvas.bottom)) {\r\n                return false\r\n            }\r\n            if (isHorizontal && position === _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].top || !isHorizontal && position === _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].left) {\r\n                return coord < canvas[position]\r\n            }\r\n            return coord > canvas[isHorizontal ? \"height\" : \"width\"] - canvas[position]\r\n        },\r\n        _boundaryTicksVisibility: {\r\n            min: true,\r\n            max: true\r\n        },\r\n        adjust() {\r\n            var seriesData = this._seriesData;\r\n            var viewport = this._series.filter(s => s.isVisible()).reduce((range, s) => {\r\n                var seriesRange = s.getViewport();\r\n                range.min = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(seriesRange.min) ? range.min < seriesRange.min ? range.min : seriesRange.min : range.min;\r\n                range.max = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(seriesRange.max) ? range.max > seriesRange.max ? range.max : seriesRange.max : range.max;\r\n                if (s.showZero) {\r\n                    range = new _translators_range__WEBPACK_IMPORTED_MODULE_0__[\"Range\"](range);\r\n                    range.correctValueZeroLevel()\r\n                }\r\n                return range\r\n            }, {});\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(viewport.min) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(viewport.max)) {\r\n                seriesData.minVisible = viewport.min;\r\n                seriesData.maxVisible = viewport.max\r\n            }\r\n            seriesData.userBreaks = this._getScaleBreaks(this._options, {\r\n                minVisible: seriesData.minVisible,\r\n                maxVisible: seriesData.maxVisible\r\n            }, this._series, this.isArgumentAxis);\r\n            this._translator.updateBusinessRange(this._getViewportRange())\r\n        },\r\n        hasWrap() {\r\n            return this._wrapped\r\n        },\r\n        getAxisPosition() {\r\n            return this._axisPosition\r\n        },\r\n        _getStick: function() {\r\n            return !this._options.valueMarginsEnabled\r\n        },\r\n        _getStripLabelCoords: function(from, to, stripLabelOptions) {\r\n            var orthogonalPositions = this._orthogonalPositions;\r\n            var isHorizontal = this._isHorizontal;\r\n            var horizontalAlignment = stripLabelOptions.horizontalAlignment;\r\n            var verticalAlignment = stripLabelOptions.verticalAlignment;\r\n            var x;\r\n            var y;\r\n            if (isHorizontal) {\r\n                if (horizontalAlignment === CENTER) {\r\n                    x = from + (to - from) / 2\r\n                } else if (horizontalAlignment === LEFT) {\r\n                    x = from\r\n                } else if (horizontalAlignment === RIGHT) {\r\n                    x = to\r\n                }\r\n                y = orthogonalPositions[getStripVerticalAlignmentPosition(verticalAlignment)]\r\n            } else {\r\n                x = orthogonalPositions[getStripHorizontalAlignmentPosition(horizontalAlignment)];\r\n                if (verticalAlignment === TOP) {\r\n                    y = from\r\n                } else if (verticalAlignment === CENTER) {\r\n                    y = to + (from - to) / 2\r\n                } else if (verticalAlignment === BOTTOM) {\r\n                    y = to\r\n                }\r\n            }\r\n            return {\r\n                x: x,\r\n                y: y\r\n            }\r\n        },\r\n        _getTranslatedValue: function(value, offset) {\r\n            var pos1 = this._translator.translate(value, offset, \"semidiscrete\" === this._options.type && this._options.tickInterval);\r\n            var pos2 = this._axisPosition;\r\n            var isHorizontal = this._isHorizontal;\r\n            return {\r\n                x: isHorizontal ? pos1 : pos2,\r\n                y: isHorizontal ? pos2 : pos1\r\n            }\r\n        },\r\n        areCoordsOutsideAxis: function(coords) {\r\n            var coord = this._isHorizontal ? coords.x : coords.y;\r\n            var visibleArea = this.getVisibleArea();\r\n            if (coord < visibleArea[0] || coord > visibleArea[1]) {\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        _getSkippedCategory: function(ticks) {\r\n            var skippedCategory;\r\n            if (this._options.type === _axes_constants__WEBPACK_IMPORTED_MODULE_8__[\"default\"].discrete && this._tickOffset && 0 !== ticks.length) {\r\n                skippedCategory = ticks[ticks.length - 1]\r\n            }\r\n            return skippedCategory\r\n        },\r\n        _filterBreaks: function(breaks, viewport, breakStyle) {\r\n            var minVisible = viewport.minVisible;\r\n            var maxVisible = viewport.maxVisible;\r\n            var breakSize = breakStyle ? breakStyle.width : 0;\r\n            return breaks.reduce((function(result, currentBreak) {\r\n                var from = currentBreak.from;\r\n                var to = currentBreak.to;\r\n                var lastResult = result[result.length - 1];\r\n                var newBreak;\r\n                if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(from) || !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(to)) {\r\n                    return result\r\n                }\r\n                if (from > to) {\r\n                    to = [from, from = to][0]\r\n                }\r\n                if (result.length && from < lastResult.to) {\r\n                    if (to > lastResult.to) {\r\n                        lastResult.to = to > maxVisible ? maxVisible : to;\r\n                        if (lastResult.gapSize) {\r\n                            lastResult.gapSize = void 0;\r\n                            lastResult.cumulativeWidth += breakSize\r\n                        }\r\n                    }\r\n                } else if (from >= minVisible && from < maxVisible || to <= maxVisible && to > minVisible) {\r\n                    from = from >= minVisible ? from : minVisible;\r\n                    to = to <= maxVisible ? to : maxVisible;\r\n                    if (to - from < maxVisible - minVisible) {\r\n                        var _lastResult$cumulativ;\r\n                        newBreak = {\r\n                            from: from,\r\n                            to: to,\r\n                            cumulativeWidth: (null !== (_lastResult$cumulativ = null === lastResult || void 0 === lastResult ? void 0 : lastResult.cumulativeWidth) && void 0 !== _lastResult$cumulativ ? _lastResult$cumulativ : 0) + breakSize\r\n                        };\r\n                        if (currentBreak.gapSize) {\r\n                            var _lastResult$cumulativ2;\r\n                            newBreak.gapSize = _core_utils_date__WEBPACK_IMPORTED_MODULE_2__[\"default\"].convertMillisecondsToDateUnits(to - from);\r\n                            newBreak.cumulativeWidth = null !== (_lastResult$cumulativ2 = null === lastResult || void 0 === lastResult ? void 0 : lastResult.cumulativeWidth) && void 0 !== _lastResult$cumulativ2 ? _lastResult$cumulativ2 : 0\r\n                        }\r\n                        result.push(newBreak)\r\n                    }\r\n                }\r\n                return result\r\n            }), [])\r\n        },\r\n        _getScaleBreaks: function(axisOptions, viewport, series, isArgumentAxis) {\r\n            var that = this;\r\n            var breaks = (axisOptions.breaks || []).map((function(b) {\r\n                return {\r\n                    from: that.parser(b.startValue),\r\n                    to: that.parser(b.endValue)\r\n                }\r\n            }));\r\n            if (\"discrete\" !== axisOptions.type && \"datetime\" === axisOptions.dataType && axisOptions.workdaysOnly) {\r\n                breaks = breaks.concat(Object(_datetime_breaks__WEBPACK_IMPORTED_MODULE_4__[\"generateDateBreaks\"])(viewport.minVisible, viewport.maxVisible, axisOptions.workWeek, axisOptions.singleWorkdays, axisOptions.holidays))\r\n            }\r\n            if (!isArgumentAxis && \"discrete\" !== axisOptions.type && \"datetime\" !== axisOptions.dataType && axisOptions.autoBreaksEnabled && 0 !== axisOptions.maxAutoBreakCount) {\r\n                breaks = breaks.concat(generateAutoBreaks(axisOptions, series, viewport))\r\n            }\r\n            return sortingBreaks(breaks)\r\n        },\r\n        _drawBreak: function(translatedEnd, positionFrom, positionTo, width, options, group) {\r\n            var breakStart = translatedEnd - (!this._translator.isInverted() ? width + 1 : 0);\r\n            var attr = {\r\n                \"stroke-width\": 1,\r\n                stroke: options.borderColor,\r\n                sharp: !options.isWaved ? options.isHorizontal ? \"h\" : \"v\" : void 0\r\n            };\r\n            var spaceAttr = {\r\n                stroke: options.color,\r\n                \"stroke-width\": width\r\n            };\r\n            var getPoints = this._isHorizontal ? rotateLine : function(p) {\r\n                return p\r\n            };\r\n            var drawer = getLineDrawer(this._renderer, group, getPoints, positionFrom, breakStart, positionTo, options.isWaved);\r\n            drawer(width / 2, spaceAttr);\r\n            drawer(0, attr);\r\n            drawer(width, attr)\r\n        },\r\n        _createBreakClipRect: function(from, to) {\r\n            var canvas = this._canvas;\r\n            var clipWidth = to - from;\r\n            var clipRect;\r\n            if (this._isHorizontal) {\r\n                clipRect = this._renderer.clipRect(canvas.left, from, canvas.width, clipWidth)\r\n            } else {\r\n                clipRect = this._renderer.clipRect(from, canvas.top, clipWidth, canvas.height)\r\n            }\r\n            this._breaksElements = this._breaksElements || [];\r\n            this._breaksElements.push(clipRect);\r\n            return clipRect.id\r\n        },\r\n        _createBreaksGroup: function(clipFrom, clipTo) {\r\n            var group = this._renderer.g().attr({\r\n                class: this._axisCssPrefix + \"breaks\",\r\n                \"clip-path\": this._createBreakClipRect(clipFrom, clipTo)\r\n            }).append(this._scaleBreaksGroup);\r\n            this._breaksElements = this._breaksElements || [];\r\n            this._breaksElements.push(group);\r\n            return group\r\n        },\r\n        _disposeBreaksGroup: function() {\r\n            (this._breaksElements || []).forEach((function(clipRect) {\r\n                clipRect.dispose()\r\n            }));\r\n            this._breaksElements = null\r\n        },\r\n        drawScaleBreaks: function(customCanvas) {\r\n            var that = this;\r\n            var options = that._options;\r\n            var breakStyle = options.breakStyle;\r\n            var position = options.position;\r\n            var positionFrom;\r\n            var positionTo;\r\n            var breaks = that._translator.getBusinessRange().breaks || [];\r\n            var additionGroup;\r\n            var additionBreakFrom;\r\n            var additionBreakTo;\r\n            that._disposeBreaksGroup();\r\n            if (!(breaks && breaks.length)) {\r\n                return\r\n            }\r\n            var breakOptions = {\r\n                color: that._options.containerColor,\r\n                borderColor: breakStyle.color,\r\n                isHorizontal: that._isHorizontal,\r\n                isWaved: \"straight\" !== breakStyle.line.toLowerCase()\r\n            };\r\n            if (customCanvas) {\r\n                positionFrom = customCanvas.start;\r\n                positionTo = customCanvas.end\r\n            } else {\r\n                positionFrom = that._orthogonalPositions.start - (options.visible && !that._axisShift && (position === LEFT || position === TOP) ? SCALE_BREAK_OFFSET : 0);\r\n                positionTo = that._orthogonalPositions.end + (options.visible && (position === RIGHT || position === BOTTOM) ? SCALE_BREAK_OFFSET : 0)\r\n            }\r\n            var mainGroup = that._createBreaksGroup(positionFrom, positionTo);\r\n            if (that._axisShift && options.visible) {\r\n                additionBreakFrom = that._axisPosition - that._axisShift - SCALE_BREAK_OFFSET;\r\n                additionBreakTo = additionBreakFrom + 2 * SCALE_BREAK_OFFSET;\r\n                additionGroup = that._createBreaksGroup(additionBreakFrom, additionBreakTo)\r\n            }\r\n            breaks.forEach((function(br) {\r\n                if (!br.gapSize) {\r\n                    var breakCoord = that._getTranslatedCoord(br.to);\r\n                    that._drawBreak(breakCoord, positionFrom, positionTo, breakStyle.width, breakOptions, mainGroup);\r\n                    if (that._axisShift && options.visible) {\r\n                        that._drawBreak(breakCoord, additionBreakFrom, additionBreakTo, breakStyle.width, breakOptions, additionGroup)\r\n                    }\r\n                }\r\n            }))\r\n        },\r\n        _getSpiderCategoryOption: _core_utils_common__WEBPACK_IMPORTED_MODULE_5__[\"noop\"],\r\n        shift: function(margins) {\r\n            var options = this._options;\r\n            var isHorizontal = options.isHorizontal;\r\n            var axesSpacing = this.getMultipleAxesSpacing();\r\n            var constantLinesGroups = this._axisConstantLineGroups;\r\n\r\n            function shiftGroup(side, group) {\r\n                var attr = {\r\n                    translateX: 0,\r\n                    translateY: 0\r\n                };\r\n                var shift = margins[side] ? margins[side] + axesSpacing : 0;\r\n                attr[isHorizontal ? \"translateY\" : \"translateX\"] = (side === LEFT || side === TOP ? -1 : 1) * shift;\r\n                (group[side] || group).attr(attr);\r\n                return shift\r\n            }\r\n            this._axisShift = shiftGroup(options.position, this._axisGroup);\r\n            shiftGroup(options.position, this._axisElementsGroup);\r\n            (isHorizontal ? [TOP, BOTTOM] : [LEFT, RIGHT]).forEach(side => {\r\n                shiftGroup(side, constantLinesGroups.above);\r\n                shiftGroup(side, constantLinesGroups.under)\r\n            })\r\n        },\r\n        getCustomPosition(position) {\r\n            var orthogonalAxis = this.getOrthogonalAxis();\r\n            var resolvedPosition = null !== position && void 0 !== position ? position : this.getResolvedPositionOption();\r\n            var offset = this.getOptions().offset;\r\n            var orthogonalTranslator = orthogonalAxis.getTranslator();\r\n            var orthogonalAxisType = orthogonalAxis.getOptions().type;\r\n            var validPosition = orthogonalAxis.validateUnit(resolvedPosition);\r\n            var currentPosition;\r\n            if (\"discrete\" === orthogonalAxisType && (!orthogonalTranslator._categories || orthogonalTranslator._categories.indexOf(validPosition) < 0)) {\r\n                validPosition = void 0\r\n            }\r\n            if (this.positionIsBoundary(resolvedPosition)) {\r\n                currentPosition = this.getPredefinedPosition(resolvedPosition)\r\n            } else if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(validPosition)) {\r\n                currentPosition = this.getPredefinedPosition(this.getOptions().position)\r\n            } else {\r\n                currentPosition = orthogonalTranslator.to(validPosition, -1)\r\n            }\r\n            if (isFinite(currentPosition) && isFinite(offset)) {\r\n                currentPosition += offset\r\n            }\r\n            return currentPosition\r\n        },\r\n        getCustomBoundaryPosition(position) {\r\n            var {\r\n                customPosition: customPosition,\r\n                offset: offset\r\n            } = this.getOptions();\r\n            var resolvedPosition = null !== position && void 0 !== position ? position : this.getResolvedPositionOption();\r\n            var orthogonalAxis = this.getOrthogonalAxis();\r\n            var orthogonalTranslator = orthogonalAxis.getTranslator();\r\n            var visibleArea = orthogonalTranslator.getCanvasVisibleArea();\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(orthogonalAxis._orthogonalPositions) || 0 === orthogonalTranslator.canvasLength) {\r\n                return\r\n            }\r\n            var currentPosition = this.getCustomPosition(resolvedPosition);\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(currentPosition)) {\r\n                return this.getResolvedBoundaryPosition()\r\n            } else if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(customPosition)) {\r\n                if (currentPosition <= visibleArea.min) {\r\n                    return this._isHorizontal ? TOP : LEFT\r\n                } else if (currentPosition >= visibleArea.max) {\r\n                    return this._isHorizontal ? BOTTOM : RIGHT\r\n                }\r\n            } else if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(offset)) {\r\n                if (currentPosition <= this._orthogonalPositions.start) {\r\n                    return this._isHorizontal ? TOP : LEFT\r\n                } else if (currentPosition >= this._orthogonalPositions.end) {\r\n                    return this._isHorizontal ? BOTTOM : RIGHT\r\n                }\r\n            }\r\n            return currentPosition\r\n        },\r\n        getResolvedPositionOption() {\r\n            var _options$customPositi;\r\n            var options = this.getOptions();\r\n            return null !== (_options$customPositi = options.customPosition) && void 0 !== _options$customPositi ? _options$customPositi : options.position\r\n        },\r\n        customPositionIsAvailable() {\r\n            var options = this.getOptions();\r\n            return Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(this.getOrthogonalAxis()) && (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_7__[\"isDefined\"])(options.customPosition) || isFinite(options.offset))\r\n        },\r\n        hasNonBoundaryPosition() {\r\n            return this.customPositionIsAvailable() && !this.customPositionIsBoundary()\r\n        },\r\n        getResolvedBoundaryPosition() {\r\n            return this.customPositionIsBoundary() ? this._customBoundaryPosition : this.getOptions().position\r\n        },\r\n        customPositionEqualsToPredefined() {\r\n            return this.customPositionIsBoundary() && this._customBoundaryPosition === this.getOptions().position\r\n        },\r\n        customPositionIsBoundary() {\r\n            return this.positionIsBoundary(this._customBoundaryPosition)\r\n        },\r\n        positionIsBoundary: position => [TOP, LEFT, BOTTOM, RIGHT].indexOf(position) >= 0,\r\n        getPredefinedPosition(position) {\r\n            var _this$_orthogonalPosi;\r\n            return null === (_this$_orthogonalPosi = this._orthogonalPositions) || void 0 === _this$_orthogonalPosi ? void 0 : _this$_orthogonalPosi[position === TOP || position === LEFT ? \"start\" : \"end\"]\r\n        },\r\n        resolveOverlappingForCustomPositioning(oppositeAxes) {\r\n            var that = this;\r\n            if (!that.hasNonBoundaryPosition() && !that.customPositionIsBoundary() && !oppositeAxes.some(a => a.hasNonBoundaryPosition())) {\r\n                return\r\n            }\r\n            var overlappingObj = {\r\n                axes: [],\r\n                ticks: []\r\n            };\r\n            oppositeAxes.filter(orthogonalAxis => orthogonalAxis.pane === that.pane).forEach(orthogonalAxis => {\r\n                for (var i = 0; i < that._majorTicks.length; i++) {\r\n                    var tick = that._majorTicks[i];\r\n                    var label = tick.label;\r\n                    if (label) {\r\n                        if (overlappingObj.axes.indexOf(orthogonalAxis) < 0 && that._detectElementsOverlapping(label, orthogonalAxis._axisElement)) {\r\n                            overlappingObj.axes.push(orthogonalAxis);\r\n                            that._shiftThroughOrthogonalAxisOverlappedTick(label, orthogonalAxis)\r\n                        }\r\n                        for (var j = 0; j < orthogonalAxis._majorTicks.length; j++) {\r\n                            var oppositeTick = orthogonalAxis._majorTicks[j];\r\n                            var oppositeLabel = oppositeTick.label;\r\n                            if (oppositeLabel && that._detectElementsOverlapping(label, oppositeLabel)) {\r\n                                overlappingObj.ticks.push(tick);\r\n                                that._shiftThroughAxisOverlappedTick(tick);\r\n                                i = that._majorTicks.length;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                    if (tick.mark && overlappingObj.ticks.indexOf(tick) < 0) {\r\n                        if (that._isHorizontal && tick.mark.attr(\"translateY\")) {\r\n                            tick.mark.attr({\r\n                                translateY: 0\r\n                            })\r\n                        } else if (!that._isHorizontal && tick.mark.attr(\"translateX\")) {\r\n                            tick.mark.attr({\r\n                                translateX: 0\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _shiftThroughOrthogonalAxisOverlappedTick(label, orthogonalAxis) {\r\n            var labelBBox = label.getBBox();\r\n            var orthogonalAxisPosition = orthogonalAxis.getAxisPosition();\r\n            var orthogonalAxisLabelOptions = orthogonalAxis.getOptions().label;\r\n            var orthogonalAxisLabelPosition = orthogonalAxisLabelOptions.position;\r\n            var orthogonalAxisLabelIndent = orthogonalAxisLabelOptions.indentFromAxis / 2;\r\n            var translateCoordName = this._isHorizontal ? \"translateX\" : \"translateY\";\r\n            var defaultOrthogonalAxisLabelPosition = this._isHorizontal ? LEFT : TOP;\r\n            var translate = label.attr(translateCoordName);\r\n            var labelCoord = (this._isHorizontal ? labelBBox.x : labelBBox.y) + translate;\r\n            var labelSize = this._isHorizontal ? labelBBox.width : labelBBox.height;\r\n            var outsidePart = orthogonalAxisPosition - labelCoord;\r\n            var insidePart = labelCoord + labelSize - orthogonalAxisPosition;\r\n            var attr = {};\r\n            attr[translateCoordName] = translate;\r\n            if (outsidePart > 0 && insidePart > 0) {\r\n                if (insidePart - outsidePart > 1) {\r\n                    attr[translateCoordName] += outsidePart + orthogonalAxisLabelIndent\r\n                } else if (outsidePart - insidePart > 1) {\r\n                    attr[translateCoordName] -= insidePart + orthogonalAxisLabelIndent\r\n                } else {\r\n                    attr[translateCoordName] += orthogonalAxisLabelPosition === defaultOrthogonalAxisLabelPosition ? outsidePart + orthogonalAxisLabelIndent : -(insidePart + orthogonalAxisLabelIndent)\r\n                }\r\n                label.attr(attr)\r\n            }\r\n        },\r\n        _shiftThroughAxisOverlappedTick(tick) {\r\n            var _tick$mark;\r\n            var label = tick.label;\r\n            if (!label) {\r\n                return\r\n            }\r\n            var labelBBox = label.getBBox();\r\n            var tickMarkBBox = null === (_tick$mark = tick.mark) || void 0 === _tick$mark ? void 0 : _tick$mark.getBBox();\r\n            var axisPosition = this.getAxisPosition();\r\n            var labelOptions = this.getOptions().label;\r\n            var labelIndent = labelOptions.indentFromAxis;\r\n            var labelPosition = labelOptions.position;\r\n            var defaultLabelPosition = this._isHorizontal ? TOP : LEFT;\r\n            var translateCoordName = this._isHorizontal ? \"translateY\" : \"translateX\";\r\n            var translate = label.attr(translateCoordName);\r\n            var labelCoord = (this._isHorizontal ? labelBBox.y : labelBBox.x) + translate;\r\n            var labelSize = this._isHorizontal ? labelBBox.height : labelBBox.width;\r\n            var attr = {};\r\n            attr[translateCoordName] = translate + (labelPosition === defaultLabelPosition ? axisPosition - labelCoord + labelIndent : -(labelCoord - axisPosition + labelSize + labelIndent));\r\n            label.attr(attr);\r\n            if (tick.mark) {\r\n                var markerSize = this._isHorizontal ? tickMarkBBox.height : tickMarkBBox.width;\r\n                var dir = labelPosition === defaultLabelPosition ? 1 : -1;\r\n                attr[translateCoordName] = dir * (markerSize - 1);\r\n                tick.mark.attr(attr)\r\n            }\r\n        },\r\n        _detectElementsOverlapping(element1, element2) {\r\n            if (!element1 || !element2) {\r\n                return false\r\n            }\r\n            var bBox1 = element1.getBBox();\r\n            var x1 = bBox1.x + element1.attr(\"translateX\");\r\n            var y1 = bBox1.y + element1.attr(\"translateY\");\r\n            var bBox2 = element2.getBBox();\r\n            var x2 = bBox2.x + element2.attr(\"translateX\");\r\n            var y2 = bBox2.y + element2.attr(\"translateY\");\r\n            return (x2 >= x1 && x2 <= x1 + bBox1.width || x1 >= x2 && x1 <= x2 + bBox2.width) && (y2 >= y1 && y2 <= y1 + bBox1.height || y1 >= y2 && y1 <= y2 + bBox2.height)\r\n        }\r\n    }\r\n});\r\n\r\nfunction getLineDrawer(renderer, root, rotatePoints, positionFrom, breakStart, positionTo, isWaved) {\r\n    var elementType = isWaved ? \"bezier\" : \"line\";\r\n    var group = renderer.g().append(root);\r\n    return function(offset, attr) {\r\n        renderer.path(rotatePoints(getPoints(positionFrom, breakStart, positionTo, offset, isWaved)), elementType).attr(attr).append(group)\r\n    }\r\n}\r\n\r\nfunction getPoints(positionFrom, breakStart, positionTo, offset, isWaved) {\r\n    if (!isWaved) {\r\n        return [positionFrom, breakStart + offset, positionTo, breakStart + offset]\r\n    }\r\n    breakStart += offset;\r\n    var currentPosition;\r\n    var topPoint = breakStart + WAVED_LINE_TOP;\r\n    var centerPoint = breakStart + WAVED_LINE_CENTER;\r\n    var bottomPoint = breakStart + WAVED_LINE_BOTTOM;\r\n    var points = [\r\n        [positionFrom, centerPoint]\r\n    ];\r\n    for (currentPosition = positionFrom; currentPosition < positionTo + WAVED_LINE_LENGTH; currentPosition += WAVED_LINE_LENGTH) {\r\n        points.push([currentPosition + 6, topPoint, currentPosition + 6, topPoint, currentPosition + 12, centerPoint, currentPosition + 18, bottomPoint, currentPosition + 18, bottomPoint, currentPosition + 24, centerPoint])\r\n    }\r\n    return [].concat.apply([], points)\r\n}\r\n\r\nfunction rotateLine(lineCoords) {\r\n    var points = [];\r\n    var i;\r\n    for (i = 0; i < lineCoords.length; i += 2) {\r\n        points.push(lineCoords[i + 1]);\r\n        points.push(lineCoords[i])\r\n    }\r\n    return points\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/axes/xy_axes.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/chart.js":
/*!**************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/chart.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_utils_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/size */ \"./node_modules/devextreme/esm/core/utils/size.js\");\n/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils/common */ \"./node_modules/devextreme/esm/core/utils/common.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/array */ \"./node_modules/devextreme/esm/core/utils/array.js\");\n/* harmony import */ var _core_utils_window__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/utils/window */ \"./node_modules/devextreme/esm/core/utils/window.js\");\n/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/utils/iterator */ \"./node_modules/devextreme/esm/core/utils/iterator.js\");\n/* harmony import */ var _core_component_registrator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/component_registrator */ \"./node_modules/devextreme/esm/core/component_registrator.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"./node_modules/devextreme/esm/viz/utils.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/* harmony import */ var _chart_components_base_chart__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chart_components/base_chart */ \"./node_modules/devextreme/esm/viz/chart_components/base_chart.js\");\n/* harmony import */ var _chart_components_multi_axes_synchronizer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./chart_components/multi_axes_synchronizer */ \"./node_modules/devextreme/esm/viz/chart_components/multi_axes_synchronizer.js\");\n/* harmony import */ var _chart_components_advanced_chart__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./chart_components/advanced_chart */ \"./node_modules/devextreme/esm/viz/chart_components/advanced_chart.js\");\n/* harmony import */ var _chart_components_scroll_bar__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./chart_components/scroll_bar */ \"./node_modules/devextreme/esm/viz/chart_components/scroll_bar.js\");\n/* harmony import */ var _chart_components_crosshair__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./chart_components/crosshair */ \"./node_modules/devextreme/esm/viz/chart_components/crosshair.js\");\n/* harmony import */ var _series_helpers_range_data_calculator__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./series/helpers/range_data_calculator */ \"./node_modules/devextreme/esm/viz/series/helpers/range_data_calculator.js\");\n/* harmony import */ var _chart_components_layout_manager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./chart_components/layout_manager */ \"./node_modules/devextreme/esm/viz/chart_components/layout_manager.js\");\n/* harmony import */ var _translators_range__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./translators/range */ \"./node_modules/devextreme/esm/viz/translators/range.js\");\n/* harmony import */ var _chart_components_shutter_zoom__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./chart_components/shutter_zoom */ \"./node_modules/devextreme/esm/viz/chart_components/shutter_zoom.js\");\n/* harmony import */ var _chart_components_zoom_and_pan__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./chart_components/zoom_and_pan */ \"./node_modules/devextreme/esm/viz/chart_components/zoom_and_pan.js\");\n/* harmony import */ var _core_annotations__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./core/annotations */ \"./node_modules/devextreme/esm/viz/core/annotations.js\");\n/**\r\n * DevExtreme (esm/viz/chart.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\r\nvar DEFAULT_PANES = [{\r\n    name: DEFAULT_PANE_NAME,\r\n    border: {}\r\n}];\r\nvar DISCRETE = \"discrete\";\r\nvar _isArray = Array.isArray;\r\n\r\nfunction getFirstAxisNameForPane(axes, paneName, defaultPane) {\r\n    var result;\r\n    for (var i = 0; i < axes.length; i++) {\r\n        if (axes[i].pane === paneName || void 0 === axes[i].pane && paneName === defaultPane) {\r\n            result = axes[i].name;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        result = axes[0].name\r\n    }\r\n    return result\r\n}\r\n\r\nfunction changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility) {\r\n    var gridOpt = axis.getOptions().grid;\r\n    var minorGridOpt = axis.getOptions().minorGrid;\r\n    gridOpt.visible = gridVisibility;\r\n    minorGridOpt && (minorGridOpt.visible = minorGridVisibility)\r\n}\r\n\r\nfunction hideGridsOnNonFirstValueAxisForPane(axesForPane) {\r\n    var axisShown = false;\r\n    var hiddenStubAxis = [];\r\n    var minorGridVisibility = axesForPane.some((function(axis) {\r\n        var minorGridOptions = axis.getOptions().minorGrid;\r\n        return minorGridOptions && minorGridOptions.visible\r\n    }));\r\n    var gridVisibility = axesForPane.some((function(axis) {\r\n        var gridOptions = axis.getOptions().grid;\r\n        return gridOptions && gridOptions.visible\r\n    }));\r\n    if (axesForPane.length > 1) {\r\n        axesForPane.forEach((function(axis) {\r\n            var gridOpt = axis.getOptions().grid;\r\n            if (axisShown) {\r\n                changeVisibilityAxisGrids(axis, false, false)\r\n            } else if (gridOpt && gridOpt.visible) {\r\n                if (axis.getTranslator().getBusinessRange().isEmpty()) {\r\n                    changeVisibilityAxisGrids(axis, false, false);\r\n                    hiddenStubAxis.push(axis)\r\n                } else {\r\n                    axisShown = true;\r\n                    changeVisibilityAxisGrids(axis, gridVisibility, minorGridVisibility)\r\n                }\r\n            }\r\n        }));\r\n        !axisShown && hiddenStubAxis.length && changeVisibilityAxisGrids(hiddenStubAxis[0], gridVisibility, minorGridVisibility)\r\n    }\r\n}\r\n\r\nfunction findAxisOptions(valueAxes, valueAxesOptions, axisName) {\r\n    var result;\r\n    var axInd;\r\n    for (axInd = 0; axInd < valueAxesOptions.length; axInd++) {\r\n        if (valueAxesOptions[axInd].name === axisName) {\r\n            result = valueAxesOptions[axInd];\r\n            result.priority = axInd;\r\n            break\r\n        }\r\n    }\r\n    if (!result) {\r\n        for (axInd = 0; axInd < valueAxes.length; axInd++) {\r\n            if (valueAxes[axInd].name === axisName) {\r\n                result = valueAxes[axInd].getOptions();\r\n                result.priority = valueAxes[axInd].priority;\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nfunction findAxis(paneName, axisName, axes) {\r\n    var axis;\r\n    var i;\r\n    for (i = 0; i < axes.length; i++) {\r\n        axis = axes[i];\r\n        if (axis.name === axisName && axis.pane === paneName) {\r\n            return axis\r\n        }\r\n    }\r\n    if (paneName) {\r\n        return findAxis(void 0, axisName, axes)\r\n    }\r\n}\r\n\r\nfunction compareAxes(a, b) {\r\n    return a.priority - b.priority\r\n}\r\n\r\nfunction doesPaneExist(panes, paneName) {\r\n    var found = false;\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(panes, (function(_, pane) {\r\n        if (pane.name === paneName) {\r\n            found = true;\r\n            return false\r\n        }\r\n    }));\r\n    return found\r\n}\r\n\r\nfunction accumulate(field, src1, src2, auxSpacing) {\r\n    var val1 = src1[field] || 0;\r\n    var val2 = src2[field] || 0;\r\n    return val1 + val2 + (val1 && val2 ? auxSpacing : 0)\r\n}\r\n\r\nfunction pickMax(field, src1, src2) {\r\n    return pickMaxValue(src1[field], src2[field])\r\n}\r\n\r\nfunction pickMaxValue(val1, val2) {\r\n    return Math.max(val1 || 0, val2 || 0)\r\n}\r\n\r\nfunction getAxisMargins(axis) {\r\n    return axis.getMargins()\r\n}\r\n\r\nfunction getHorizontalAxesMargins(axes, getMarginsFunc) {\r\n    return axes.reduce((function(margins, axis) {\r\n        var _axis$getOrthogonalAx;\r\n        var axisMargins = getMarginsFunc(axis);\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = accumulate(\"top\", paneMargins, axisMargins, spacing);\r\n        paneMargins.bottom = accumulate(\"bottom\", paneMargins, axisMargins, spacing);\r\n        paneMargins.left = pickMax(\"left\", paneMargins, axisMargins);\r\n        paneMargins.right = pickMax(\"right\", paneMargins, axisMargins);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        var orthogonalAxis = null === (_axis$getOrthogonalAx = axis.getOrthogonalAxis) || void 0 === _axis$getOrthogonalAx ? void 0 : _axis$getOrthogonalAx.call(axis);\r\n        if (orthogonalAxis && orthogonalAxis.customPositionIsAvailable() && (!axis.customPositionIsBoundaryOrthogonalAxis() || !orthogonalAxis.customPositionEqualsToPredefined())) {\r\n            margins[orthogonalAxis.getResolvedBoundaryPosition()] = 0\r\n        }\r\n        return margins\r\n    }), {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction getVerticalAxesMargins(axes) {\r\n    return axes.reduce((function(margins, axis) {\r\n        var axisMargins = axis.getMargins();\r\n        var paneMargins = margins.panes[axis.pane] = margins.panes[axis.pane] || {};\r\n        var spacing = axis.getMultipleAxesSpacing();\r\n        paneMargins.top = pickMax(\"top\", paneMargins, axisMargins);\r\n        paneMargins.bottom = pickMax(\"bottom\", paneMargins, axisMargins);\r\n        paneMargins.left = accumulate(\"left\", paneMargins, axisMargins, spacing);\r\n        paneMargins.right = accumulate(\"right\", paneMargins, axisMargins, spacing);\r\n        margins.top = pickMax(\"top\", paneMargins, margins);\r\n        margins.bottom = pickMax(\"bottom\", paneMargins, margins);\r\n        margins.left = pickMax(\"left\", paneMargins, margins);\r\n        margins.right = pickMax(\"right\", paneMargins, margins);\r\n        return margins\r\n    }), {\r\n        panes: {}\r\n    })\r\n}\r\n\r\nfunction performActionOnAxes(axes, action, actionArgument1, actionArgument2, actionArgument3) {\r\n    axes.forEach((function(axis) {\r\n        axis[action](actionArgument1 && actionArgument1[axis.pane], actionArgument2 && actionArgument2[axis.pane] || actionArgument2, actionArgument3)\r\n    }))\r\n}\r\n\r\nfunction shrinkCanvases(isRotated, canvases, sizes, verticalMargins, horizontalMargins) {\r\n    function getMargin(side, margins, pane) {\r\n        var m = -1 === (isRotated ? [\"left\", \"right\"] : [\"top\", \"bottom\"]).indexOf(side) ? margins : margins.panes[pane] || {};\r\n        return m[side]\r\n    }\r\n\r\n    function getMaxMargin(side, margins1, margins2, pane) {\r\n        return pickMaxValue(getMargin(side, margins1, pane), getMargin(side, margins2, pane))\r\n    }\r\n    var getOriginalField = field => \"original\".concat(field[0].toUpperCase()).concat(field.slice(1));\r\n\r\n    function shrink(canvases, paneNames, sizeField, startMargin, endMargin, oppositeMargins) {\r\n        paneNames = paneNames.sort((p1, p2) => canvases[p2][startMargin] - canvases[p1][startMargin]);\r\n        paneNames.forEach(pane => {\r\n            var canvas = canvases[pane];\r\n            oppositeMargins.forEach(margin => {\r\n                canvas[margin] = canvas[getOriginalField(margin)] + getMaxMargin(margin, verticalMargins, horizontalMargins, pane)\r\n            })\r\n        });\r\n        var firstPane = canvases[paneNames[0]];\r\n        var emptySpace = paneNames.reduce((space, paneName) => {\r\n            space -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, paneName) + getMaxMargin(endMargin, verticalMargins, horizontalMargins, paneName);\r\n            return space\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - canvases[paneNames[paneNames.length - 1]][getOriginalField(startMargin)]) - _core_utils__WEBPACK_IMPORTED_MODULE_8__[\"PANE_PADDING\"] * (paneNames.length - 1);\r\n        emptySpace -= Object.keys(sizes).reduce((prev, key) => prev + (!Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"isRelativeHeightPane\"])(sizes[key]) ? sizes[key].height : 0), 0);\r\n        paneNames.reduce((offset, pane) => {\r\n            var canvas = canvases[pane];\r\n            var paneSize = sizes[pane];\r\n            offset -= getMaxMargin(endMargin, verticalMargins, horizontalMargins, pane);\r\n            canvas[endMargin] = firstPane[sizeField] - offset;\r\n            offset -= !Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"isRelativeHeightPane\"])(paneSize) ? paneSize.height : Math.floor(emptySpace * paneSize.height);\r\n            canvas[startMargin] = offset;\r\n            offset -= getMaxMargin(startMargin, verticalMargins, horizontalMargins, pane) + _core_utils__WEBPACK_IMPORTED_MODULE_8__[\"PANE_PADDING\"];\r\n            return offset\r\n        }, firstPane[sizeField] - firstPane[getOriginalField(endMargin)] - (emptySpace < 0 ? emptySpace : 0))\r\n    }\r\n    var paneNames = Object.keys(canvases);\r\n    if (!isRotated) {\r\n        shrink(canvases, paneNames, \"height\", \"top\", \"bottom\", [\"left\", \"right\"])\r\n    } else {\r\n        shrink(canvases, paneNames, \"width\", \"left\", \"right\", [\"top\", \"bottom\"])\r\n    }\r\n    return canvases\r\n}\r\n\r\nfunction drawAxesWithTicks(axes, condition, canvases, panesBorderOptions) {\r\n    if (condition) {\r\n        performActionOnAxes(axes, \"createTicks\", canvases);\r\n        _chart_components_multi_axes_synchronizer__WEBPACK_IMPORTED_MODULE_12__[\"default\"].synchronize(axes)\r\n    }\r\n    performActionOnAxes(axes, \"draw\", !condition && canvases, panesBorderOptions)\r\n}\r\n\r\nfunction shiftAxis(side1, side2) {\r\n    var shifts = {};\r\n    return function(axis) {\r\n        if (!axis.customPositionIsAvailable() || axis.customPositionEqualsToPredefined()) {\r\n            var shift = shifts[axis.pane] = shifts[axis.pane] || {\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            };\r\n            var spacing = axis.getMultipleAxesSpacing();\r\n            var margins = axis.getMargins();\r\n            axis.shift(shift);\r\n            shift[side1] = accumulate(side1, shift, margins, spacing);\r\n            shift[side2] = accumulate(side2, shift, margins, spacing)\r\n        } else {\r\n            axis.shift({\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction getCommonSize(side, margins) {\r\n    var size = 0;\r\n    var pane;\r\n    var paneMargins;\r\n    for (pane in margins.panes) {\r\n        paneMargins = margins.panes[pane];\r\n        size += \"height\" === side ? paneMargins.top + paneMargins.bottom : paneMargins.left + paneMargins.right\r\n    }\r\n    return size\r\n}\r\n\r\nfunction checkUsedSpace(sizeShortage, side, axes, getMarginFunc) {\r\n    var size = 0;\r\n    if (sizeShortage[side] > 0) {\r\n        size = getCommonSize(side, getMarginFunc(axes, getAxisMargins));\r\n        performActionOnAxes(axes, \"hideTitle\");\r\n        sizeShortage[side] -= size - getCommonSize(side, getMarginFunc(axes, getAxisMargins))\r\n    }\r\n    if (sizeShortage[side] > 0) {\r\n        performActionOnAxes(axes, \"hideOuterElements\")\r\n    }\r\n}\r\n\r\nfunction axisAnimationEnabled(drawOptions, pointsToAnimation) {\r\n    var pointsCount = pointsToAnimation.reduce((sum, count) => sum + count, 0) / pointsToAnimation.length;\r\n    return drawOptions.animate && pointsCount <= drawOptions.animationPointsLimit\r\n}\r\n\r\nfunction collectMarkersInfoBySeries(allSeries, filteredSeries, argAxis) {\r\n    var series = [];\r\n    var overloadedSeries = {};\r\n    var argVisualRange = argAxis.visualRange();\r\n    var argTranslator = argAxis.getTranslator();\r\n    var argViewPortFilter = _series_helpers_range_data_calculator__WEBPACK_IMPORTED_MODULE_16__[\"default\"].getViewPortFilter(argVisualRange || {});\r\n    filteredSeries.forEach(s => {\r\n        var valAxis = s.getValueAxis();\r\n        var valVisualRange = valAxis.getCanvasRange();\r\n        var valTranslator = valAxis.getTranslator();\r\n        var seriesIndex = allSeries.indexOf(s);\r\n        var valViewPortFilter = _series_helpers_range_data_calculator__WEBPACK_IMPORTED_MODULE_16__[\"default\"].getViewPortFilter(valVisualRange || {});\r\n        overloadedSeries[seriesIndex] = {};\r\n        filteredSeries.forEach(sr => overloadedSeries[seriesIndex][allSeries.indexOf(sr)] = 0);\r\n        var seriesPoints = [];\r\n        s.getPoints().filter(p => p.getOptions().visible && argViewPortFilter(p.argument) && (valViewPortFilter(p.getMinValue(true)) || valViewPortFilter(p.getMaxValue(true)))).forEach(p => {\r\n            var tp = {\r\n                seriesIndex: seriesIndex,\r\n                argument: p.argument,\r\n                value: p.getMaxValue(true),\r\n                size: p.bubbleSize || p.getOptions().size\r\n            };\r\n            if (p.getMinValue(true) !== p.getMaxValue(true)) {\r\n                var mp = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, tp);\r\n                mp.value = p.getMinValue(true);\r\n                mp.x = argTranslator.to(mp.argument, 1);\r\n                mp.y = valTranslator.to(mp.value, 1);\r\n                seriesPoints.push(mp)\r\n            }\r\n            tp.x = argTranslator.to(tp.argument, 1);\r\n            tp.y = valTranslator.to(tp.value, 1);\r\n            seriesPoints.push(tp)\r\n        });\r\n        overloadedSeries[seriesIndex].pointsCount = seriesPoints.length;\r\n        overloadedSeries[seriesIndex].total = 0;\r\n        overloadedSeries[seriesIndex].continuousSeries = 0;\r\n        series.push({\r\n            name: s.name,\r\n            index: seriesIndex,\r\n            points: seriesPoints\r\n        })\r\n    });\r\n    return {\r\n        series: series,\r\n        overloadedSeries: overloadedSeries\r\n    }\r\n}\r\n\r\nfunction applyAutoHidePointMarkers(allSeries, filteredSeries, overloadedSeries, argAxis) {\r\n    var argAxisType = argAxis.getOptions().type;\r\n    filteredSeries.forEach(s => {\r\n        var seriesIndex = allSeries.indexOf(s);\r\n        s.autoHidePointMarkers = false;\r\n        var tickCount = argAxis.getTicksValues().majorTicksValues.length;\r\n        if (s.autoHidePointMarkersEnabled() && (argAxisType === DISCRETE || overloadedSeries[seriesIndex].pointsCount > tickCount)) {\r\n            for (var index in overloadedSeries[seriesIndex]) {\r\n                var i = parseInt(index);\r\n                if (isNaN(i) || overloadedSeries[seriesIndex].total / overloadedSeries[seriesIndex].continuousSeries < 3) {\r\n                    continue\r\n                }\r\n                if (i === seriesIndex) {\r\n                    if (2 * overloadedSeries[i][i] >= overloadedSeries[i].pointsCount) {\r\n                        s.autoHidePointMarkers = true;\r\n                        break\r\n                    }\r\n                } else if (overloadedSeries[seriesIndex].total >= overloadedSeries[seriesIndex].pointsCount) {\r\n                    s.autoHidePointMarkers = true;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nfunction fastHidingPointMarkersByArea(canvas, markersInfo, series) {\r\n    var area = canvas.width * canvas.height;\r\n    var seriesPoints = markersInfo.series;\r\n    var _loop = function(i) {\r\n        var currentSeries = series.filter(s => s.name === seriesPoints[i].name)[0];\r\n        var points = seriesPoints[i].points;\r\n        var pointSize = points.length ? points[0].size : 0;\r\n        var pointsArea = pointSize * pointSize * points.length;\r\n        if (currentSeries.autoHidePointMarkersEnabled() && pointsArea >= area / seriesPoints.length) {\r\n            var index = seriesPoints[i].index;\r\n            currentSeries.autoHidePointMarkers = true;\r\n            seriesPoints.splice(i, 1);\r\n            series.splice(series.indexOf(currentSeries), 1);\r\n            delete markersInfo.overloadedSeries[index]\r\n        }\r\n    };\r\n    for (var i = seriesPoints.length - 1; i >= 0; i--) {\r\n        _loop(i)\r\n    }\r\n}\r\n\r\nfunction updateMarkersInfo(points, overloadedSeries) {\r\n    var isContinuousSeries = false;\r\n    for (var i = 0; i < points.length - 1; i++) {\r\n        var curPoint = points[i];\r\n        var size = curPoint.size;\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(curPoint.x) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(curPoint.y)) {\r\n            for (var j = i + 1; j < points.length; j++) {\r\n                var nextPoint = points[j];\r\n                var next_x = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.x;\r\n                var next_y = null === nextPoint || void 0 === nextPoint ? void 0 : nextPoint.y;\r\n                if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(next_x) || Math.abs(curPoint.x - next_x) >= size) {\r\n                    isContinuousSeries &= j !== i + 1;\r\n                    break\r\n                } else {\r\n                    var distance = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(next_x) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(next_y) && Math.sqrt(Math.pow(curPoint.x - next_x, 2) + Math.pow(curPoint.y - next_y, 2));\r\n                    if (distance && distance < size) {\r\n                        overloadedSeries[curPoint.seriesIndex][nextPoint.seriesIndex]++;\r\n                        overloadedSeries[curPoint.seriesIndex].total++;\r\n                        if (!isContinuousSeries) {\r\n                            overloadedSeries[curPoint.seriesIndex].continuousSeries++;\r\n                            isContinuousSeries = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nvar dxChart = _chart_components_advanced_chart__WEBPACK_IMPORTED_MODULE_13__[\"AdvancedChart\"].inherit({\r\n    _themeSection: \"chart\",\r\n    _fontFields: [\"crosshair.label.font\"],\r\n    _initCore: function() {\r\n        this.paneAxis = {};\r\n        this.callBase()\r\n    },\r\n    _init() {\r\n        this._containerInitialHeight = Object(_core_utils_window__WEBPACK_IMPORTED_MODULE_4__[\"hasWindow\"])() ? Object(_core_utils_size__WEBPACK_IMPORTED_MODULE_0__[\"getHeight\"])(this._$element) : 0;\r\n        this.callBase()\r\n    },\r\n    _correctAxes: function() {\r\n        this._correctValueAxes(true)\r\n    },\r\n    _getExtraOptions: _core_utils_common__WEBPACK_IMPORTED_MODULE_1__[\"noop\"],\r\n    _createPanes: function() {\r\n        var panes = this.option(\"panes\");\r\n        var panesNameCounter = 0;\r\n        var defaultPane;\r\n        if (!panes || _isArray(panes) && !panes.length) {\r\n            panes = DEFAULT_PANES\r\n        }\r\n        this.callBase();\r\n        defaultPane = this.option(\"defaultPane\");\r\n        panes = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(true, [], _isArray(panes) ? panes : [panes]);\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(panes, (function(_, pane) {\r\n            pane.name = !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(pane.name) ? DEFAULT_PANE_NAME + panesNameCounter++ : pane.name\r\n        }));\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(defaultPane)) {\r\n            if (!doesPaneExist(panes, defaultPane)) {\r\n                this._incidentOccurred(\"W2101\", [defaultPane]);\r\n                defaultPane = panes[panes.length - 1].name\r\n            }\r\n        } else {\r\n            defaultPane = panes[panes.length - 1].name\r\n        }\r\n        this.defaultPane = defaultPane;\r\n        panes = this._isRotated() ? panes.reverse() : panes;\r\n        return panes\r\n    },\r\n    _getAxisRenderingOptions: function() {\r\n        return {\r\n            axisType: \"xyAxes\",\r\n            drawingType: \"linear\"\r\n        }\r\n    },\r\n    _prepareAxisOptions: function(typeSelector, userOptions, rotated) {\r\n        return {\r\n            isHorizontal: \"argumentAxis\" === typeSelector !== rotated,\r\n            containerColor: this._themeManager.getOptions(\"containerBackgroundColor\")\r\n        }\r\n    },\r\n    _checkPaneName: function(seriesTheme) {\r\n        var paneList = Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"map\"])(this.panes, (function(pane) {\r\n            return pane.name\r\n        }));\r\n        seriesTheme.pane = seriesTheme.pane || this.defaultPane;\r\n        return -1 !== Object(_core_utils_array__WEBPACK_IMPORTED_MODULE_3__[\"inArray\"])(seriesTheme.pane, paneList)\r\n    },\r\n    _initCustomPositioningAxes() {\r\n        var that = this;\r\n        var argumentAxis = that.getArgumentAxis();\r\n        var valueAxisName = argumentAxis.getOptions().customPositionAxis;\r\n        var valueAxis = that._valueAxes.filter(v => v.pane === argumentAxis.pane && (!valueAxisName || valueAxisName === v.name))[0];\r\n        that._valueAxes.forEach(v => {\r\n            if (argumentAxis !== v.getOrthogonalAxis()) {\r\n                v.getOrthogonalAxis = () => argumentAxis;\r\n                v.customPositionIsBoundaryOrthogonalAxis = () => argumentAxis.customPositionIsBoundary()\r\n            }\r\n        });\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(valueAxis) && valueAxis !== argumentAxis.getOrthogonalAxis()) {\r\n            argumentAxis.getOrthogonalAxis = () => valueAxis;\r\n            argumentAxis.customPositionIsBoundaryOrthogonalAxis = () => that._valueAxes.some(v => v.customPositionIsBoundary())\r\n        } else if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(argumentAxis.getOrthogonalAxis()) && !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(valueAxis)) {\r\n            argumentAxis.getOrthogonalAxis = _core_utils_common__WEBPACK_IMPORTED_MODULE_1__[\"noop\"]\r\n        }\r\n    },\r\n    _getAllAxes() {\r\n        return this._argumentAxes.concat(this._valueAxes)\r\n    },\r\n    _resetAxesAnimation(isFirstDrawing, isHorizontal) {\r\n        var axes = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(isHorizontal) ? isHorizontal ^ this._isRotated() ? this._argumentAxes : this._valueAxes : this._getAllAxes();\r\n        axes.forEach(a => {\r\n            a.resetApplyingAnimation(isFirstDrawing)\r\n        })\r\n    },\r\n    _axesBoundaryPositioning() {\r\n        var allAxes = this._getAllAxes();\r\n        var boundaryStateChanged = false;\r\n        allAxes.forEach(a => {\r\n            if (!a.customPositionIsAvailable()) {\r\n                return false\r\n            }\r\n            var prevBoundaryState = a.customPositionIsBoundary();\r\n            a._customBoundaryPosition = a.getCustomBoundaryPosition();\r\n            boundaryStateChanged |= prevBoundaryState !== a.customPositionIsBoundary()\r\n        });\r\n        return boundaryStateChanged\r\n    },\r\n    _getCrosshairMargins: function() {\r\n        var crosshairOptions = this._getCrosshairOptions() || {};\r\n        var crosshairEnabled = crosshairOptions.enabled;\r\n        var margins = Object(_chart_components_crosshair__WEBPACK_IMPORTED_MODULE_15__[\"getMargins\"])();\r\n        var horizontalLabel = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(true, {}, crosshairOptions.label, crosshairOptions.horizontalLine.label);\r\n        var verticalLabel = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(true, {}, crosshairOptions.label, crosshairOptions.verticalLine.label);\r\n        return {\r\n            x: crosshairEnabled && crosshairOptions.horizontalLine.visible && horizontalLabel.visible ? margins.x : 0,\r\n            y: crosshairEnabled && crosshairOptions.verticalLine.visible && verticalLabel.visible ? margins.y : 0\r\n        }\r\n    },\r\n    _getValueAxis: function(paneName, axisName) {\r\n        var valueAxes = this._valueAxes;\r\n        var valueAxisOptions = this.option(\"valueAxis\") || {};\r\n        var valueAxesOptions = _isArray(valueAxisOptions) ? valueAxisOptions : [valueAxisOptions];\r\n        var rotated = this._isRotated();\r\n        var crosshairMargins = this._getCrosshairMargins();\r\n        var axisOptions;\r\n        var axis;\r\n        axisName = axisName || getFirstAxisNameForPane(valueAxes, paneName, this.defaultPane);\r\n        axis = findAxis(paneName, axisName, valueAxes);\r\n        if (!axis) {\r\n            axisOptions = findAxisOptions(valueAxes, valueAxesOptions, axisName);\r\n            if (!axisOptions) {\r\n                this._incidentOccurred(\"W2102\", [axisName]);\r\n                axisOptions = {\r\n                    name: axisName,\r\n                    priority: valueAxes.length\r\n                }\r\n            }\r\n            axis = this._createAxis(false, this._populateAxesOptions(\"valueAxis\", axisOptions, {\r\n                pane: paneName,\r\n                name: axisName,\r\n                optionPath: _isArray(valueAxisOptions) ? \"valueAxis[\".concat(axisOptions.priority, \"]\") : \"valueAxis\",\r\n                crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\r\n            }, rotated));\r\n            axis.applyVisualRangeSetter(this._getVisualRangeSetter());\r\n            valueAxes.push(axis)\r\n        }\r\n        axis.setPane(paneName);\r\n        return axis\r\n    },\r\n    _correctValueAxes: function(needHideGrids) {\r\n        var that = this;\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var valueAxes = that._valueAxes;\r\n        var paneWithAxis = {};\r\n        that.series.forEach((function(series) {\r\n            var axis = series.getValueAxis();\r\n            paneWithAxis[axis.pane] = true\r\n        }));\r\n        that.panes.forEach((function(pane) {\r\n            var paneName = pane.name;\r\n            if (!paneWithAxis[paneName]) {\r\n                that._getValueAxis(paneName)\r\n            }\r\n            if (needHideGrids && synchronizeMultiAxes) {\r\n                hideGridsOnNonFirstValueAxisForPane(valueAxes.filter((function(axis) {\r\n                    return axis.pane === paneName\r\n                })))\r\n            }\r\n        }));\r\n        that._valueAxes = valueAxes.filter((function(axis) {\r\n            if (!axis.pane) {\r\n                axis.setPane(that.defaultPane)\r\n            }\r\n            var paneExists = doesPaneExist(that.panes, axis.pane);\r\n            if (!paneExists) {\r\n                axis.dispose();\r\n                axis = null\r\n            }\r\n            return paneExists\r\n        })).sort(compareAxes);\r\n        var defaultAxis = this.getValueAxis();\r\n        that._valueAxes.forEach(axis => {\r\n            var optionPath = axis.getOptions().optionPath;\r\n            if (optionPath) {\r\n                var axesWithSamePath = that._valueAxes.filter(a => a.getOptions().optionPath === optionPath);\r\n                if (axesWithSamePath.length > 1) {\r\n                    if (axesWithSamePath.some(a => a === defaultAxis)) {\r\n                        axesWithSamePath.forEach(a => {\r\n                            if (a !== defaultAxis) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    } else {\r\n                        axesWithSamePath.forEach((a, i) => {\r\n                            if (0 !== i) {\r\n                                a.getOptions().optionPath = null\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getSeriesForPane: function(paneName) {\r\n        var paneSeries = [];\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(this.series, (function(_, oneSeries) {\r\n            if (oneSeries.pane === paneName) {\r\n                paneSeries.push(oneSeries)\r\n            }\r\n        }));\r\n        return paneSeries\r\n    },\r\n    _createPanesBorderOptions: function() {\r\n        var commonBorderOptions = this._themeManager.getOptions(\"commonPaneSettings\").border;\r\n        var panesBorderOptions = {};\r\n        this.panes.forEach(pane => panesBorderOptions[pane.name] = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(true, {}, commonBorderOptions, pane.border));\r\n        return panesBorderOptions\r\n    },\r\n    _createScrollBar: function() {\r\n        var scrollBarOptions = this._themeManager.getOptions(\"scrollBar\") || {};\r\n        var scrollBarGroup = this._scrollBarGroup;\r\n        if (scrollBarOptions.visible) {\r\n            scrollBarOptions.rotated = this._isRotated();\r\n            this._scrollBar = (this._scrollBar || new _chart_components_scroll_bar__WEBPACK_IMPORTED_MODULE_14__[\"ScrollBar\"](this._renderer, scrollBarGroup)).update(scrollBarOptions)\r\n        } else {\r\n            scrollBarGroup.linkRemove();\r\n            this._scrollBar && this._scrollBar.dispose();\r\n            this._scrollBar = null\r\n        }\r\n    },\r\n    _executeAppendAfterSeries(append) {\r\n        append()\r\n    },\r\n    _prepareToRender(drawOptions) {\r\n        var panesBorderOptions = this._createPanesBorderOptions();\r\n        this._createPanesBackground();\r\n        this._appendAxesGroups();\r\n        this._adjustViewport();\r\n        return panesBorderOptions\r\n    },\r\n    _adjustViewport() {\r\n        var adjustOnZoom = this._themeManager.getOptions(\"adjustOnZoom\");\r\n        if (!adjustOnZoom) {\r\n            return\r\n        }\r\n        this._valueAxes.forEach(axis => axis.adjust())\r\n    },\r\n    _recreateSizeDependentObjects(isCanvasChanged) {\r\n        var that = this;\r\n        var series = that._getVisibleSeries();\r\n        var useAggregation = series.some(s => s.useAggregation());\r\n        var zoomChanged = that._isZooming();\r\n        if (!useAggregation) {\r\n            return\r\n        }\r\n        that._argumentAxes.forEach((function(axis) {\r\n            axis.updateCanvas(that._canvas, true)\r\n        }));\r\n        series.forEach((function(series) {\r\n            if (series.useAggregation() && (isCanvasChanged || zoomChanged || !series._useAllAggregatedPoints)) {\r\n                series.createPoints()\r\n            }\r\n        }));\r\n        that._processSeriesFamilies()\r\n    },\r\n    _isZooming() {\r\n        var argumentAxis = this.getArgumentAxis();\r\n        if (!argumentAxis || !argumentAxis.getTranslator()) {\r\n            return false\r\n        }\r\n        var businessRange = argumentAxis.getTranslator().getBusinessRange();\r\n        var zoomRange = argumentAxis.getViewport();\r\n        var min = zoomRange ? zoomRange.min : 0;\r\n        var max = zoomRange ? zoomRange.max : 0;\r\n        if (\"logarithmic\" === businessRange.axisType) {\r\n            min = Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"getLog\"])(min, businessRange.base);\r\n            max = Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"getLog\"])(max, businessRange.base)\r\n        }\r\n        var viewportDistance = businessRange.axisType === DISCRETE ? Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"getCategoriesInfo\"])(businessRange.categories, min, max).categories.length : Math.abs(max - min);\r\n        var precision = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_10__[\"getPrecision\"])(viewportDistance);\r\n        precision = precision > 1 ? Math.pow(10, precision - 2) : 1;\r\n        var zoomChanged = Math.round((this._zoomLength - viewportDistance) * precision) / precision !== 0;\r\n        this._zoomLength = viewportDistance;\r\n        return zoomChanged\r\n    },\r\n    _handleSeriesDataUpdated: function() {\r\n        var that = this;\r\n        var viewport = new _translators_range__WEBPACK_IMPORTED_MODULE_18__[\"Range\"];\r\n        that.series.forEach((function(s) {\r\n            viewport.addRange(s.getArgumentRange())\r\n        }));\r\n        that._argumentAxes.forEach((function(axis) {\r\n            axis.updateCanvas(that._canvas, true);\r\n            axis.setBusinessRange(viewport, that._axesReinitialized)\r\n        }));\r\n        that.callBase()\r\n    },\r\n    _isLegendInside: function() {\r\n        return this._legend && \"inside\" === this._legend.getPosition()\r\n    },\r\n    _isRotated: function() {\r\n        return this._themeManager.getOptions(\"rotated\")\r\n    },\r\n    _getLayoutTargets: function() {\r\n        return this.panes\r\n    },\r\n    _applyClipRects: function(panesBorderOptions) {\r\n        this._drawPanesBorders(panesBorderOptions);\r\n        this._createClipRectsForPanes();\r\n        this._applyClipRectsForAxes();\r\n        this._fillPanesBackground()\r\n    },\r\n    _updateLegendPosition: function(drawOptions, legendHasInsidePosition) {\r\n        if (drawOptions.drawLegend && this._legend && legendHasInsidePosition) {\r\n            var panes = this.panes;\r\n            var newCanvas = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, panes[0].canvas);\r\n            var layoutManager = new _chart_components_layout_manager__WEBPACK_IMPORTED_MODULE_17__[\"LayoutManager\"];\r\n            newCanvas.right = panes[panes.length - 1].canvas.right;\r\n            newCanvas.bottom = panes[panes.length - 1].canvas.bottom;\r\n            layoutManager.layoutInsideLegend(this._legend, newCanvas)\r\n        }\r\n    },\r\n    _allowLegendInsidePosition: () => true,\r\n    _applyExtraSettings: function(series) {\r\n        var paneIndex = this._getPaneIndex(series.pane);\r\n        var panesClipRects = this._panesClipRects;\r\n        var wideClipRect = panesClipRects.wide[paneIndex];\r\n        series.setClippingParams(panesClipRects.base[paneIndex].id, wideClipRect && wideClipRect.id, this._getPaneBorderVisibility(paneIndex))\r\n    },\r\n    _updatePanesCanvases: function(drawOptions) {\r\n        if (!drawOptions.recreateCanvas) {\r\n            return\r\n        }\r\n        Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"updatePanesCanvases\"])(this.panes, this._canvas, this._isRotated())\r\n    },\r\n    _normalizePanesHeight: function() {\r\n        Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"normalizePanesHeight\"])(this.panes)\r\n    },\r\n    _renderScaleBreaks: function() {\r\n        this._valueAxes.concat(this._argumentAxes).forEach((function(axis) {\r\n            axis.drawScaleBreaks()\r\n        }))\r\n    },\r\n    _getArgFilter() {\r\n        return _series_helpers_range_data_calculator__WEBPACK_IMPORTED_MODULE_16__[\"default\"].getViewPortFilter(this.getArgumentAxis().visualRange() || {})\r\n    },\r\n    _applyPointMarkersAutoHiding() {\r\n        var that = this;\r\n        var allSeries = that.series;\r\n        if (!that._themeManager.getOptions(\"autoHidePointMarkers\")) {\r\n            allSeries.forEach(s => s.autoHidePointMarkers = false);\r\n            return\r\n        }\r\n        that.panes.forEach(_ref => {\r\n            var {\r\n                borderCoords: borderCoords,\r\n                name: name\r\n            } = _ref;\r\n            var series = allSeries.filter(s => s.pane === name && s.usePointsToDefineAutoHiding());\r\n            var argAxis = that.getArgumentAxis();\r\n            var markersInfo = collectMarkersInfoBySeries(allSeries, series, argAxis);\r\n            fastHidingPointMarkersByArea(borderCoords, markersInfo, series);\r\n            if (markersInfo.series.length) {\r\n                var argVisualRange = argAxis.visualRange();\r\n                var argAxisIsDiscrete = argAxis.getOptions().type === DISCRETE;\r\n                var sortingCallback = argAxisIsDiscrete ? (p1, p2) => argVisualRange.categories.indexOf(p1.argument) - argVisualRange.categories.indexOf(p2.argument) : (p1, p2) => p1.argument - p2.argument;\r\n                var points = [];\r\n                markersInfo.series.forEach(s => points = points.concat(s.points));\r\n                points.sort(sortingCallback);\r\n                updateMarkersInfo(points, markersInfo.overloadedSeries);\r\n                applyAutoHidePointMarkers(allSeries, series, markersInfo.overloadedSeries, argAxis)\r\n            }\r\n        })\r\n    },\r\n    _renderAxes: function(drawOptions, panesBorderOptions) {\r\n        function calculateTitlesWidth(axes) {\r\n            return axes.map(axis => {\r\n                if (!axis.getTitle) {\r\n                    return 0\r\n                }\r\n                var title = axis.getTitle();\r\n                return title ? title.bBox.width : 0\r\n            })\r\n        }\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var synchronizeMultiAxes = that._themeManager.getOptions(\"synchronizeMultiAxes\");\r\n        var scrollBar = that._scrollBar ? [that._scrollBar] : [];\r\n        var extendedArgAxes = that._isArgumentAxisBeforeScrollBar() ? that._argumentAxes.concat(scrollBar) : scrollBar.concat(that._argumentAxes);\r\n        var verticalAxes = rotated ? that._argumentAxes : that._valueAxes;\r\n        var verticalElements = rotated ? extendedArgAxes : that._valueAxes;\r\n        var horizontalAxes = rotated ? that._valueAxes : that._argumentAxes;\r\n        var horizontalElements = rotated ? that._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        var allElements = allAxes.concat(scrollBar);\r\n        var verticalAxesFirstDrawing = verticalAxes.some(v => v.isFirstDrawing());\r\n        that._normalizePanesHeight();\r\n        that._updatePanesCanvases(drawOptions);\r\n        var panesCanvases = that.panes.reduce((function(canvases, pane) {\r\n            canvases[pane.name] = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, pane.canvas);\r\n            return canvases\r\n        }), {});\r\n        var paneSizes = that.panes.reduce((sizes, pane) => {\r\n            sizes[pane.name] = {\r\n                height: pane.height,\r\n                unit: pane.unit\r\n            };\r\n            return sizes\r\n        }, {});\r\n        var cleanPanesCanvases = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(true, {}, panesCanvases);\r\n        that._initCustomPositioningAxes();\r\n        var needCustomAdjustAxes = that._axesBoundaryPositioning();\r\n        if (!drawOptions.adjustAxes && !needCustomAdjustAxes) {\r\n            drawAxesWithTicks(verticalAxes, !rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            drawAxesWithTicks(horizontalAxes, rotated && synchronizeMultiAxes, panesCanvases, panesBorderOptions);\r\n            performActionOnAxes(allAxes, \"prepareAnimation\");\r\n            that._renderScaleBreaks();\r\n            horizontalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(verticalAxes));\r\n            verticalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(horizontalAxes));\r\n            return false\r\n        }\r\n        if (needCustomAdjustAxes) {\r\n            allAxes.forEach(a => a.customPositionIsAvailable() && a.shift({\r\n                top: 0,\r\n                left: 0,\r\n                bottom: 0,\r\n                right: 0\r\n            }))\r\n        }\r\n        if (that._scrollBar) {\r\n            that._scrollBar.setPane(that.panes)\r\n        }\r\n        var vAxesMargins = {\r\n            panes: {}\r\n        };\r\n        var hAxesMargins = getHorizontalAxesMargins(horizontalElements, axis => axis.estimateMargins(panesCanvases[axis.pane]));\r\n        panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n        var drawAxesAndSetCanvases = isHorizontal => {\r\n            var axes = isHorizontal ? horizontalAxes : verticalAxes;\r\n            var condition = (isHorizontal ? rotated : !rotated) && synchronizeMultiAxes;\r\n            drawAxesWithTicks(axes, condition, panesCanvases, panesBorderOptions);\r\n            if (isHorizontal) {\r\n                hAxesMargins = getHorizontalAxesMargins(horizontalElements, getAxisMargins)\r\n            } else {\r\n                vAxesMargins = getVerticalAxesMargins(verticalElements)\r\n            }\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins)\r\n        };\r\n        drawAxesAndSetCanvases(false);\r\n        drawAxesAndSetCanvases(true);\r\n        if (!that._changesApplying && that._estimateTickIntervals(verticalAxes, panesCanvases)) {\r\n            drawAxesAndSetCanvases(false)\r\n        }\r\n        var oldTitlesWidth = calculateTitlesWidth(verticalAxes);\r\n        var visibleSeries = that._getVisibleSeries();\r\n        var pointsToAnimation = that._getPointsToAnimation(visibleSeries);\r\n        var axesIsAnimated = axisAnimationEnabled(drawOptions, pointsToAnimation);\r\n        performActionOnAxes(allElements, \"updateSize\", panesCanvases, axesIsAnimated);\r\n        horizontalElements.forEach(shiftAxis(\"top\", \"bottom\"));\r\n        verticalElements.forEach(shiftAxis(\"left\", \"right\"));\r\n        that._renderScaleBreaks();\r\n        that.panes.forEach((function(pane) {\r\n            Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(pane.canvas, panesCanvases[pane.name])\r\n        }));\r\n        that._valueAxes.forEach(axis => {\r\n            axis.setInitRange()\r\n        });\r\n        verticalAxes.forEach((axis, i) => {\r\n            var _axis$hasWrap;\r\n            if (null !== (_axis$hasWrap = axis.hasWrap) && void 0 !== _axis$hasWrap && _axis$hasWrap.call(axis)) {\r\n                var title = axis.getTitle();\r\n                var newTitleWidth = title ? title.bBox.width : 0;\r\n                var offset = newTitleWidth - oldTitlesWidth[i];\r\n                if (\"right\" === axis.getOptions().position) {\r\n                    vAxesMargins.right += offset\r\n                } else {\r\n                    vAxesMargins.left += offset;\r\n                    that.panes.forEach(_ref2 => {\r\n                        var {\r\n                            name: name\r\n                        } = _ref2;\r\n                        return vAxesMargins.panes[name].left += offset\r\n                    })\r\n                }\r\n                panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, vAxesMargins, hAxesMargins);\r\n                performActionOnAxes(allElements, \"updateSize\", panesCanvases, false, false);\r\n                oldTitlesWidth = calculateTitlesWidth(verticalAxes)\r\n            }\r\n        });\r\n        if (verticalAxes.some(v => v.customPositionIsAvailable() && v.getCustomPosition() !== v._axisPosition)) {\r\n            axesIsAnimated && that._resetAxesAnimation(verticalAxesFirstDrawing, false);\r\n            performActionOnAxes(verticalAxes, \"updateSize\", panesCanvases, axesIsAnimated)\r\n        }\r\n        horizontalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(verticalAxes));\r\n        verticalAxes.forEach(a => a.resolveOverlappingForCustomPositioning(horizontalAxes));\r\n        return cleanPanesCanvases\r\n    },\r\n    _getExtraTemplatesItems() {\r\n        var allAxes = (this._argumentAxes || []).concat(this._valueAxes || []);\r\n        var elements = this._collectTemplatesFromItems(allAxes);\r\n        return {\r\n            items: elements.items,\r\n            groups: elements.groups,\r\n            launchRequest() {\r\n                allAxes.forEach((function(a) {\r\n                    a.setRenderedState(true)\r\n                }))\r\n            },\r\n            doneRequest() {\r\n                allAxes.forEach((function(a) {\r\n                    a.setRenderedState(false)\r\n                }))\r\n            }\r\n        }\r\n    },\r\n    _estimateTickIntervals: (axes, canvases) => axes.some(axis => axis.estimateTickInterval(canvases[axis.pane])),\r\n    checkForMoreSpaceForPanesCanvas() {\r\n        var rotated = this._isRotated();\r\n        var panesAreCustomSized = this.panes.filter(p => p.unit).length === this.panes.length;\r\n        var needSpace = false;\r\n        if (panesAreCustomSized) {\r\n            var needHorizontalSpace = 0;\r\n            var needVerticalSpace = 0;\r\n            if (rotated) {\r\n                var argAxisRightMargin = this.getArgumentAxis().getMargins().right;\r\n                var rightPanesIndent = Math.min.apply(Math, this.panes.map(p => p.canvas.right));\r\n                needHorizontalSpace = this._canvas.right + argAxisRightMargin - rightPanesIndent\r\n            } else {\r\n                var argAxisBottomMargin = this.getArgumentAxis().getMargins().bottom;\r\n                var bottomPanesIndent = Math.min.apply(Math, this.panes.map(p => p.canvas.bottom));\r\n                needVerticalSpace = this._canvas.bottom + argAxisBottomMargin - bottomPanesIndent\r\n            }\r\n            needSpace = needHorizontalSpace > 0 || needVerticalSpace > 0 ? {\r\n                width: needHorizontalSpace,\r\n                height: needVerticalSpace\r\n            } : false;\r\n            if (0 !== needVerticalSpace) {\r\n                var realSize = this.getSize();\r\n                var customSize = this.option(\"size\");\r\n                var container = this._$element[0];\r\n                var containerHasStyledHeight = !!parseInt(container.style.height) || 0 !== this._containerInitialHeight;\r\n                if (!rotated && !(customSize && customSize.height) && !containerHasStyledHeight) {\r\n                    this._forceResize(realSize.width, realSize.height + needVerticalSpace);\r\n                    needSpace = false\r\n                }\r\n            }\r\n        } else {\r\n            needSpace = this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), rotated, pane => ({\r\n                width: rotated && !!pane.unit,\r\n                height: !rotated && !!pane.unit\r\n            }))\r\n        }\r\n        return needSpace\r\n    },\r\n    _forceResize(width, height) {\r\n        this._renderer.resize(width, height);\r\n        this._updateSize();\r\n        this._setContentSize();\r\n        this._preserveOriginalCanvas();\r\n        this._updateCanvasClipRect(this._canvas)\r\n    },\r\n    _shrinkAxes(sizeShortage, panesCanvases) {\r\n        if (!sizeShortage || !panesCanvases) {\r\n            return\r\n        }\r\n        this._renderer.stopAllAnimations(true);\r\n        var rotated = this._isRotated();\r\n        var scrollBar = this._scrollBar ? [this._scrollBar] : [];\r\n        var extendedArgAxes = this._isArgumentAxisBeforeScrollBar() ? this._argumentAxes.concat(scrollBar) : scrollBar.concat(this._argumentAxes);\r\n        var verticalAxes = rotated ? extendedArgAxes : this._valueAxes;\r\n        var horizontalAxes = rotated ? this._valueAxes : extendedArgAxes;\r\n        var allAxes = verticalAxes.concat(horizontalAxes);\r\n        if (sizeShortage.width || sizeShortage.height) {\r\n            checkUsedSpace(sizeShortage, \"height\", horizontalAxes, getHorizontalAxesMargins);\r\n            checkUsedSpace(sizeShortage, \"width\", verticalAxes, getVerticalAxesMargins);\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            var paneSizes = this.panes.reduce((sizes, pane) => {\r\n                sizes[pane.name] = {\r\n                    height: pane.height,\r\n                    unit: pane.unit\r\n                };\r\n                return sizes\r\n            }, {});\r\n            panesCanvases = shrinkCanvases(rotated, panesCanvases, paneSizes, getVerticalAxesMargins(verticalAxes), getHorizontalAxesMargins(horizontalAxes, getAxisMargins));\r\n            performActionOnAxes(allAxes, \"updateSize\", panesCanvases);\r\n            horizontalAxes.forEach(shiftAxis(\"top\", \"bottom\"));\r\n            verticalAxes.forEach(shiftAxis(\"left\", \"right\"));\r\n            this.panes.forEach(pane => Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(pane.canvas, panesCanvases[pane.name]))\r\n        }\r\n    },\r\n    _isArgumentAxisBeforeScrollBar() {\r\n        var argumentAxis = this.getArgumentAxis();\r\n        if (this._scrollBar) {\r\n            var _argumentAxis$getOpti;\r\n            var argAxisPosition = argumentAxis.getResolvedBoundaryPosition();\r\n            var argAxisLabelPosition = null === (_argumentAxis$getOpti = argumentAxis.getOptions().label) || void 0 === _argumentAxis$getOpti ? void 0 : _argumentAxis$getOpti.position;\r\n            var scrollBarPosition = this._scrollBar.getOptions().position;\r\n            return argumentAxis.hasNonBoundaryPosition() || scrollBarPosition === argAxisPosition && argAxisLabelPosition !== scrollBarPosition\r\n        }\r\n        return false\r\n    },\r\n    _getPanesParameters: function() {\r\n        var panes = this.panes;\r\n        var i;\r\n        var params = [];\r\n        for (i = 0; i < panes.length; i++) {\r\n            if (this._getPaneBorderVisibility(i)) {\r\n                params.push({\r\n                    coords: panes[i].borderCoords,\r\n                    clipRect: this._panesClipRects.fixed[i]\r\n                })\r\n            }\r\n        }\r\n        return params\r\n    },\r\n    _createCrosshairCursor: function() {\r\n        var options = this._themeManager.getOptions(\"crosshair\") || {};\r\n        var argumentAxis = this.getArgumentAxis();\r\n        var axes = !this._isRotated() ? [\r\n            [argumentAxis], this._valueAxes\r\n        ] : [this._valueAxes, [argumentAxis]];\r\n        var parameters = {\r\n            canvas: this._getCommonCanvas(),\r\n            panes: this._getPanesParameters(),\r\n            axes: axes\r\n        };\r\n        if (!options || !options.enabled) {\r\n            return\r\n        }\r\n        if (!this._crosshair) {\r\n            this._crosshair = new _chart_components_crosshair__WEBPACK_IMPORTED_MODULE_15__[\"Crosshair\"](this._renderer, options, parameters, this._crosshairCursorGroup)\r\n        } else {\r\n            this._crosshair.update(options, parameters)\r\n        }\r\n        this._crosshair.render()\r\n    },\r\n    _getCommonCanvas: function() {\r\n        var i;\r\n        var canvas;\r\n        var commonCanvas;\r\n        var panes = this.panes;\r\n        for (i = 0; i < panes.length; i++) {\r\n            canvas = panes[i].canvas;\r\n            if (!commonCanvas) {\r\n                commonCanvas = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, canvas)\r\n            } else {\r\n                commonCanvas.right = canvas.right;\r\n                commonCanvas.bottom = canvas.bottom\r\n            }\r\n        }\r\n        return commonCanvas\r\n    },\r\n    _createPanesBackground: function() {\r\n        var defaultBackgroundColor = this._themeManager.getOptions(\"commonPaneSettings\").backgroundColor;\r\n        var backgroundColor;\r\n        var renderer = this._renderer;\r\n        var rect;\r\n        var i;\r\n        var rects = [];\r\n        this._panesBackgroundGroup.clear();\r\n        for (i = 0; i < this.panes.length; i++) {\r\n            backgroundColor = this.panes[i].backgroundColor || defaultBackgroundColor;\r\n            if (!backgroundColor || \"none\" === backgroundColor) {\r\n                rects.push(null);\r\n                continue\r\n            }\r\n            rect = renderer.rect(0, 0, 0, 0).attr({\r\n                fill: backgroundColor,\r\n                \"stroke-width\": 0\r\n            }).append(this._panesBackgroundGroup);\r\n            rects.push(rect)\r\n        }\r\n        this.panesBackground = rects\r\n    },\r\n    _fillPanesBackground: function() {\r\n        var that = this;\r\n        var bc;\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(that.panes, (function(i, pane) {\r\n            bc = pane.borderCoords;\r\n            if (null !== that.panesBackground[i]) {\r\n                that.panesBackground[i].attr({\r\n                    x: bc.left,\r\n                    y: bc.top,\r\n                    width: bc.width,\r\n                    height: bc.height\r\n                })\r\n            }\r\n        }))\r\n    },\r\n    _calcPaneBorderCoords: function(pane) {\r\n        var canvas = pane.canvas;\r\n        var bc = pane.borderCoords = pane.borderCoords || {};\r\n        bc.left = canvas.left;\r\n        bc.top = canvas.top;\r\n        bc.right = canvas.width - canvas.right;\r\n        bc.bottom = canvas.height - canvas.bottom;\r\n        bc.width = Math.max(bc.right - bc.left, 0);\r\n        bc.height = Math.max(bc.bottom - bc.top, 0)\r\n    },\r\n    _drawPanesBorders: function(panesBorderOptions) {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        that._panesBorderGroup.linkRemove().clear();\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(that.panes, (function(i, pane) {\r\n            var borderOptions = panesBorderOptions[pane.name];\r\n            var attr = {\r\n                fill: \"none\",\r\n                stroke: borderOptions.color,\r\n                \"stroke-opacity\": borderOptions.opacity,\r\n                \"stroke-width\": borderOptions.width,\r\n                dashStyle: borderOptions.dashStyle,\r\n                \"stroke-linecap\": \"square\"\r\n            };\r\n            that._calcPaneBorderCoords(pane, rotated);\r\n            if (!borderOptions.visible) {\r\n                return\r\n            }\r\n            var bc = pane.borderCoords;\r\n            var segmentRectParams = Object(_utils__WEBPACK_IMPORTED_MODULE_7__[\"prepareSegmentRectPoints\"])(bc.left, bc.top, bc.width, bc.height, borderOptions);\r\n            that._renderer.path(segmentRectParams.points, segmentRectParams.pathType).attr(attr).append(that._panesBorderGroup)\r\n        }));\r\n        that._panesBorderGroup.linkAppend()\r\n    },\r\n    _createClipRect: function(clipArray, index, left, top, width, height) {\r\n        var clipRect = clipArray[index];\r\n        if (!clipRect) {\r\n            clipRect = this._renderer.clipRect(left, top, width, height);\r\n            clipArray[index] = clipRect\r\n        } else {\r\n            clipRect.attr({\r\n                x: left,\r\n                y: top,\r\n                width: width,\r\n                height: height\r\n            })\r\n        }\r\n    },\r\n    _createClipRectsForPanes: function() {\r\n        var that = this;\r\n        var canvas = that._canvas;\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(that.panes, (function(i, pane) {\r\n            var needWideClipRect = false;\r\n            var bc = pane.borderCoords;\r\n            var left = bc.left;\r\n            var top = bc.top;\r\n            var width = bc.width;\r\n            var height = bc.height;\r\n            var panesClipRects = that._panesClipRects;\r\n            that._createClipRect(panesClipRects.fixed, i, left, top, width, height);\r\n            that._createClipRect(panesClipRects.base, i, left, top, width, height);\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(that.series, (function(_, series) {\r\n                if (series.pane === pane.name && (series.isFinancialSeries() || series.areErrorBarsVisible())) {\r\n                    needWideClipRect = true\r\n                }\r\n            }));\r\n            if (needWideClipRect) {\r\n                if (that._isRotated()) {\r\n                    top = 0;\r\n                    height = canvas.height\r\n                } else {\r\n                    left = 0;\r\n                    width = canvas.width\r\n                }\r\n                that._createClipRect(panesClipRects.wide, i, left, top, width, height)\r\n            } else {\r\n                panesClipRects.wide[i] = null\r\n            }\r\n        }))\r\n    },\r\n    _applyClipRectsForAxes() {\r\n        var axes = this._getAllAxes();\r\n        var chartCanvasClipRectID = this._getCanvasClipRectID();\r\n        for (var i = 0; i < axes.length; i++) {\r\n            var elementsClipRectID = this._getElementsClipRectID(axes[i].pane);\r\n            axes[i].applyClipRects(elementsClipRectID, chartCanvasClipRectID)\r\n        }\r\n    },\r\n    _getPaneBorderVisibility: function(paneIndex) {\r\n        var commonPaneBorderVisible = this._themeManager.getOptions(\"commonPaneSettings\").border.visible;\r\n        var pane = this.panes[paneIndex] || {};\r\n        var paneBorder = pane.border || {};\r\n        return \"visible\" in paneBorder ? paneBorder.visible : commonPaneBorderVisible\r\n    },\r\n    _getCanvasForPane: function(paneName) {\r\n        var panes = this.panes;\r\n        var panesNumber = panes.length;\r\n        var i;\r\n        for (i = 0; i < panesNumber; i++) {\r\n            if (panes[i].name === paneName) {\r\n                return panes[i].canvas\r\n            }\r\n        }\r\n    },\r\n    _getTrackerSettings: function() {\r\n        var themeManager = this._themeManager;\r\n        return Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(this.callBase(), {\r\n            chart: this,\r\n            rotated: this._isRotated(),\r\n            crosshair: this._getCrosshairOptions().enabled ? this._crosshair : null,\r\n            stickyHovering: themeManager.getOptions(\"stickyHovering\")\r\n        })\r\n    },\r\n    _resolveLabelOverlappingStack: function() {\r\n        var that = this;\r\n        var isRotated = that._isRotated();\r\n        var shiftDirection = isRotated ? function(box, length) {\r\n            return {\r\n                x: box.x - length,\r\n                y: box.y\r\n            }\r\n        } : function(box, length) {\r\n            return {\r\n                x: box.x,\r\n                y: box.y - length\r\n            }\r\n        };\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(that._getStackPoints(), (function(_, stacks) {\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(stacks, (function(_, points) {\r\n                var isInverted = points[0].series.getValueAxis().getOptions().inverted;\r\n                _chart_components_base_chart__WEBPACK_IMPORTED_MODULE_11__[\"overlapping\"].resolveLabelOverlappingInOneDirection(points, that._getCommonCanvas(), isRotated, isInverted, shiftDirection, (a, b) => {\r\n                    var coordPosition = isRotated ? 1 : 0;\r\n                    var figureCenter1 = a.labels[0].getFigureCenter()[coordPosition];\r\n                    var figureCenter12 = b.labels[0].getFigureCenter()[coordPosition];\r\n                    if (figureCenter1 - figureCenter12 === 0) {\r\n                        return (a.value() - b.value()) * (a.labels[0].getPoint().series.getValueAxis().getTranslator().isInverted() ? -1 : 1)\r\n                    }\r\n                    return 0\r\n                })\r\n            }))\r\n        }))\r\n    },\r\n    _getStackPoints: function() {\r\n        var stackPoints = {};\r\n        var visibleSeries = this._getVisibleSeries();\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(visibleSeries, (function(_, singleSeries) {\r\n            var points = singleSeries.getPoints();\r\n            var stackName = singleSeries.getStackName() || null;\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_5__[\"each\"])(points, (function(_, point) {\r\n                var argument = point.argument;\r\n                if (!stackPoints[argument]) {\r\n                    stackPoints[argument] = {}\r\n                }\r\n                if (!stackPoints[argument][stackName]) {\r\n                    stackPoints[argument][stackName] = []\r\n                }\r\n                stackPoints[argument][stackName].push(point)\r\n            }))\r\n        }));\r\n        return stackPoints\r\n    },\r\n    _getCrosshairOptions: function() {\r\n        return this._getOption(\"crosshair\")\r\n    },\r\n    zoomArgument(min, max) {\r\n        if (!this._initialized || !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(min) && !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(max)) {\r\n            return\r\n        }\r\n        this.getArgumentAxis().visualRange([min, max])\r\n    },\r\n    resetVisualRange() {\r\n        var that = this;\r\n        var axes = that._argumentAxes;\r\n        var nonVirtualArgumentAxis = that.getArgumentAxis();\r\n        axes.forEach(axis => {\r\n            axis.resetVisualRange(nonVirtualArgumentAxis !== axis);\r\n            that._applyCustomVisualRangeOption(axis)\r\n        });\r\n        that.callBase()\r\n    },\r\n    getVisibleArgumentBounds: function() {\r\n        var translator = this._argumentAxes[0].getTranslator();\r\n        var range = translator.getBusinessRange();\r\n        var isDiscrete = range.axisType === DISCRETE;\r\n        var categories = range.categories;\r\n        return {\r\n            minVisible: isDiscrete ? range.minVisible || categories[0] : range.minVisible,\r\n            maxVisible: isDiscrete ? range.maxVisible || categories[categories.length - 1] : range.maxVisible\r\n        }\r\n    },\r\n    _change_FULL_RENDER() {\r\n        this.callBase();\r\n        if (this._changes.has(VISUAL_RANGE)) {\r\n            this._raiseZoomEndHandlers()\r\n        }\r\n    },\r\n    _getAxesForScaling() {\r\n        return [this.getArgumentAxis()].concat(this._valueAxes)\r\n    },\r\n    _applyVisualRangeByVirtualAxes(axis, range) {\r\n        if (axis.isArgumentAxis) {\r\n            if (axis !== this.getArgumentAxis()) {\r\n                return true\r\n            }\r\n            this._argumentAxes.filter(a => a !== axis).forEach(a => a.visualRange(range, {\r\n                start: true,\r\n                end: true\r\n            }))\r\n        }\r\n        return false\r\n    },\r\n    _raiseZoomEndHandlers() {\r\n        this._argumentAxes.forEach(axis => axis.handleZoomEnd());\r\n        this.callBase()\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(this._optionsByReference, {\r\n            \"argumentAxis.visualRange\": true\r\n        })\r\n    },\r\n    option() {\r\n        var option = this.callBase.apply(this, arguments);\r\n        var valueAxis = this._options.silent(\"valueAxis\");\r\n        if (\"array\" === Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"type\"])(valueAxis)) {\r\n            for (var i = 0; i < valueAxis.length; i++) {\r\n                var optionPath = \"valueAxis[\".concat(i, \"].visualRange\");\r\n                this._optionsByReference[optionPath] = true\r\n            }\r\n        }\r\n        return option\r\n    },\r\n    _notifyVisualRange() {\r\n        var argAxis = this._argumentAxes[0];\r\n        var argumentVisualRange = Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"convertVisualRangeObject\"])(argAxis.visualRange(), !_isArray(this.option(\"argumentAxis.visualRange\")));\r\n        if (!argAxis.skipEventRising || !Object(_core_utils__WEBPACK_IMPORTED_MODULE_8__[\"rangesAreEqual\"])(argumentVisualRange, this.option(\"argumentAxis.visualRange\"))) {\r\n            this.option(\"argumentAxis.visualRange\", argumentVisualRange)\r\n        } else {\r\n            argAxis.skipEventRising = null\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\n\r\n\r\n\r\ndxChart.addPlugin(_chart_components_shutter_zoom__WEBPACK_IMPORTED_MODULE_19__[\"default\"]);\r\ndxChart.addPlugin(_chart_components_zoom_and_pan__WEBPACK_IMPORTED_MODULE_20__[\"default\"]);\r\ndxChart.addPlugin(_core_annotations__WEBPACK_IMPORTED_MODULE_21__[\"plugins\"].core);\r\ndxChart.addPlugin(_core_annotations__WEBPACK_IMPORTED_MODULE_21__[\"plugins\"].chart);\r\nObject(_core_component_registrator__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\"dxChart\", dxChart);\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (dxChart);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/chart.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/chart_components/advanced_chart.js":
/*!****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/chart_components/advanced_chart.js ***!
  \****************************************************************************/
/*! exports provided: AdvancedChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AdvancedChart\", function() { return AdvancedChart; });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _core_utils_array__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/array */ \"./node_modules/devextreme/esm/core/utils/array.js\");\n/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/iterator */ \"./node_modules/devextreme/esm/core/utils/iterator.js\");\n/* harmony import */ var _translators_range__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../translators/range */ \"./node_modules/devextreme/esm/viz/translators/range.js\");\n/* harmony import */ var _axes_base_axis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../axes/base_axis */ \"./node_modules/devextreme/esm/viz/axes/base_axis.js\");\n/* harmony import */ var _core_series_family__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/series_family */ \"./node_modules/devextreme/esm/viz/core/series_family.js\");\n/* harmony import */ var _base_chart__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./base_chart */ \"./node_modules/devextreme/esm/viz/chart_components/base_chart.js\");\n/* harmony import */ var _series_helpers_range_data_calculator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../series/helpers/range_data_calculator */ \"./node_modules/devextreme/esm/viz/series/helpers/range_data_calculator.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/common */ \"./node_modules/devextreme/esm/core/utils/common.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/**\r\n * DevExtreme (esm/viz/chart_components/advanced_chart.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar _isArray = Array.isArray;\r\nvar DEFAULT_AXIS_NAME = \"defaultAxisName\";\r\nvar FONT = \"font\";\r\nvar COMMON_AXIS_SETTINGS = \"commonAxisSettings\";\r\nvar DEFAULT_PANE_NAME = \"default\";\r\nvar VISUAL_RANGE = \"VISUAL_RANGE\";\r\n\r\nfunction prepareAxis(axisOptions) {\r\n    return _isArray(axisOptions) ? 0 === axisOptions.length ? [{}] : axisOptions : [axisOptions]\r\n}\r\n\r\nfunction processBubbleMargin(opt, bubbleSize) {\r\n    if (opt.processBubbleSize) {\r\n        opt.size = bubbleSize\r\n    }\r\n    return opt\r\n}\r\n\r\nfunction estimateBubbleSize(size, panesCount, maxSize, rotated) {\r\n    var width = rotated ? size.width / panesCount : size.width;\r\n    var height = rotated ? size.height : size.height / panesCount;\r\n    return Math.min(width, height) * maxSize\r\n}\r\n\r\nfunction setAxisVisualRangeByOption(arg, axis, isDirectOption, index) {\r\n    var options;\r\n    var visualRange;\r\n    if (isDirectOption) {\r\n        visualRange = arg.value;\r\n        options = {\r\n            skipEventRising: true\r\n        };\r\n        var wrappedVisualRange = wrapVisualRange(arg.fullName, visualRange);\r\n        if (wrappedVisualRange) {\r\n            options = {\r\n                allowPartialUpdate: true\r\n            };\r\n            visualRange = wrappedVisualRange\r\n        }\r\n    } else {\r\n        visualRange = (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(index) ? arg.value[index] : arg.value).visualRange\r\n    }\r\n    axis.visualRange(visualRange, options)\r\n}\r\n\r\nfunction getAxisTypes(groupsData, axis, isArgumentAxes) {\r\n    if (isArgumentAxes) {\r\n        return {\r\n            argumentAxisType: groupsData.argumentAxisType,\r\n            argumentType: groupsData.argumentType\r\n        }\r\n    }\r\n    var {\r\n        valueAxisType: valueAxisType,\r\n        valueType: valueType\r\n    } = groupsData.groups.filter(g => g.valueAxis === axis)[0];\r\n    return {\r\n        valueAxisType: valueAxisType,\r\n        valueType: valueType\r\n    }\r\n}\r\n\r\nfunction wrapVisualRange(fullName, value) {\r\n    var pathElements = fullName.split(\".\");\r\n    var destElem = pathElements[pathElements.length - 1];\r\n    if (\"endValue\" === destElem || \"startValue\" === destElem) {\r\n        return {\r\n            [destElem]: value\r\n        }\r\n    }\r\n}\r\nvar AdvancedChart = _base_chart__WEBPACK_IMPORTED_MODULE_7__[\"BaseChart\"].inherit({\r\n    _fontFields: [COMMON_AXIS_SETTINGS + \".label.\" + FONT, COMMON_AXIS_SETTINGS + \".title.\" + FONT],\r\n    _partialOptionChangesMap: {\r\n        visualRange: VISUAL_RANGE,\r\n        _customVisualRange: VISUAL_RANGE,\r\n        strips: \"REFRESH_AXES\",\r\n        constantLines: \"REFRESH_AXES\"\r\n    },\r\n    _partialOptionChangesPath: {\r\n        argumentAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"],\r\n        valueAxis: [\"strips\", \"constantLines\", \"visualRange\", \"_customVisualRange\"]\r\n    },\r\n    _initCore() {\r\n        this._panesClipRects = {};\r\n        this.callBase()\r\n    },\r\n    _disposeCore() {\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        var panesClipRects = this._panesClipRects;\r\n        this.callBase();\r\n        disposeObjectsInArray.call(panesClipRects, \"fixed\");\r\n        disposeObjectsInArray.call(panesClipRects, \"base\");\r\n        disposeObjectsInArray.call(panesClipRects, \"wide\");\r\n        this._panesClipRects = null;\r\n        this._labelsAxesGroup.linkOff();\r\n        this._labelsAxesGroup.dispose();\r\n        this._labelsAxesGroup = null\r\n    },\r\n    _dispose: function() {\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        this.callBase();\r\n        this.panes = null;\r\n        if (this._legend) {\r\n            this._legend.dispose();\r\n            this._legend = null\r\n        }\r\n        disposeObjectsInArray.call(this, \"panesBackground\");\r\n        disposeObjectsInArray.call(this, \"seriesFamilies\");\r\n        this._disposeAxes()\r\n    },\r\n    _createPanes: function() {\r\n        this._cleanPanesClipRects(\"fixed\");\r\n        this._cleanPanesClipRects(\"base\");\r\n        this._cleanPanesClipRects(\"wide\")\r\n    },\r\n    _cleanPanesClipRects(clipArrayName) {\r\n        var clipArray = this._panesClipRects[clipArrayName];\r\n        (clipArray || []).forEach(clipRect => clipRect && clipRect.dispose());\r\n        this._panesClipRects[clipArrayName] = []\r\n    },\r\n    _getElementsClipRectID(paneName) {\r\n        var clipShape = this._panesClipRects.fixed[this._getPaneIndex(paneName)];\r\n        return clipShape && clipShape.id\r\n    },\r\n    _getPaneIndex(paneName) {\r\n        var paneIndex;\r\n        var name = paneName || DEFAULT_PANE_NAME;\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(this.panes, (index, pane) => {\r\n            if (pane.name === name) {\r\n                paneIndex = index;\r\n                return false\r\n            }\r\n        });\r\n        return paneIndex\r\n    },\r\n    _updateSize() {\r\n        this.callBase();\r\n        Object(_core_utils__WEBPACK_IMPORTED_MODULE_11__[\"setCanvasValues\"])(this._canvas)\r\n    },\r\n    _reinitAxes: function() {\r\n        this.panes = this._createPanes();\r\n        this._populateAxes();\r\n        this._axesReinitialized = true\r\n    },\r\n    _populateAxes() {\r\n        var that = this;\r\n        var panes = that.panes;\r\n        var rotated = that._isRotated();\r\n        var argumentAxesOptions = prepareAxis(that.option(\"argumentAxis\") || {})[0];\r\n        var valueAxisOption = that.option(\"valueAxis\");\r\n        var valueAxesOptions = prepareAxis(valueAxisOption || {});\r\n        var argumentAxesPopulatedOptions;\r\n        var valueAxesPopulatedOptions = [];\r\n        var axisNames = [];\r\n        var valueAxesCounter = 0;\r\n        var paneWithNonVirtualAxis;\r\n        var crosshairMargins = that._getCrosshairMargins();\r\n        if (rotated) {\r\n            paneWithNonVirtualAxis = \"right\" === argumentAxesOptions.position ? panes[panes.length - 1].name : panes[0].name\r\n        } else {\r\n            paneWithNonVirtualAxis = \"top\" === argumentAxesOptions.position ? panes[0].name : panes[panes.length - 1].name\r\n        }\r\n        argumentAxesPopulatedOptions = Object(_core_utils__WEBPACK_IMPORTED_MODULE_11__[\"map\"])(panes, pane => {\r\n            var virtual = pane.name !== paneWithNonVirtualAxis;\r\n            return that._populateAxesOptions(\"argumentAxis\", argumentAxesOptions, {\r\n                pane: pane.name,\r\n                name: null,\r\n                optionPath: \"argumentAxis\",\r\n                crosshairMargin: rotated ? crosshairMargins.x : crosshairMargins.y\r\n            }, rotated, virtual)\r\n        });\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(valueAxesOptions, (priority, axisOptions) => {\r\n            var _axisOptions$panes;\r\n            var axisPanes = [];\r\n            var name = axisOptions.name;\r\n            if (name && -1 !== Object(_core_utils_array__WEBPACK_IMPORTED_MODULE_2__[\"inArray\"])(name, axisNames)) {\r\n                that._incidentOccurred(\"E2102\");\r\n                return\r\n            }\r\n            name && axisNames.push(name);\r\n            if (axisOptions.pane) {\r\n                axisPanes.push(axisOptions.pane)\r\n            }\r\n            if (null !== (_axisOptions$panes = axisOptions.panes) && void 0 !== _axisOptions$panes && _axisOptions$panes.length) {\r\n                axisPanes = axisPanes.concat(axisOptions.panes.slice(0))\r\n            }\r\n            axisPanes = Object(_core_utils__WEBPACK_IMPORTED_MODULE_11__[\"unique\"])(axisPanes);\r\n            if (!axisPanes.length) {\r\n                axisPanes.push(void 0)\r\n            }\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(axisPanes, (_, pane) => {\r\n                var optionPath = _isArray(valueAxisOption) ? \"valueAxis[\".concat(priority, \"]\") : \"valueAxis\";\r\n                valueAxesPopulatedOptions.push(that._populateAxesOptions(\"valueAxis\", axisOptions, {\r\n                    name: name || DEFAULT_AXIS_NAME + valueAxesCounter++,\r\n                    pane: pane,\r\n                    priority: priority,\r\n                    optionPath: optionPath,\r\n                    crosshairMargin: rotated ? crosshairMargins.y : crosshairMargins.x\r\n                }, rotated))\r\n            })\r\n        });\r\n        that._redesignAxes(argumentAxesPopulatedOptions, true, paneWithNonVirtualAxis);\r\n        that._redesignAxes(valueAxesPopulatedOptions, false)\r\n    },\r\n    _redesignAxes(options, isArgumentAxes, paneWithNonVirtualAxis) {\r\n        var that = this;\r\n        var axesBasis = [];\r\n        var axes = isArgumentAxes ? that._argumentAxes : that._valueAxes;\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(options, (_, opt) => {\r\n            var curAxes = axes && axes.filter(a => a.name === opt.name && (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(opt.pane) && that.panes.some(p => p.name === a.pane) || a.pane === opt.pane));\r\n            if (curAxes && curAxes.length > 0) {\r\n                Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(curAxes, (_, axis) => {\r\n                    var axisTypes = getAxisTypes(that._groupsData, axis, isArgumentAxes);\r\n                    axis.updateOptions(opt);\r\n                    if (isArgumentAxes) {\r\n                        axis.setTypes(axisTypes.argumentAxisType, axisTypes.argumentType, \"argumentType\")\r\n                    } else {\r\n                        axis.setTypes(axisTypes.valueAxisType, axisTypes.valueType, \"valueType\")\r\n                    }\r\n                    axis.validate();\r\n                    axesBasis.push({\r\n                        axis: axis\r\n                    })\r\n                })\r\n            } else {\r\n                axesBasis.push({\r\n                    options: opt\r\n                })\r\n            }\r\n        });\r\n        if (axes) {\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"reverseEach\"])(axes, (index, axis) => {\r\n                if (!axesBasis.some(basis => basis.axis && basis.axis === axis)) {\r\n                    that._disposeAxis(index, isArgumentAxes)\r\n                }\r\n            })\r\n        } else if (isArgumentAxes) {\r\n            axes = that._argumentAxes = []\r\n        } else {\r\n            axes = that._valueAxes = []\r\n        }\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(axesBasis, (_, basis) => {\r\n            var axis = basis.axis;\r\n            if (basis.axis && isArgumentAxes) {\r\n                basis.axis.isVirtual = basis.axis.pane !== paneWithNonVirtualAxis\r\n            } else if (basis.options) {\r\n                axis = that._createAxis(isArgumentAxes, basis.options, isArgumentAxes ? basis.options.pane !== paneWithNonVirtualAxis : void 0);\r\n                axes.push(axis)\r\n            }\r\n            axis.applyVisualRangeSetter(that._getVisualRangeSetter())\r\n        })\r\n    },\r\n    _disposeAxis(index, isArgumentAxis) {\r\n        var axes = isArgumentAxis ? this._argumentAxes : this._valueAxes;\r\n        var axis = axes[index];\r\n        if (!axis) {\r\n            return\r\n        }\r\n        axis.dispose();\r\n        axes.splice(index, 1)\r\n    },\r\n    _disposeAxes: function() {\r\n        var disposeObjectsInArray = this._disposeObjectsInArray;\r\n        disposeObjectsInArray.call(this, \"_argumentAxes\");\r\n        disposeObjectsInArray.call(this, \"_valueAxes\")\r\n    },\r\n    _appendAdditionalSeriesGroups: function() {\r\n        this._crosshairCursorGroup.linkAppend();\r\n        this._scrollBar && this._scrollBarGroup.linkAppend()\r\n    },\r\n    _getLegendTargets: function() {\r\n        return (this.series || []).map(s => {\r\n            var item = this._getLegendOptions(s);\r\n            item.legendData.series = s;\r\n            if (!s.getOptions().showInLegend) {\r\n                item.legendData.visible = false\r\n            }\r\n            return item\r\n        })\r\n    },\r\n    _legendItemTextField: \"name\",\r\n    _seriesPopulatedHandlerCore: function() {\r\n        this._processSeriesFamilies();\r\n        this._processValueAxisFormat()\r\n    },\r\n    _renderTrackers: function() {\r\n        var i;\r\n        for (i = 0; i < this.series.length; ++i) {\r\n            this.series[i].drawTrackers()\r\n        }\r\n    },\r\n    _specialProcessSeries: function() {\r\n        this._processSeriesFamilies()\r\n    },\r\n    _processSeriesFamilies: function() {\r\n        var _that$seriesFamilies;\r\n        var that = this;\r\n        var types = [];\r\n        var families = [];\r\n        var paneSeries;\r\n        var themeManager = that._themeManager;\r\n        var negativesAsZeroes = themeManager.getOptions(\"negativesAsZeroes\");\r\n        var negativesAsZeros = themeManager.getOptions(\"negativesAsZeros\");\r\n        var familyOptions = {\r\n            minBubbleSize: themeManager.getOptions(\"minBubbleSize\"),\r\n            maxBubbleSize: themeManager.getOptions(\"maxBubbleSize\"),\r\n            barGroupPadding: themeManager.getOptions(\"barGroupPadding\"),\r\n            barGroupWidth: themeManager.getOptions(\"barGroupWidth\"),\r\n            negativesAsZeroes: Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(negativesAsZeroes) ? negativesAsZeroes : negativesAsZeros\r\n        };\r\n        if (null !== (_that$seriesFamilies = that.seriesFamilies) && void 0 !== _that$seriesFamilies && _that$seriesFamilies.length) {\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(that.seriesFamilies, (function(_, family) {\r\n                family.updateOptions(familyOptions);\r\n                family.adjustSeriesValues()\r\n            }));\r\n            return\r\n        }\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(that.series, (function(_, item) {\r\n            if (-1 === Object(_core_utils_array__WEBPACK_IMPORTED_MODULE_2__[\"inArray\"])(item.type, types)) {\r\n                types.push(item.type)\r\n            }\r\n        }));\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(that._getLayoutTargets(), (function(_, pane) {\r\n            paneSeries = that._getSeriesForPane(pane.name);\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(types, (function(_, type) {\r\n                var family = new _core_series_family__WEBPACK_IMPORTED_MODULE_6__[\"SeriesFamily\"]({\r\n                    type: type,\r\n                    pane: pane.name,\r\n                    minBubbleSize: familyOptions.minBubbleSize,\r\n                    maxBubbleSize: familyOptions.maxBubbleSize,\r\n                    barGroupPadding: familyOptions.barGroupPadding,\r\n                    barGroupWidth: familyOptions.barGroupWidth,\r\n                    negativesAsZeroes: familyOptions.negativesAsZeroes,\r\n                    rotated: that._isRotated()\r\n                });\r\n                family.add(paneSeries);\r\n                family.adjustSeriesValues();\r\n                families.push(family)\r\n            }))\r\n        }));\r\n        that.seriesFamilies = families\r\n    },\r\n    _updateSeriesDimensions: function() {\r\n        var i;\r\n        var seriesFamilies = this.seriesFamilies || [];\r\n        for (i = 0; i < seriesFamilies.length; i++) {\r\n            var family = seriesFamilies[i];\r\n            family.updateSeriesValues();\r\n            family.adjustSeriesDimensions()\r\n        }\r\n    },\r\n    _getLegendCallBack: function(series) {\r\n        return this._legend && this._legend.getActionCallback(series)\r\n    },\r\n    _appendAxesGroups: function() {\r\n        this._stripsGroup.linkAppend();\r\n        this._gridGroup.linkAppend();\r\n        this._axesGroup.linkAppend();\r\n        this._labelsAxesGroup.linkAppend();\r\n        this._constantLinesGroup.linkAppend();\r\n        this._stripLabelAxesGroup.linkAppend();\r\n        this._scaleBreaksGroup.linkAppend()\r\n    },\r\n    _populateMarginOptions() {\r\n        var that = this;\r\n        var bubbleSize = estimateBubbleSize(that.getSize(), that.panes.length, that._themeManager.getOptions(\"maxBubbleSize\"), that._isRotated());\r\n        var argumentMarginOptions = {};\r\n        that._valueAxes.forEach(valueAxis => {\r\n            var groupSeries = that.series.filter((function(series) {\r\n                return series.getValueAxis() === valueAxis\r\n            }));\r\n            var marginOptions = {};\r\n            groupSeries.forEach(series => {\r\n                if (series.isVisible()) {\r\n                    var seriesMarginOptions = processBubbleMargin(series.getMarginOptions(), bubbleSize);\r\n                    marginOptions = Object(_core_utils__WEBPACK_IMPORTED_MODULE_11__[\"mergeMarginOptions\"])(marginOptions, seriesMarginOptions);\r\n                    argumentMarginOptions = Object(_core_utils__WEBPACK_IMPORTED_MODULE_11__[\"mergeMarginOptions\"])(argumentMarginOptions, seriesMarginOptions)\r\n                }\r\n            });\r\n            valueAxis.setMarginOptions(marginOptions)\r\n        });\r\n        that._argumentAxes.forEach(a => a.setMarginOptions(argumentMarginOptions))\r\n    },\r\n    _populateBusinessRange(updatedAxis, keepRange) {\r\n        var that = this;\r\n        var rotated = that._isRotated();\r\n        var series = that._getVisibleSeries();\r\n        var argRanges = {};\r\n        var commonArgRange = new _translators_range__WEBPACK_IMPORTED_MODULE_4__[\"Range\"]({\r\n            rotated: !!rotated\r\n        });\r\n        var getPaneName = axis => axis.pane || DEFAULT_PANE_NAME;\r\n        that.panes.forEach(p => argRanges[p.name] = new _translators_range__WEBPACK_IMPORTED_MODULE_4__[\"Range\"]({\r\n            rotated: !!rotated\r\n        }));\r\n        that._valueAxes.forEach(valueAxis => {\r\n            var groupRange = new _translators_range__WEBPACK_IMPORTED_MODULE_4__[\"Range\"]({\r\n                rotated: !!rotated,\r\n                pane: valueAxis.pane,\r\n                axis: valueAxis.name\r\n            });\r\n            var groupSeries = series.filter(series => series.getValueAxis() === valueAxis);\r\n            groupSeries.forEach(series => {\r\n                var seriesRange = series.getRangeData();\r\n                groupRange.addRange(seriesRange.val);\r\n                argRanges[getPaneName(valueAxis)].addRange(seriesRange.arg)\r\n            });\r\n            if (!updatedAxis || updatedAxis && groupSeries.length && valueAxis === updatedAxis) {\r\n                valueAxis.setGroupSeries(groupSeries);\r\n                valueAxis.setBusinessRange(groupRange, that._axesReinitialized || keepRange, that._argumentAxes[0]._lastVisualRangeUpdateMode)\r\n            }\r\n        });\r\n        if (!updatedAxis || updatedAxis && series.length) {\r\n            Object.keys(argRanges).forEach(p => commonArgRange.addRange(argRanges[p]));\r\n            var commonInterval = commonArgRange.interval;\r\n            that._argumentAxes.forEach(a => {\r\n                var _argRanges$getPaneNam;\r\n                var currentInterval = null !== (_argRanges$getPaneNam = argRanges[getPaneName(a)].interval) && void 0 !== _argRanges$getPaneNam ? _argRanges$getPaneNam : commonInterval;\r\n                a.setBusinessRange(new _translators_range__WEBPACK_IMPORTED_MODULE_4__[\"Range\"](Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, commonArgRange, {\r\n                    interval: currentInterval\r\n                })), that._axesReinitialized, void 0, that._groupsData.categories)\r\n            })\r\n        }\r\n        that._populateMarginOptions()\r\n    },\r\n    getArgumentAxis: function() {\r\n        return (this._argumentAxes || []).filter(a => !a.isVirtual)[0]\r\n    },\r\n    getValueAxis: function(name) {\r\n        return (this._valueAxes || []).filter(Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(name) ? a => a.name === name : a => a.pane === this.defaultPane)[0]\r\n    },\r\n    _getGroupsData: function() {\r\n        var that = this;\r\n        var groups = [];\r\n        that._valueAxes.forEach((function(axis) {\r\n            groups.push({\r\n                series: that.series.filter((function(series) {\r\n                    return series.getValueAxis() === axis\r\n                })),\r\n                valueAxis: axis,\r\n                valueOptions: axis.getOptions()\r\n            })\r\n        }));\r\n        return {\r\n            groups: groups,\r\n            argumentAxes: that._argumentAxes,\r\n            argumentOptions: that._argumentAxes[0].getOptions()\r\n        }\r\n    },\r\n    _groupSeries: function() {\r\n        this._correctValueAxes(false);\r\n        this._groupsData = this._getGroupsData()\r\n    },\r\n    _processValueAxisFormat: function() {\r\n        var axesWithFullStackedFormat = [];\r\n        this.series.forEach((function(series) {\r\n            var axis = series.getValueAxis();\r\n            if (series.isFullStackedSeries()) {\r\n                axis.setPercentLabelFormat();\r\n                axesWithFullStackedFormat.push(axis)\r\n            }\r\n        }));\r\n        this._valueAxes.forEach((function(axis) {\r\n            if (-1 === axesWithFullStackedFormat.indexOf(axis)) {\r\n                axis.resetAutoLabelFormat()\r\n            }\r\n        }))\r\n    },\r\n    _populateAxesOptions(typeSelector, userOptions, axisOptions, rotated, virtual) {\r\n        var preparedUserOptions = this._prepareStripsAndConstantLines(typeSelector, userOptions, rotated);\r\n        var options = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(true, {}, preparedUserOptions, axisOptions, this._prepareAxisOptions(typeSelector, preparedUserOptions, rotated));\r\n        if (virtual) {\r\n            options.visible = options.tick.visible = options.minorTick.visible = options.label.visible = false;\r\n            options.title = {}\r\n        }\r\n        return options\r\n    },\r\n    _getValFilter: series => _series_helpers_range_data_calculator__WEBPACK_IMPORTED_MODULE_8__[\"default\"].getViewPortFilter(series.getValueAxis().visualRange() || {}),\r\n    _createAxis(isArgumentAxes, options, virtual) {\r\n        var that = this;\r\n        var typeSelector = isArgumentAxes ? \"argumentAxis\" : \"valueAxis\";\r\n        var renderingSettings = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])({\r\n            renderer: that._renderer,\r\n            incidentOccurred: that._incidentOccurred,\r\n            eventTrigger: that._eventTrigger,\r\n            axisClass: isArgumentAxes ? \"arg\" : \"val\",\r\n            widgetClass: \"dxc\",\r\n            stripsGroup: that._stripsGroup,\r\n            stripLabelAxesGroup: that._stripLabelAxesGroup,\r\n            constantLinesGroup: that._constantLinesGroup,\r\n            scaleBreaksGroup: that._scaleBreaksGroup,\r\n            axesContainerGroup: that._axesGroup,\r\n            labelsAxesGroup: that._labelsAxesGroup,\r\n            gridGroup: that._gridGroup,\r\n            isArgumentAxis: isArgumentAxes,\r\n            getTemplate: template => that._getTemplate(template)\r\n        }, that._getAxisRenderingOptions(typeSelector));\r\n        var axis = new _axes_base_axis__WEBPACK_IMPORTED_MODULE_5__[\"Axis\"](renderingSettings);\r\n        axis.updateOptions(options);\r\n        axis.isVirtual = virtual;\r\n        return axis\r\n    },\r\n    _applyVisualRangeByVirtualAxes: (axis, range) => false,\r\n    _applyCustomVisualRangeOption(axis, range) {\r\n        if (axis.getOptions().optionPath) {\r\n            this._parseVisualRangeOption(\"\".concat(axis.getOptions().optionPath, \".visualRange\"), range)\r\n        }\r\n    },\r\n    _getVisualRangeSetter() {\r\n        var chart = this;\r\n        return function(axis, _ref) {\r\n            var {\r\n                skipEventRising: skipEventRising,\r\n                range: range\r\n            } = _ref;\r\n            chart._applyCustomVisualRangeOption(axis, range);\r\n            axis.setCustomVisualRange(range);\r\n            axis.skipEventRising = skipEventRising;\r\n            if (!chart._applyVisualRangeByVirtualAxes(axis, range)) {\r\n                if (chart._applyingChanges) {\r\n                    chart._change_VISUAL_RANGE()\r\n                } else {\r\n                    chart._requestChange([VISUAL_RANGE])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getTrackerSettings: function() {\r\n        return Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(this.callBase(), {\r\n            argumentAxis: this.getArgumentAxis()\r\n        })\r\n    },\r\n    _prepareStripsAndConstantLines: function(typeSelector, userOptions, rotated) {\r\n        userOptions = this._themeManager.getOptions(typeSelector, userOptions, rotated);\r\n        if (userOptions.strips) {\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(userOptions.strips, (function(i) {\r\n                userOptions.strips[i] = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(true, {}, userOptions.stripStyle, userOptions.strips[i])\r\n            }))\r\n        }\r\n        if (userOptions.constantLines) {\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_3__[\"each\"])(userOptions.constantLines, (function(i, line) {\r\n                userOptions.constantLines[i] = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(true, {}, userOptions.constantLineStyle, line)\r\n            }))\r\n        }\r\n        return userOptions\r\n    },\r\n    refresh: function() {\r\n        this._disposeAxes();\r\n        this.callBase()\r\n    },\r\n    _layoutAxes(drawAxes) {\r\n        drawAxes();\r\n        var needSpace = this.checkForMoreSpaceForPanesCanvas();\r\n        if (needSpace) {\r\n            var rect = this._rect.slice();\r\n            var size = this._layout.backward(rect, rect, [needSpace.width, needSpace.height]);\r\n            needSpace.width = Math.max(0, size[0]);\r\n            needSpace.height = Math.max(0, size[1]);\r\n            this._canvas = this._createCanvasFromRect(rect);\r\n            drawAxes(needSpace)\r\n        }\r\n    },\r\n    checkForMoreSpaceForPanesCanvas() {\r\n        return this.layoutManager.needMoreSpaceForPanesCanvas(this._getLayoutTargets(), this._isRotated())\r\n    },\r\n    _parseVisualRangeOption(fullName, value) {\r\n        var that = this;\r\n        var name = fullName.split(/[.[]/)[0];\r\n        var index = fullName.match(/\\d+/g);\r\n        index = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(index) ? parseInt(index[0]) : index;\r\n        if (fullName.indexOf(\"visualRange\") > 0) {\r\n            if (\"object\" !== Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"type\"])(value)) {\r\n                value = wrapVisualRange(fullName, value) || value\r\n            }\r\n            that._setCustomVisualRange(name, index, value)\r\n        } else if ((\"object\" === Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"type\"])(value) || _isArray(value)) && name.indexOf(\"Axis\") > 0 && JSON.stringify(value).indexOf(\"visualRange\") > 0) {\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(value.visualRange)) {\r\n                that._setCustomVisualRange(name, index, value.visualRange)\r\n            } else if (_isArray(value)) {\r\n                value.forEach((a, i) => Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(a.visualRange) && that._setCustomVisualRange(name, i, a.visualRange))\r\n            }\r\n        }\r\n    },\r\n    _setCustomVisualRange(axesName, index, value) {\r\n        var options = this._options.silent(axesName);\r\n        if (!options) {\r\n            return\r\n        }\r\n        if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(index)) {\r\n            options._customVisualRange = value\r\n        } else {\r\n            options[index]._customVisualRange = value\r\n        }\r\n        this._axesReinitialized = true\r\n    },\r\n    _raiseZoomEndHandlers() {\r\n        this._valueAxes.forEach(axis => axis.handleZoomEnd())\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(this._optionsByReference, {\r\n            \"valueAxis.visualRange\": true\r\n        })\r\n    },\r\n    _notifyOptionChanged(option, value, previousValue) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._optionChangedLocker) {\r\n            this._parseVisualRangeOption(option, value)\r\n        }\r\n    },\r\n    _notifyVisualRange() {\r\n        var that = this;\r\n        that._valueAxes.forEach(axis => {\r\n            var axisPath = axis.getOptions().optionPath;\r\n            if (axisPath) {\r\n                var path = \"\".concat(axisPath, \".visualRange\");\r\n                var visualRange = Object(_core_utils__WEBPACK_IMPORTED_MODULE_11__[\"convertVisualRangeObject\"])(axis.visualRange(), !_isArray(that.option(path)));\r\n                if (!axis.skipEventRising || !Object(_core_utils__WEBPACK_IMPORTED_MODULE_11__[\"rangesAreEqual\"])(visualRange, that.option(path))) {\r\n                    if (!that.option(axisPath) && \"valueAxis\" !== axisPath) {\r\n                        that.option(axisPath, {\r\n                            name: axis.name,\r\n                            visualRange: visualRange\r\n                        })\r\n                    } else {\r\n                        that.option(path, visualRange)\r\n                    }\r\n                } else {\r\n                    axis.skipEventRising = null\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _notify() {\r\n        this.callBase();\r\n        this._axesReinitialized = false;\r\n        if (true !== this.option(\"disableTwoWayBinding\")) {\r\n            this.skipOptionsRollBack = true;\r\n            this._notifyVisualRange();\r\n            this.skipOptionsRollBack = false\r\n        }\r\n    },\r\n    _getAxesForScaling() {\r\n        return this._valueAxes\r\n    },\r\n    _getAxesByOptionPath(arg, isDirectOption, optionName) {\r\n        var sourceAxes = this._getAxesForScaling();\r\n        var axes = [];\r\n        if (isDirectOption) {\r\n            var axisPath;\r\n            if (arg.fullName) {\r\n                axisPath = arg.fullName.slice(0, arg.fullName.indexOf(\".\"))\r\n            }\r\n            axes = sourceAxes.filter(a => a.getOptions().optionPath === axisPath)\r\n        } else if (\"object\" === Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"type\"])(arg.value)) {\r\n            axes = sourceAxes.filter(a => a.getOptions().optionPath === arg.name)\r\n        } else if (_isArray(arg.value)) {\r\n            arg.value.forEach((v, index) => {\r\n                var axis = sourceAxes.filter(a => a.getOptions().optionPath === \"\".concat(arg.name, \"[\").concat(index, \"]\"))[0];\r\n                Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(v[optionName]) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(axis) && (axes[index] = axis)\r\n            })\r\n        }\r\n        return axes\r\n    },\r\n    _optionChanged(arg) {\r\n        if (!this._optionChangedLocker) {\r\n            var axes;\r\n            var isDirectOption = arg.fullName.indexOf(\"visualRange\") > 0 ? true : this.getPartialChangeOptionsName(arg).indexOf(\"visualRange\") > -1 ? false : void 0;\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_9__[\"isDefined\"])(isDirectOption)) {\r\n                axes = this._getAxesByOptionPath(arg, isDirectOption, \"visualRange\");\r\n                if (axes) {\r\n                    if (axes.length > 1 || _isArray(arg.value)) {\r\n                        axes.forEach((a, index) => setAxisVisualRangeByOption(arg, a, isDirectOption, index))\r\n                    } else if (1 === axes.length) {\r\n                        setAxisVisualRangeByOption(arg, axes[0], isDirectOption)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.callBase(arg)\r\n    },\r\n    _change_VISUAL_RANGE: function() {\r\n        this._recreateSizeDependentObjects(false);\r\n        if (!this._changes.has(\"FULL_RENDER\")) {\r\n            var resizePanesOnZoom = this.option(\"resizePanesOnZoom\");\r\n            this._doRender({\r\n                force: true,\r\n                drawTitle: false,\r\n                drawLegend: false,\r\n                adjustAxes: null !== resizePanesOnZoom && void 0 !== resizePanesOnZoom ? resizePanesOnZoom : this.option(\"adjustAxesOnZoom\") || false,\r\n                animate: false\r\n            });\r\n            this._raiseZoomEndHandlers()\r\n        }\r\n    },\r\n    resetVisualRange() {\r\n        var that = this;\r\n        that._valueAxes.forEach(axis => {\r\n            axis.resetVisualRange(false);\r\n            that._applyCustomVisualRangeOption(axis)\r\n        });\r\n        that._requestChange([VISUAL_RANGE])\r\n    },\r\n    _getCrosshairMargins: () => ({\r\n        x: 0,\r\n        y: 0\r\n    }),\r\n    _legendDataField: \"series\",\r\n    _adjustSeriesLabels: _core_utils_common__WEBPACK_IMPORTED_MODULE_10__[\"noop\"],\r\n    _correctValueAxes: _core_utils_common__WEBPACK_IMPORTED_MODULE_10__[\"noop\"]\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/chart_components/advanced_chart.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/chart_components/crosshair.js":
/*!***********************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/chart_components/crosshair.js ***!
  \***********************************************************************/
/*! exports provided: getMargins, Crosshair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getMargins\", function() { return getMargins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Crosshair\", function() { return Crosshair; });\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/**\r\n * DevExtreme (esm/viz/chart_components/crosshair.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\nvar math = Math;\r\nvar mathAbs = math.abs;\r\nvar mathMin = math.min;\r\nvar mathMax = math.max;\r\nvar mathFloor = math.floor;\r\nvar HORIZONTAL = \"horizontal\";\r\nvar VERTICAL = \"vertical\";\r\nvar LABEL_BACKGROUND_PADDING_X = 8;\r\nvar LABEL_BACKGROUND_PADDING_Y = 4;\r\nvar CENTER = \"center\";\r\nvar RIGHT = \"right\";\r\nvar LEFT = \"left\";\r\nvar TOP = \"top\";\r\nvar BOTTOM = \"bottom\";\r\nfunction getMargins() {\r\n    return {\r\n        x: LABEL_BACKGROUND_PADDING_X,\r\n        y: LABEL_BACKGROUND_PADDING_Y\r\n    }\r\n}\r\n\r\nfunction getRectangleBBox(bBox) {\r\n    return {\r\n        x: bBox.x - LABEL_BACKGROUND_PADDING_X,\r\n        y: bBox.y - LABEL_BACKGROUND_PADDING_Y,\r\n        width: bBox.width + 2 * LABEL_BACKGROUND_PADDING_X,\r\n        height: bBox.height + 2 * LABEL_BACKGROUND_PADDING_Y\r\n    }\r\n}\r\n\r\nfunction getLabelCheckerPosition(x, y, isHorizontal, canvas) {\r\n    var params = isHorizontal ? [\"x\", \"width\", \"y\", \"height\", y, 0] : [\"y\", \"height\", \"x\", \"width\", x, 1];\r\n    return function(bBox, position, coord) {\r\n        var labelCoord = {\r\n            x: coord.x,\r\n            y: coord.y\r\n        };\r\n        var rectangleBBox = getRectangleBBox(bBox);\r\n        var delta = isHorizontal ? coord.y - bBox.y - bBox.height / 2 : coord.y - bBox.y;\r\n        labelCoord.y = isHorizontal || !isHorizontal && position === BOTTOM ? coord.y + delta : coord.y;\r\n        if (rectangleBBox[params[0]] < 0) {\r\n            labelCoord[params[0]] -= rectangleBBox[params[0]]\r\n        } else if (rectangleBBox[params[0]] + rectangleBBox[params[1]] + delta * params[5] > canvas[params[1]]) {\r\n            labelCoord[params[0]] -= rectangleBBox[params[0]] + rectangleBBox[params[1]] + delta * params[5] - canvas[params[1]]\r\n        }\r\n        if (params[4] - rectangleBBox[params[3]] / 2 < 0) {\r\n            labelCoord[params[2]] -= params[4] - rectangleBBox[params[3]] / 2\r\n        } else if (params[4] + rectangleBBox[params[3]] / 2 > canvas[params[3]]) {\r\n            labelCoord[params[2]] -= params[4] + rectangleBBox[params[3]] / 2 - canvas[params[3]]\r\n        }\r\n        return labelCoord\r\n    }\r\n}\r\nfunction Crosshair(renderer, options, params, group) {\r\n    this._renderer = renderer;\r\n    this._crosshairGroup = group;\r\n    this._options = {};\r\n    this.update(options, params)\r\n}\r\nCrosshair.prototype = {\r\n    constructor: Crosshair,\r\n    update: function(options, params) {\r\n        var canvas = params.canvas;\r\n        this._canvas = {\r\n            top: canvas.top,\r\n            bottom: canvas.height - canvas.bottom,\r\n            left: canvas.left,\r\n            right: canvas.width - canvas.right,\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        };\r\n        this._axes = params.axes;\r\n        this._panes = params.panes;\r\n        this._prepareOptions(options, HORIZONTAL);\r\n        this._prepareOptions(options, VERTICAL)\r\n    },\r\n    dispose: function() {\r\n        this._renderer = this._crosshairGroup = this._options = this._axes = this._canvas = this._horizontalGroup = this._verticalGroup = this._horizontal = this._vertical = this._circle = this._panes = null\r\n    },\r\n    _prepareOptions: function(options, direction) {\r\n        var lineOptions = options[direction + \"Line\"];\r\n        this._options[direction] = {\r\n            visible: lineOptions.visible,\r\n            line: {\r\n                stroke: lineOptions.color || options.color,\r\n                \"stroke-width\": lineOptions.width || options.width,\r\n                dashStyle: lineOptions.dashStyle || options.dashStyle,\r\n                opacity: lineOptions.opacity || options.opacity,\r\n                \"stroke-linecap\": \"butt\"\r\n            },\r\n            label: Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(true, {}, options.label, lineOptions.label)\r\n        }\r\n    },\r\n    _createLines: function(options, sharpParam, group) {\r\n        var lines = [];\r\n        var canvas = this._canvas;\r\n        var points = [canvas.left, canvas.top, canvas.left, canvas.top];\r\n        for (var i = 0; i < 2; i++) {\r\n            lines.push(this._renderer.path(points, \"line\").attr(options).sharp(sharpParam).append(group))\r\n        }\r\n        return lines\r\n    },\r\n    render: function() {\r\n        var renderer = this._renderer;\r\n        var options = this._options;\r\n        var verticalOptions = options.vertical;\r\n        var horizontalOptions = options.horizontal;\r\n        var extraOptions = horizontalOptions.visible ? horizontalOptions.line : verticalOptions.line;\r\n        var circleOptions = {\r\n            stroke: extraOptions.stroke,\r\n            \"stroke-width\": extraOptions[\"stroke-width\"],\r\n            dashStyle: extraOptions.dashStyle,\r\n            opacity: extraOptions.opacity\r\n        };\r\n        var canvas = this._canvas;\r\n        this._horizontal = {};\r\n        this._vertical = {};\r\n        this._circle = renderer.circle(canvas.left, canvas.top, 0).attr(circleOptions).append(this._crosshairGroup);\r\n        this._horizontalGroup = renderer.g().append(this._crosshairGroup);\r\n        this._verticalGroup = renderer.g().append(this._crosshairGroup);\r\n        if (verticalOptions.visible) {\r\n            this._vertical.lines = this._createLines(verticalOptions.line, \"h\", this._verticalGroup);\r\n            this._vertical.labels = this._createLabels(this._axes[0], verticalOptions, false, this._verticalGroup)\r\n        }\r\n        if (horizontalOptions.visible) {\r\n            this._horizontal.lines = this._createLines(horizontalOptions.line, \"v\", this._horizontalGroup);\r\n            this._horizontal.labels = this._createLabels(this._axes[1], horizontalOptions, true, this._horizontalGroup)\r\n        }\r\n        this.hide()\r\n    },\r\n    _createLabels: function(axes, options, isHorizontal, group) {\r\n        var canvas = this._canvas;\r\n        var renderer = this._renderer;\r\n        var x;\r\n        var y;\r\n        var text;\r\n        var labels = [];\r\n        var background;\r\n        var currentLabelPos;\r\n        var labelOptions = options.label;\r\n        if (labelOptions.visible) {\r\n            axes.forEach((function(axis) {\r\n                var position = axis.getOptions().position;\r\n                if (axis.getTranslator().getBusinessRange().isEmpty()) {\r\n                    return\r\n                }\r\n                currentLabelPos = axis.getLabelsPosition();\r\n                if (isHorizontal) {\r\n                    y = canvas.top;\r\n                    x = currentLabelPos\r\n                } else {\r\n                    x = canvas.left;\r\n                    y = currentLabelPos\r\n                }\r\n                var align = position === TOP || position === BOTTOM ? CENTER : position === RIGHT ? LEFT : RIGHT;\r\n                background = renderer.rect(0, 0, 0, 0).attr({\r\n                    fill: labelOptions.backgroundColor || options.line.stroke\r\n                }).append(group);\r\n                text = renderer.text(\"0\", 0, 0).css(Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"patchFontOptions\"])(options.label.font)).attr({\r\n                    align: align,\r\n                    class: labelOptions.cssClass\r\n                }).append(group);\r\n                labels.push({\r\n                    text: text,\r\n                    background: background,\r\n                    axis: axis,\r\n                    options: labelOptions,\r\n                    pos: {\r\n                        coord: currentLabelPos,\r\n                        side: position\r\n                    },\r\n                    startXY: {\r\n                        x: x,\r\n                        y: y\r\n                    }\r\n                })\r\n            }))\r\n        }\r\n        return labels\r\n    },\r\n    _updateText: function(value, axisName, labels, point, func) {\r\n        var that = this;\r\n        labels.forEach((function(label) {\r\n            var axis = label.axis;\r\n            var coord = label.startXY;\r\n            var textElement = label.text;\r\n            var backgroundElement = label.background;\r\n            var text = \"\";\r\n            if (!axis.name || axis.name === axisName) {\r\n                text = axis.getFormattedValue(value, label.options, point)\r\n            }\r\n            if (text) {\r\n                textElement.attr({\r\n                    text: text,\r\n                    x: coord.x,\r\n                    y: coord.y\r\n                });\r\n                textElement.attr(func(textElement.getBBox(), label.pos.side, coord));\r\n                that._updateLinesCanvas(label);\r\n                backgroundElement.attr(getRectangleBBox(textElement.getBBox()))\r\n            } else {\r\n                textElement.attr({\r\n                    text: \"\"\r\n                });\r\n                backgroundElement.attr({\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: 0,\r\n                    height: 0\r\n                })\r\n            }\r\n        }))\r\n    },\r\n    hide: function() {\r\n        this._crosshairGroup.attr({\r\n            visibility: \"hidden\"\r\n        })\r\n    },\r\n    _updateLinesCanvas: function(label) {\r\n        var position = label.pos.side;\r\n        var labelCoord = label.pos.coord;\r\n        var coords = this._linesCanvas;\r\n        var canvas = this._canvas;\r\n        coords[position] = coords[position] !== canvas[position] && mathAbs(coords[position] - canvas[position]) < mathAbs(labelCoord - canvas[position]) ? coords[position] : labelCoord\r\n    },\r\n    _updateLines: function(lines, x, y, r, isHorizontal) {\r\n        var coords = this._linesCanvas;\r\n        var canvas = this._canvas;\r\n        var points = isHorizontal ? [\r\n            [mathMin(x - r, coords.left), canvas.top, x - r, canvas.top],\r\n            [x + r, canvas.top, mathMax(coords.right, x + r), canvas.top]\r\n        ] : [\r\n            [canvas.left, mathMin(coords.top, y - r), canvas.left, y - r],\r\n            [canvas.left, y + r, canvas.left, mathMax(coords.bottom, y + r)]\r\n        ];\r\n        for (var i = 0; i < 2; i++) {\r\n            lines[i].attr({\r\n                points: points[i]\r\n            }).sharp(isHorizontal ? \"v\" : \"h\", isHorizontal ? y === canvas.bottom ? -1 : 1 : x === canvas.right ? -1 : 1)\r\n        }\r\n    },\r\n    _resetLinesCanvas: function() {\r\n        var canvas = this._canvas;\r\n        this._linesCanvas = {\r\n            left: canvas.left,\r\n            right: canvas.right,\r\n            top: canvas.top,\r\n            bottom: canvas.bottom\r\n        }\r\n    },\r\n    _getClipRectForPane: function(x, y) {\r\n        var panes = this._panes;\r\n        var i;\r\n        var coords;\r\n        for (i = 0; i < panes.length; i++) {\r\n            coords = panes[i].coords;\r\n            if (coords.left <= x && coords.right >= x && coords.top <= y && coords.bottom >= y) {\r\n                return panes[i].clipRect\r\n            }\r\n        }\r\n        return {\r\n            id: null\r\n        }\r\n    },\r\n    show: function(data) {\r\n        var point = data.point;\r\n        var pointData = point.getCrosshairData(data.x, data.y);\r\n        var r = point.getPointRadius();\r\n        var horizontal = this._horizontal;\r\n        var vertical = this._vertical;\r\n        var rad = !r ? 0 : r + 3;\r\n        var canvas = this._canvas;\r\n        var x = mathFloor(pointData.x);\r\n        var y = mathFloor(pointData.y);\r\n        if (x >= canvas.left && x <= canvas.right && y >= canvas.top && y <= canvas.bottom) {\r\n            this._crosshairGroup.attr({\r\n                visibility: \"visible\"\r\n            });\r\n            this._resetLinesCanvas();\r\n            this._circle.attr({\r\n                cx: x,\r\n                cy: y,\r\n                r: rad,\r\n                \"clip-path\": this._getClipRectForPane(x, y).id\r\n            });\r\n            if (horizontal.lines) {\r\n                this._updateText(pointData.yValue, pointData.axis, horizontal.labels, point, getLabelCheckerPosition(x, y, true, canvas));\r\n                this._updateLines(horizontal.lines, x, y, rad, true);\r\n                this._horizontalGroup.attr({\r\n                    translateY: y - canvas.top\r\n                })\r\n            }\r\n            if (vertical.lines) {\r\n                this._updateText(pointData.xValue, pointData.axis, vertical.labels, point, getLabelCheckerPosition(x, y, false, canvas));\r\n                this._updateLines(vertical.lines, x, y, rad, false);\r\n                this._verticalGroup.attr({\r\n                    translateX: x - canvas.left\r\n                })\r\n            }\r\n        } else {\r\n            this.hide()\r\n        }\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/chart_components/crosshair.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/chart_components/multi_axes_synchronizer.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/chart_components/multi_axes_synchronizer.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_utils_console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/console */ \"./node_modules/devextreme/esm/core/utils/console.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/iterator */ \"./node_modules/devextreme/esm/core/utils/iterator.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/**\r\n * DevExtreme (esm/viz/chart_components/multi_axes_synchronizer.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\nvar _math = Math;\r\nvar _floor = _math.floor;\r\nvar _max = _math.max;\r\nvar _abs = _math.abs;\r\n\r\nfunction getValueAxesPerPanes(valueAxes) {\r\n    var result = {};\r\n    valueAxes.forEach(axis => {\r\n        var pane = axis.pane;\r\n        if (!result[pane]) {\r\n            result[pane] = []\r\n        }\r\n        result[pane].push(axis)\r\n    });\r\n    return result\r\n}\r\nvar linearConverter = br => ({\r\n    transform: function(v, b) {\r\n        return Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(Object(_core_utils__WEBPACK_IMPORTED_MODULE_3__[\"getLogExt\"])(v, b, br.allowNegatives, br.linearThreshold))\r\n    },\r\n    getTicks: function(interval, tickValues, base) {\r\n        var ticks = [];\r\n        var tick = this.transform(tickValues[0], base);\r\n        while (ticks.length < tickValues.length) {\r\n            ticks.push(tick);\r\n            tick = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(tick + interval)\r\n        }\r\n        return ticks\r\n    }\r\n});\r\nvar logConverter = br => ({\r\n    transform: function(v, b) {\r\n        return Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(Object(_core_utils__WEBPACK_IMPORTED_MODULE_3__[\"raiseToExt\"])(v, b, br.allowNegatives, br.linearThreshold))\r\n    },\r\n    getTicks: function(interval, tickValues, base) {\r\n        var ticks = [];\r\n        var tick;\r\n        for (var i = 0; i < tickValues.length; i += 1) {\r\n            tick = this.transform(tickValues[i], base);\r\n            ticks.push(tick)\r\n        }\r\n        return ticks\r\n    }\r\n});\r\n\r\nfunction convertAxisInfo(axisInfo, converter) {\r\n    if (!axisInfo.isLogarithmic) {\r\n        return\r\n    }\r\n    var base = axisInfo.logarithmicBase;\r\n    var tickValues = axisInfo.tickValues;\r\n    axisInfo.minValue = converter.transform(axisInfo.minValue, base);\r\n    axisInfo.oldMinValue = converter.transform(axisInfo.oldMinValue, base);\r\n    axisInfo.maxValue = converter.transform(axisInfo.maxValue, base);\r\n    axisInfo.oldMaxValue = converter.transform(axisInfo.oldMaxValue, base);\r\n    axisInfo.tickInterval = _math.round(axisInfo.tickInterval);\r\n    if (axisInfo.tickInterval < 1) {\r\n        axisInfo.tickInterval = 1\r\n    }\r\n    var ticks = converter.getTicks(axisInfo.tickInterval, tickValues, base);\r\n    ticks.tickInterval = axisInfo.tickInterval;\r\n    axisInfo.tickValues = ticks\r\n}\r\n\r\nfunction populateAxesInfo(axes) {\r\n    return axes.reduce((function(result, axis) {\r\n        var ticksValues = axis.getTicksValues();\r\n        var majorTicks = ticksValues.majorTicksValues;\r\n        var options = axis.getOptions();\r\n        var businessRange = axis.getTranslator().getBusinessRange();\r\n        var visibleArea = axis.getVisibleArea();\r\n        var axisInfo;\r\n        var tickInterval = axis._tickInterval;\r\n        var synchronizedValue = options.synchronizedValue;\r\n        var action = axis.getViewport().action;\r\n        if (majorTicks && majorTicks.length > 0 && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isNumeric\"])(majorTicks[0]) && \"discrete\" !== options.type && !businessRange.isEmpty() && !(businessRange.breaks && businessRange.breaks.length) && \"zoom\" !== action && \"pan\" !== action) {\r\n            axis.applyMargins();\r\n            var startValue = axis.getTranslator().from(visibleArea[0]);\r\n            var endValue = axis.getTranslator().from(visibleArea[1]);\r\n            var minValue = startValue < endValue ? startValue : endValue;\r\n            var maxValue = startValue < endValue ? endValue : startValue;\r\n            if (minValue === maxValue && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(synchronizedValue)) {\r\n                tickInterval = _abs(majorTicks[0] - synchronizedValue) || 1;\r\n                minValue = majorTicks[0] - tickInterval;\r\n                maxValue = majorTicks[0] + tickInterval\r\n            }\r\n            axisInfo = {\r\n                axis: axis,\r\n                isLogarithmic: \"logarithmic\" === options.type,\r\n                logarithmicBase: businessRange.base,\r\n                tickValues: majorTicks,\r\n                minorValues: ticksValues.minorTicksValues,\r\n                minorTickInterval: axis._minorTickInterval,\r\n                minValue: minValue,\r\n                oldMinValue: minValue,\r\n                maxValue: maxValue,\r\n                oldMaxValue: maxValue,\r\n                inverted: businessRange.invert,\r\n                tickInterval: tickInterval,\r\n                synchronizedValue: synchronizedValue\r\n            };\r\n            convertAxisInfo(axisInfo, linearConverter(axis.getTranslator().getBusinessRange()));\r\n            result.push(axisInfo)\r\n        }\r\n        return result\r\n    }), [])\r\n}\r\n\r\nfunction updateTickValues(axesInfo) {\r\n    var maxTicksCount = axesInfo.reduce((max, axisInfo) => _max(max, axisInfo.tickValues.length), 0);\r\n    axesInfo.forEach(axisInfo => {\r\n        var ticksMultiplier;\r\n        var ticksCount;\r\n        var additionalStartTicksCount = 0;\r\n        var synchronizedValue = axisInfo.synchronizedValue;\r\n        var tickValues = axisInfo.tickValues;\r\n        var tickInterval = axisInfo.tickInterval;\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(synchronizedValue)) {\r\n            axisInfo.baseTickValue = axisInfo.invertedBaseTickValue = synchronizedValue;\r\n            axisInfo.tickValues = [axisInfo.baseTickValue]\r\n        } else {\r\n            if (tickValues.length > 1 && tickInterval) {\r\n                ticksMultiplier = _floor((maxTicksCount + 1) / tickValues.length);\r\n                ticksCount = ticksMultiplier > 1 ? _floor((maxTicksCount + 1) / ticksMultiplier) : maxTicksCount;\r\n                additionalStartTicksCount = _floor((ticksCount - tickValues.length) / 2);\r\n                while (additionalStartTicksCount > 0 && 0 !== tickValues[0]) {\r\n                    tickValues.unshift(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(tickValues[0] - tickInterval));\r\n                    additionalStartTicksCount--\r\n                }\r\n                while (tickValues.length < ticksCount) {\r\n                    tickValues.push(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(tickValues[tickValues.length - 1] + tickInterval))\r\n                }\r\n                axisInfo.tickInterval = tickInterval / ticksMultiplier\r\n            }\r\n            axisInfo.baseTickValue = tickValues[0];\r\n            axisInfo.invertedBaseTickValue = tickValues[tickValues.length - 1]\r\n        }\r\n    })\r\n}\r\n\r\nfunction getAxisRange(axisInfo) {\r\n    return axisInfo.maxValue - axisInfo.minValue || 1\r\n}\r\n\r\nfunction getMainAxisInfo(axesInfo) {\r\n    for (var i = 0; i < axesInfo.length; i++) {\r\n        if (!axesInfo[i].stubData) {\r\n            return axesInfo[i]\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nfunction correctMinMaxValues(axesInfo) {\r\n    var mainAxisInfo = getMainAxisInfo(axesInfo);\r\n    var mainAxisInfoTickInterval = mainAxisInfo.tickInterval;\r\n    axesInfo.forEach(axisInfo => {\r\n        var scale;\r\n        var move;\r\n        var mainAxisBaseValueOffset;\r\n        var valueFromAxisInfo;\r\n        if (axisInfo !== mainAxisInfo) {\r\n            if (mainAxisInfoTickInterval && axisInfo.tickInterval) {\r\n                if (axisInfo.stubData && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(axisInfo.synchronizedValue)) {\r\n                    axisInfo.oldMinValue = axisInfo.minValue = axisInfo.baseTickValue - (mainAxisInfo.baseTickValue - mainAxisInfo.minValue) / mainAxisInfoTickInterval * axisInfo.tickInterval;\r\n                    axisInfo.oldMaxValue = axisInfo.maxValue = axisInfo.baseTickValue - (mainAxisInfo.baseTickValue - mainAxisInfo.maxValue) / mainAxisInfoTickInterval * axisInfo.tickInterval\r\n                }\r\n                scale = mainAxisInfoTickInterval / getAxisRange(mainAxisInfo) / axisInfo.tickInterval * getAxisRange(axisInfo);\r\n                axisInfo.maxValue = axisInfo.minValue + getAxisRange(axisInfo) / scale\r\n            }\r\n            if (mainAxisInfo.inverted && !axisInfo.inverted || !mainAxisInfo.inverted && axisInfo.inverted) {\r\n                mainAxisBaseValueOffset = mainAxisInfo.maxValue - mainAxisInfo.invertedBaseTickValue\r\n            } else {\r\n                mainAxisBaseValueOffset = mainAxisInfo.baseTickValue - mainAxisInfo.minValue\r\n            }\r\n            valueFromAxisInfo = getAxisRange(axisInfo);\r\n            move = (mainAxisBaseValueOffset / getAxisRange(mainAxisInfo) - (axisInfo.baseTickValue - axisInfo.minValue) / valueFromAxisInfo) * valueFromAxisInfo;\r\n            axisInfo.minValue -= move;\r\n            axisInfo.maxValue -= move\r\n        }\r\n    })\r\n}\r\n\r\nfunction calculatePaddings(axesInfo) {\r\n    var minPadding;\r\n    var maxPadding;\r\n    var startPadding = 0;\r\n    var endPadding = 0;\r\n    axesInfo.forEach(axisInfo => {\r\n        var inverted = axisInfo.inverted;\r\n        minPadding = axisInfo.minValue > axisInfo.oldMinValue ? (axisInfo.minValue - axisInfo.oldMinValue) / getAxisRange(axisInfo) : 0;\r\n        maxPadding = axisInfo.maxValue < axisInfo.oldMaxValue ? (axisInfo.oldMaxValue - axisInfo.maxValue) / getAxisRange(axisInfo) : 0;\r\n        startPadding = _max(startPadding, inverted ? maxPadding : minPadding);\r\n        endPadding = _max(endPadding, inverted ? minPadding : maxPadding)\r\n    });\r\n    return {\r\n        start: startPadding,\r\n        end: endPadding\r\n    }\r\n}\r\n\r\nfunction correctMinMaxValuesByPaddings(axesInfo, paddings) {\r\n    axesInfo.forEach(info => {\r\n        var range = getAxisRange(info);\r\n        var inverted = info.inverted;\r\n        info.minValue = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(info.minValue - paddings[inverted ? \"end\" : \"start\"] * range);\r\n        info.maxValue = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(info.maxValue + paddings[inverted ? \"start\" : \"end\"] * range)\r\n    })\r\n}\r\n\r\nfunction updateTickValuesIfSynchronizedValueUsed(axesInfo) {\r\n    var hasSynchronizedValue = false;\r\n    axesInfo.forEach(info => {\r\n        hasSynchronizedValue = hasSynchronizedValue || Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(info.synchronizedValue)\r\n    });\r\n    axesInfo.forEach(info => {\r\n        var tickInterval = info.tickInterval;\r\n        var tickValues = info.tickValues;\r\n        var maxValue = info.maxValue;\r\n        var minValue = info.minValue;\r\n        var tick;\r\n        if (hasSynchronizedValue && tickInterval) {\r\n            while ((tick = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(tickValues[0] - tickInterval)) >= minValue) {\r\n                tickValues.unshift(tick)\r\n            }\r\n            tick = tickValues[tickValues.length - 1];\r\n            while ((tick = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_4__[\"adjust\"])(tick + tickInterval)) <= maxValue) {\r\n                tickValues.push(tick)\r\n            }\r\n        }\r\n        while (tickValues[0] + tickInterval / 10 < minValue) {\r\n            tickValues.shift()\r\n        }\r\n        while (tickValues[tickValues.length - 1] - tickInterval / 10 > maxValue) {\r\n            tickValues.pop()\r\n        }\r\n    })\r\n}\r\n\r\nfunction applyMinMaxValues(axesInfo) {\r\n    axesInfo.forEach(info => {\r\n        var axis = info.axis;\r\n        var range = axis.getTranslator().getBusinessRange();\r\n        if (range.min === range.minVisible) {\r\n            range.min = info.minValue\r\n        }\r\n        if (range.max === range.maxVisible) {\r\n            range.max = info.maxValue\r\n        }\r\n        range.minVisible = info.minValue;\r\n        range.maxVisible = info.maxValue;\r\n        if (range.min > range.minVisible) {\r\n            range.min = range.minVisible\r\n        }\r\n        if (range.max < range.maxVisible) {\r\n            range.max = range.maxVisible\r\n        }\r\n        axis.getTranslator().updateBusinessRange(range);\r\n        axis.setTicks({\r\n            majorTicks: info.tickValues,\r\n            minorTicks: info.minorValues\r\n        })\r\n    })\r\n}\r\n\r\nfunction correctAfterSynchronize(axesInfo) {\r\n    var invalidAxisInfo = [];\r\n    var correctValue;\r\n    axesInfo.forEach(info => {\r\n        if (info.oldMaxValue - info.oldMinValue === 0) {\r\n            invalidAxisInfo.push(info)\r\n        } else if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(correctValue) && !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(info.synchronizedValue)) {\r\n            correctValue = _abs((info.maxValue - info.minValue) / (info.tickValues[_floor(info.tickValues.length / 2)] - info.minValue || info.maxValue))\r\n        }\r\n    });\r\n    if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(correctValue)) {\r\n        return\r\n    }\r\n    invalidAxisInfo.forEach(info => {\r\n        var firstTick = info.tickValues[0];\r\n        var correctedTick = firstTick * correctValue;\r\n        if (firstTick > 0) {\r\n            info.maxValue = correctedTick;\r\n            info.minValue = 0\r\n        } else if (firstTick < 0) {\r\n            info.minValue = correctedTick;\r\n            info.maxValue = 0\r\n        }\r\n    })\r\n}\r\n\r\nfunction updateMinorTicks(axesInfo) {\r\n    axesInfo.forEach((function(axisInfo) {\r\n        if (!axisInfo.minorTickInterval) {\r\n            return\r\n        }\r\n        var ticks = [];\r\n        var interval = axisInfo.minorTickInterval;\r\n        var tickCount = axisInfo.tickInterval / interval - 1;\r\n        for (var i = 1; i < axisInfo.tickValues.length; i++) {\r\n            var tick = axisInfo.tickValues[i - 1];\r\n            for (var j = 0; j < tickCount; j++) {\r\n                tick += interval;\r\n                ticks.push(tick)\r\n            }\r\n        }\r\n        axisInfo.minorValues = ticks\r\n    }))\r\n}\r\n\r\nfunction correctPaddings(axesInfo, paddings) {\r\n    return axesInfo.reduce((prev, info) => {\r\n        var inverted = info.inverted;\r\n        var {\r\n            start: start,\r\n            end: end\r\n        } = info.axis.getCorrectedValuesToZero(info.minValue, info.maxValue);\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(start) || Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(end)) {\r\n            return inverted ? {\r\n                start: prev.start,\r\n                end: Math.min(prev.end, end)\r\n            } : {\r\n                start: Math.min(prev.start, start),\r\n                end: prev.end\r\n            }\r\n        }\r\n        return prev\r\n    }, paddings)\r\n}\r\nvar multiAxesSynchronizer = {\r\n    synchronize: function(valueAxes) {\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(getValueAxesPerPanes(valueAxes), (function(_, axes) {\r\n            var axesInfo;\r\n            var paddings;\r\n            if (axes.length > 1) {\r\n                axesInfo = populateAxesInfo(axes);\r\n                if (axesInfo.length < 2 || !getMainAxisInfo(axesInfo)) {\r\n                    return\r\n                }\r\n                updateTickValues(axesInfo);\r\n                correctMinMaxValues(axesInfo);\r\n                paddings = calculatePaddings(axesInfo);\r\n                paddings = correctPaddings(axesInfo, paddings);\r\n                correctMinMaxValuesByPaddings(axesInfo, paddings);\r\n                correctAfterSynchronize(axesInfo);\r\n                updateTickValuesIfSynchronizedValueUsed(axesInfo);\r\n                updateMinorTicks(axesInfo);\r\n                axesInfo.forEach(info => {\r\n                    convertAxisInfo(info, logConverter(info.axis.getTranslator().getBusinessRange()))\r\n                });\r\n                applyMinMaxValues(axesInfo)\r\n            }\r\n        }))\r\n    }\r\n};\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (multiAxesSynchronizer);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/chart_components/multi_axes_synchronizer.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/chart_components/scroll_bar.js":
/*!************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/chart_components/scroll_bar.js ***!
  \************************************************************************/
/*! exports provided: ScrollBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollBar\", function() { return ScrollBar; });\n/* harmony import */ var _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../events/core/events_engine */ \"./node_modules/devextreme/esm/events/core/events_engine.js\");\n/* harmony import */ var _events_utils_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../events/utils/index */ \"./node_modules/devextreme/esm/events/utils/index.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _translators_translator2d__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../translators/translator2d */ \"./node_modules/devextreme/esm/viz/translators/translator2d.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/common */ \"./node_modules/devextreme/esm/core/utils/common.js\");\n/* harmony import */ var _events_drag__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../events/drag */ \"./node_modules/devextreme/esm/events/drag.js\");\n/**\r\n * DevExtreme (esm/viz/chart_components/scroll_bar.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar MIN_SCROLL_BAR_SIZE = 2;\r\nvar ScrollBar = function(renderer, group) {\r\n    this._translator = new _translators_translator2d__WEBPACK_IMPORTED_MODULE_3__[\"Translator2D\"]({}, {}, {});\r\n    this._scroll = renderer.rect().append(group);\r\n    this._addEvents()\r\n};\r\n\r\nfunction _getXCoord(canvas, pos, offset, width) {\r\n    var x = 0;\r\n    if (\"right\" === pos) {\r\n        x = canvas.width - canvas.right + offset\r\n    } else if (\"left\" === pos) {\r\n        x = canvas.left - offset - width\r\n    }\r\n    return x\r\n}\r\n\r\nfunction _getYCoord(canvas, pos, offset, width) {\r\n    var y = 0;\r\n    if (\"top\" === pos) {\r\n        y = canvas.top - offset\r\n    } else if (\"bottom\" === pos) {\r\n        y = canvas.height - canvas.bottom + width + offset\r\n    }\r\n    return y\r\n}\r\nScrollBar.prototype = {\r\n    _addEvents: function() {\r\n        var scrollElement = this._scroll.element;\r\n        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(scrollElement, _events_drag__WEBPACK_IMPORTED_MODULE_6__[\"start\"], e => {\r\n            Object(_events_utils_index__WEBPACK_IMPORTED_MODULE_1__[\"fireEvent\"])({\r\n                type: \"dxc-scroll-start\",\r\n                originalEvent: e,\r\n                target: scrollElement\r\n            })\r\n        });\r\n        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(scrollElement, _events_drag__WEBPACK_IMPORTED_MODULE_6__[\"move\"], e => {\r\n            var dX = -e.offset.x * this._scale;\r\n            var dY = -e.offset.y * this._scale;\r\n            var lx = this._offset - (this._layoutOptions.vertical ? dY : dX) / this._scale;\r\n            this._applyPosition(lx, lx + this._translator.canvasLength / this._scale);\r\n            Object(_events_utils_index__WEBPACK_IMPORTED_MODULE_1__[\"fireEvent\"])({\r\n                type: \"dxc-scroll-move\",\r\n                originalEvent: e,\r\n                target: scrollElement,\r\n                offset: {\r\n                    x: dX,\r\n                    y: dY\r\n                }\r\n            })\r\n        });\r\n        _events_core_events_engine__WEBPACK_IMPORTED_MODULE_0__[\"default\"].on(scrollElement, _events_drag__WEBPACK_IMPORTED_MODULE_6__[\"end\"], e => {\r\n            Object(_events_utils_index__WEBPACK_IMPORTED_MODULE_1__[\"fireEvent\"])({\r\n                type: \"dxc-scroll-end\",\r\n                originalEvent: e,\r\n                target: scrollElement,\r\n                offset: {\r\n                    x: -e.offset.x * this._scale,\r\n                    y: -e.offset.y * this._scale\r\n                }\r\n            })\r\n        })\r\n    },\r\n    update: function(options) {\r\n        var position = options.position;\r\n        var isVertical = options.rotated;\r\n        var defaultPosition = isVertical ? \"right\" : \"top\";\r\n        var secondaryPosition = isVertical ? \"left\" : \"bottom\";\r\n        if (position !== defaultPosition && position !== secondaryPosition) {\r\n            position = defaultPosition\r\n        }\r\n        this._scroll.attr({\r\n            rotate: !options.rotated ? -90 : 0,\r\n            rotateX: 0,\r\n            rotateY: 0,\r\n            fill: options.color,\r\n            width: options.width,\r\n            opacity: options.opacity\r\n        });\r\n        this._layoutOptions = {\r\n            width: options.width,\r\n            offset: options.offset,\r\n            vertical: isVertical,\r\n            position: position\r\n        };\r\n        return this\r\n    },\r\n    init: function(range, stick) {\r\n        var isDiscrete = \"discrete\" === range.axisType;\r\n        this._translateWithOffset = isDiscrete && !stick ? 1 : 0;\r\n        this._translator.update(Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, range, {\r\n            minVisible: null,\r\n            maxVisible: null,\r\n            visibleCategories: null\r\n        }, isDiscrete && {\r\n            min: null,\r\n            max: null\r\n        } || {}), this._canvas, {\r\n            isHorizontal: !this._layoutOptions.vertical,\r\n            stick: stick\r\n        });\r\n        return this\r\n    },\r\n    getOptions: function() {\r\n        return this._layoutOptions\r\n    },\r\n    setPane: function(panes) {\r\n        var position = this._layoutOptions.position;\r\n        var pane;\r\n        if (\"left\" === position || \"top\" === position) {\r\n            pane = panes[0]\r\n        } else {\r\n            pane = panes[panes.length - 1]\r\n        }\r\n        this.pane = pane.name;\r\n        return this\r\n    },\r\n    updateSize: function(canvas) {\r\n        this._canvas = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])({}, canvas);\r\n        var options = this._layoutOptions;\r\n        var pos = options.position;\r\n        var offset = options.offset;\r\n        var width = options.width;\r\n        this._scroll.attr({\r\n            translateX: _getXCoord(canvas, pos, offset, width),\r\n            translateY: _getYCoord(canvas, pos, offset, width)\r\n        })\r\n    },\r\n    getMultipleAxesSpacing: function() {\r\n        return 0\r\n    },\r\n    estimateMargins: function() {\r\n        return this.getMargins()\r\n    },\r\n    getMargins: function() {\r\n        var options = this._layoutOptions;\r\n        var margins = {\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0\r\n        };\r\n        margins[options.position] = options.width + options.offset;\r\n        return margins\r\n    },\r\n    shift: function(margins) {\r\n        var _that$_scroll$attr, _that$_scroll$attr2;\r\n        var options = this._layoutOptions;\r\n        var side = options.position;\r\n        var isVertical = options.vertical;\r\n        var attr = {\r\n            translateX: null !== (_that$_scroll$attr = this._scroll.attr(\"translateX\")) && void 0 !== _that$_scroll$attr ? _that$_scroll$attr : 0,\r\n            translateY: null !== (_that$_scroll$attr2 = this._scroll.attr(\"translateY\")) && void 0 !== _that$_scroll$attr2 ? _that$_scroll$attr2 : 0\r\n        };\r\n        var shift = margins[side];\r\n        attr[isVertical ? \"translateX\" : \"translateY\"] += (\"left\" === side || \"top\" === side ? -1 : 1) * shift;\r\n        this._scroll.attr(attr)\r\n    },\r\n    hideTitle: _core_utils_common__WEBPACK_IMPORTED_MODULE_5__[\"noop\"],\r\n    hideOuterElements: _core_utils_common__WEBPACK_IMPORTED_MODULE_5__[\"noop\"],\r\n    setPosition: function(min, max) {\r\n        var translator = this._translator;\r\n        var minPoint = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_4__[\"isDefined\"])(min) ? translator.translate(min, -this._translateWithOffset) : translator.translate(\"canvas_position_start\");\r\n        var maxPoint = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_4__[\"isDefined\"])(max) ? translator.translate(max, this._translateWithOffset) : translator.translate(\"canvas_position_end\");\r\n        this._offset = _min(minPoint, maxPoint);\r\n        this._scale = translator.getScale(min, max);\r\n        this._applyPosition(_min(minPoint, maxPoint), _max(minPoint, maxPoint))\r\n    },\r\n    customPositionIsAvailable: () => false,\r\n    dispose: function() {\r\n        this._scroll.dispose();\r\n        this._scroll = this._translator = null\r\n    },\r\n    _applyPosition: function(x1, x2) {\r\n        var visibleArea = this._translator.getCanvasVisibleArea();\r\n        x1 = _max(x1, visibleArea.min);\r\n        x1 = _min(x1, visibleArea.max);\r\n        x2 = _min(x2, visibleArea.max);\r\n        x2 = _max(x2, visibleArea.min);\r\n        var height = Math.abs(x2 - x1);\r\n        this._scroll.attr({\r\n            y: x1,\r\n            height: height < MIN_SCROLL_BAR_SIZE ? MIN_SCROLL_BAR_SIZE : height\r\n        })\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/chart_components/scroll_bar.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/chart_components/shutter_zoom.js":
/*!**************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/chart_components/shutter_zoom.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _events_drag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../events/drag */ \"./node_modules/devextreme/esm/events/drag.js\");\n/**\r\n * DevExtreme (esm/viz/chart_components/shutter_zoom.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar SHUTTER_EVENTS_NS = \".shutter-zoom\";\r\nvar DRAG_START_EVENT_NAME = _events_drag__WEBPACK_IMPORTED_MODULE_0__[\"start\"] + SHUTTER_EVENTS_NS;\r\nvar DRAG_UPDATE_EVENT_NAME = _events_drag__WEBPACK_IMPORTED_MODULE_0__[\"move\"] + SHUTTER_EVENTS_NS;\r\nvar DRAG_END_EVENT_NAME = _events_drag__WEBPACK_IMPORTED_MODULE_0__[\"end\"] + SHUTTER_EVENTS_NS;\r\n\r\nfunction getPointerCoord(rootOffset, canvas, rotated, e) {\r\n    var coord = Math.floor(rotated ? e.pageY - rootOffset.top : e.pageX - rootOffset.left);\r\n    var min = rotated ? canvas.y1 : canvas.x1;\r\n    var max = rotated ? canvas.y2 : canvas.x2;\r\n    if (coord < min) {\r\n        coord = min\r\n    } else if (coord > max) {\r\n        coord = max\r\n    }\r\n    return coord\r\n}\r\n\r\nfunction checkCoords(rootOffset, canvas, e) {\r\n    var x = e.pageX - rootOffset.left;\r\n    var y = e.pageY - rootOffset.top;\r\n    return x >= canvas.x1 && x <= canvas.x2 && y >= canvas.y1 && y <= canvas.y2\r\n}\r\n\r\nfunction dragStartHandler(ctx) {\r\n    return function(e) {\r\n        var offset = ctx.getRootOffset();\r\n        var canvas = ctx.getCanvas();\r\n        if (!checkCoords(offset, canvas, e)) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        ctx.rootOffset = offset;\r\n        ctx.canvas = canvas;\r\n        ctx.startCoord = getPointerCoord(offset, canvas, ctx.rotated, e);\r\n        ctx.triggerStart();\r\n        ctx.rect.attr({\r\n            x: canvas.x1,\r\n            y: canvas.y1,\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        }).append(ctx.root)\r\n    }\r\n}\r\n\r\nfunction dragHandler(ctx) {\r\n    return function(e) {\r\n        var curCoord = getPointerCoord(ctx.rootOffset, ctx.canvas, ctx.rotated, e);\r\n        var attr = {};\r\n        ctx.curCoord = curCoord;\r\n        attr[ctx.rotated ? \"y\" : \"x\"] = Math.min(ctx.startCoord, curCoord);\r\n        attr[ctx.rotated ? \"height\" : \"width\"] = Math.abs(ctx.startCoord - curCoord);\r\n        ctx.rect.attr(attr)\r\n    }\r\n}\r\n\r\nfunction dragEndHandler(ctx) {\r\n    return function(e) {\r\n        ctx.triggerEnd();\r\n        ctx.rect.remove()\r\n    }\r\n}\r\n\r\nfunction shutterZoom(options) {\r\n    var chart = options.chart;\r\n    var renderer = options.renderer;\r\n    var rotated = options.rotated;\r\n    var rect = renderer.rect(0, 0, 0, 0).attr(options.shutterOptions);\r\n    var shutter = {\r\n        rect: rect,\r\n        root: renderer.root,\r\n        rotated: rotated,\r\n        triggerStart: function() {\r\n            chart._eventTrigger(\"zoomStart\")\r\n        },\r\n        triggerEnd: function() {\r\n            var tr = chart._argumentAxes[0].getTranslator();\r\n            var rangeStart = Math.min(this.startCoord, this.curCoord);\r\n            var rangeEnd = Math.max(this.startCoord, this.curCoord);\r\n            chart._eventTrigger(\"zoomEnd\", {\r\n                rangeStart: tr.from(rangeStart),\r\n                rangeEnd: tr.from(rangeEnd)\r\n            })\r\n        },\r\n        dispose: function() {\r\n            renderer.root.off(SHUTTER_EVENTS_NS);\r\n            rect.dispose()\r\n        },\r\n        getRootOffset: function() {\r\n            return renderer.getRootOffset()\r\n        },\r\n        getCanvas: function() {\r\n            var canvas = chart._canvas;\r\n            var panes = chart.panes;\r\n            var firstPane = panes[0].canvas;\r\n            var lastPane = panes[panes.length - 1].canvas;\r\n            return {\r\n                x1: firstPane.left,\r\n                y1: firstPane.top,\r\n                x2: canvas.width - lastPane.right,\r\n                y2: canvas.height - lastPane.bottom,\r\n                width: canvas.width - firstPane.left - lastPane.right,\r\n                height: canvas.height - firstPane.top - lastPane.bottom\r\n            }\r\n        }\r\n    };\r\n    renderer.root.off(SHUTTER_EVENTS_NS).on(DRAG_START_EVENT_NAME, {\r\n        direction: rotated ? \"vertical\" : \"horizontal\",\r\n        immediate: true\r\n    }, dragStartHandler(shutter)).on(DRAG_UPDATE_EVENT_NAME, dragHandler(shutter)).on(DRAG_END_EVENT_NAME, dragEndHandler(shutter));\r\n    return shutter\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    name: \"shutter_zoom\",\r\n    init: function() {\r\n        var options = this.option(\"shutterZoom\") || {};\r\n        if (!options.enabled) {\r\n            return\r\n        }\r\n        this._shutterZoom = shutterZoom({\r\n            chart: this,\r\n            renderer: this._renderer,\r\n            rotated: this.option(\"rotated\"),\r\n            shutterOptions: options\r\n        })\r\n    },\r\n    dispose: function() {\r\n        this._shutterZoom && this._shutterZoom.dispose()\r\n    }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/chart_components/shutter_zoom.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/chart_components/zoom_and_pan.js":
/*!**************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/chart_components/zoom_and_pan.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _events_core_wheel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../events/core/wheel */ \"./node_modules/devextreme/esm/events/core/wheel.js\");\n/* harmony import */ var _events_transform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../events/transform */ \"./node_modules/devextreme/esm/events/transform.js\");\n/* harmony import */ var _events_drag__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../events/drag */ \"./node_modules/devextreme/esm/events/drag.js\");\n/**\r\n * DevExtreme (esm/viz/chart_components/zoom_and_pan.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar EVENTS_NS = \".zoomAndPanNS\";\r\nvar DRAG_START_EVENT_NAME = _events_drag__WEBPACK_IMPORTED_MODULE_5__[\"start\"] + EVENTS_NS;\r\nvar DRAG_EVENT_NAME = _events_drag__WEBPACK_IMPORTED_MODULE_5__[\"move\"] + EVENTS_NS;\r\nvar DRAG_END_EVENT_NAME = _events_drag__WEBPACK_IMPORTED_MODULE_5__[\"end\"] + EVENTS_NS;\r\nvar PINCH_START_EVENT_NAME = _events_transform__WEBPACK_IMPORTED_MODULE_4__[\"pinchstart\"] + EVENTS_NS;\r\nvar PINCH_EVENT_NAME = _events_transform__WEBPACK_IMPORTED_MODULE_4__[\"pinch\"] + EVENTS_NS;\r\nvar PINCH_END_EVENT_NAME = _events_transform__WEBPACK_IMPORTED_MODULE_4__[\"pinchend\"] + EVENTS_NS;\r\nvar SCROLL_BAR_START_EVENT_NAME = \"dxc-scroll-start\" + EVENTS_NS;\r\nvar SCROLL_BAR_MOVE_EVENT_NAME = \"dxc-scroll-move\" + EVENTS_NS;\r\nvar SCROLL_BAR_END_EVENT_NAME = \"dxc-scroll-end\" + EVENTS_NS;\r\nvar GESTURE_TIMEOUT = 300;\r\nvar MIN_DRAG_DELTA = 5;\r\nvar _min = Math.min;\r\nvar _max = Math.max;\r\nvar _abs = Math.abs;\r\n\r\nfunction canvasToRect(canvas) {\r\n    return {\r\n        x: canvas.left,\r\n        y: canvas.top,\r\n        width: canvas.width - canvas.left - canvas.right,\r\n        height: canvas.height - canvas.top - canvas.bottom\r\n    }\r\n}\r\n\r\nfunction checkCoords(rect, coords) {\r\n    var x = coords.x;\r\n    var y = coords.y;\r\n    return x >= rect.x && x <= rect.width + rect.x && y >= rect.y && y <= rect.height + rect.y\r\n}\r\n\r\nfunction sortAxes(axes, onlyAxisToNotify) {\r\n    if (onlyAxisToNotify) {\r\n        axes = axes.sort((a, b) => {\r\n            if (a === onlyAxisToNotify) {\r\n                return -1\r\n            }\r\n            if (b === onlyAxisToNotify) {\r\n                return 1\r\n            }\r\n            return 0\r\n        })\r\n    }\r\n    return axes\r\n}\r\n\r\nfunction isNotEmptyAxisBusinessRange(axis) {\r\n    return !axis.getTranslator().getBusinessRange().isEmpty()\r\n}\r\n\r\nfunction axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e) {\r\n    var silent = onlyAxisToNotify && axis !== onlyAxisToNotify;\r\n    var range = getRange(axis);\r\n    var {\r\n        stopInteraction: stopInteraction,\r\n        correctedRange: correctedRange\r\n    } = axis.checkZoomingLowerLimitOvercome(actionField, scale, range);\r\n    var result = axis.handleZooming(stopInteraction ? null : correctedRange, getParameters(silent), e, actionField);\r\n    stopInteraction && axis.handleZoomEnd();\r\n    return {\r\n        stopInteraction: stopInteraction,\r\n        result: result\r\n    }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    name: \"zoom_and_pan\",\r\n    init: function() {\r\n        var chart = this;\r\n        var renderer = this._renderer;\r\n\r\n        function cancelEvent(e) {\r\n            if (e.originalEvent) {\r\n                cancelEvent(e.originalEvent)\r\n            }\r\n            if (false !== e.cancelable) {\r\n                e.cancel = true\r\n            }\r\n        }\r\n\r\n        function startAxesViewportChanging(zoomAndPan, actionField, e) {\r\n            var options = zoomAndPan.options;\r\n            var actionData = zoomAndPan.actionData;\r\n            var axes = [];\r\n            if (options.argumentAxis[actionField]) {\r\n                axes.push(chart.getArgumentAxis())\r\n            }\r\n            if (options.valueAxis[actionField]) {\r\n                axes = axes.concat(actionData.valueAxes)\r\n            }\r\n            axes.reduce((isPrevented, axis) => {\r\n                if (isPrevented) {\r\n                    return isPrevented\r\n                }\r\n                if (isNotEmptyAxisBusinessRange(axis)) {\r\n                    return axis.handleZooming(null, {\r\n                        end: true\r\n                    }, e, actionField).isPrevented\r\n                }\r\n                return isPrevented\r\n            }, false) && cancelEvent(e)\r\n        }\r\n\r\n        function axesViewportChanging(zoomAndPan, actionField, e, offsetCalc, centerCalc) {\r\n            function zoomAxes(axes, criteria, coordField, e, actionData) {\r\n                var zoom = {\r\n                    zoomed: false\r\n                };\r\n                criteria && axes.filter(isNotEmptyAxisBusinessRange).forEach(axis => {\r\n                    var options = axis.getOptions();\r\n                    var viewport = axis.visualRange();\r\n                    var scale = axis.getTranslator().getEventScale(e);\r\n                    var translate = -offsetCalc(e, actionData, coordField, scale);\r\n                    zoom = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(true, zoom, axis.getTranslator().zoom(translate, scale, axis.getZoomBounds()));\r\n                    var range = axis.adjustRange(Object(_core_utils__WEBPACK_IMPORTED_MODULE_2__[\"getVizRangeObject\"])([zoom.min, zoom.max]));\r\n                    var {\r\n                        stopInteraction: stopInteraction,\r\n                        correctedRange: correctedRange\r\n                    } = axis.checkZoomingLowerLimitOvercome(actionField, scale, range);\r\n                    if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(viewport) || viewport.startValue.valueOf() !== correctedRange.startValue.valueOf() || viewport.endValue.valueOf() !== correctedRange.endValue.valueOf()) {\r\n                        axis.handleZooming(stopInteraction ? null : correctedRange, {\r\n                            start: true,\r\n                            end: true\r\n                        }, e, actionField);\r\n                        if (!stopInteraction) {\r\n                            zoom.zoomed = true;\r\n                            zoom.deltaTranslate = translate - zoom.translate\r\n                        }\r\n                    } else if (\"touch\" === e.pointerType && \"discrete\" === options.type) {\r\n                        var isMinPosition = axis.isExtremePosition(false);\r\n                        var isMaxPosition = axis.isExtremePosition(true);\r\n                        var zoomInEnabled = scale > 1 && !stopInteraction;\r\n                        var zoomOutEnabled = scale < 1 && (!isMinPosition || !isMaxPosition);\r\n                        var panningEnabled = 1 === scale && !(isMinPosition && (translate < 0 && !options.inverted || translate > 0 && options.inverted) || isMaxPosition && (translate > 0 && !options.inverted || translate < 0 && options.inverted));\r\n                        zoom.enabled = zoomInEnabled || zoomOutEnabled || panningEnabled\r\n                    }\r\n                });\r\n                return zoom\r\n            }\r\n\r\n            function storeOffset(e, actionData, zoom, coordField) {\r\n                if (zoom.zoomed) {\r\n                    actionData.offset[coordField] = (e.offset ? e.offset[coordField] : actionData.offset[coordField]) + zoom.deltaTranslate\r\n                }\r\n            }\r\n\r\n            function storeCenter(center, actionData, zoom, coordField) {\r\n                if (zoom.zoomed) {\r\n                    actionData.center[coordField] = center[coordField] + zoom.deltaTranslate\r\n                }\r\n            }\r\n            var rotated = chart.option(\"rotated\");\r\n            var actionData = zoomAndPan.actionData;\r\n            var options = zoomAndPan.options;\r\n            var argZoom = {};\r\n            var valZoom = {};\r\n            if (!actionData.fallback) {\r\n                argZoom = zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", e, actionData);\r\n                valZoom = zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", e, actionData);\r\n                chart._requestChange([\"VISUAL_RANGE\"]);\r\n                storeOffset(e, actionData, argZoom, rotated ? \"y\" : \"x\");\r\n                storeOffset(e, actionData, valZoom, rotated ? \"x\" : \"y\")\r\n            }\r\n            var center = centerCalc(e);\r\n            storeCenter(center, actionData, argZoom, rotated ? \"y\" : \"x\");\r\n            storeCenter(center, actionData, valZoom, rotated ? \"x\" : \"y\");\r\n            if (!argZoom.zoomed && !valZoom.zoomed) {\r\n                actionData.center = center\r\n            }\r\n            return argZoom.zoomed || valZoom.zoomed || actionData.fallback || argZoom.enabled || valZoom.enabled\r\n        }\r\n\r\n        function finishAxesViewportChanging(zoomAndPan, actionField, e, offsetCalc) {\r\n            function zoomAxes(axes, criteria, coordField, actionData, onlyAxisToNotify) {\r\n                var zoomStarted = false;\r\n                var scale = e.scale || 1;\r\n                var getRange = axis => {\r\n                    var zoom = axis.getTranslator().zoom(-offsetCalc(e, actionData, coordField, scale), scale, axis.getZoomBounds());\r\n                    return {\r\n                        startValue: zoom.min,\r\n                        endValue: zoom.max\r\n                    }\r\n                };\r\n                var getParameters = silent => ({\r\n                    start: true,\r\n                    end: silent\r\n                });\r\n                criteria && axes.forEach(axis => {\r\n                    zoomStarted = !axisZoom(axis, onlyAxisToNotify, getRange, getParameters, actionField, scale, e).stopInteraction\r\n                });\r\n                return zoomStarted\r\n            }\r\n            var rotated = chart.option(\"rotated\");\r\n            var actionData = zoomAndPan.actionData;\r\n            var options = zoomAndPan.options;\r\n            var zoomStarted = true;\r\n            if (actionData.fallback) {\r\n                zoomStarted &= zoomAxes(chart._argumentAxes, options.argumentAxis[actionField], rotated ? \"y\" : \"x\", actionData, chart.getArgumentAxis());\r\n                zoomStarted |= zoomAxes(actionData.valueAxes, options.valueAxis[actionField], rotated ? \"x\" : \"y\", actionData)\r\n            } else {\r\n                var axes = [];\r\n                if (options.argumentAxis[actionField]) {\r\n                    axes.push(chart.getArgumentAxis())\r\n                }\r\n                if (options.valueAxis[actionField]) {\r\n                    axes = axes.concat(actionData.valueAxes)\r\n                }\r\n                axes.filter(isNotEmptyAxisBusinessRange).forEach(axis => {\r\n                    axis.handleZooming(null, {\r\n                        start: true\r\n                    }, e, actionField)\r\n                });\r\n                zoomStarted = axes.length\r\n            }\r\n            zoomStarted && chart._requestChange([\"VISUAL_RANGE\"])\r\n        }\r\n\r\n        function prepareActionData(coords, action) {\r\n            var axes = chart._argumentAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords));\r\n            return {\r\n                fallback: chart._lastRenderingTime > GESTURE_TIMEOUT,\r\n                cancel: !axes.length || !Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(action),\r\n                action: action,\r\n                curAxisRect: axes.length && canvasToRect(axes[0].getCanvas()),\r\n                valueAxes: axes.length && chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords)),\r\n                offset: {\r\n                    x: 0,\r\n                    y: 0\r\n                },\r\n                center: coords,\r\n                startCenter: coords\r\n            }\r\n        }\r\n\r\n        function getPointerCoord(rect, e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            return {\r\n                x: _min(_max(e.pageX - rootOffset.left, rect.x), rect.width + rect.x),\r\n                y: _min(_max(e.pageY - rootOffset.top, rect.y), rect.height + rect.y)\r\n            }\r\n        }\r\n\r\n        function calcCenterForPinch(e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            var x1 = e.pointers[0].pageX;\r\n            var x2 = e.pointers[1].pageX;\r\n            var y1 = e.pointers[0].pageY;\r\n            var y2 = e.pointers[1].pageY;\r\n            return {\r\n                x: _min(x1, x2) + _abs(x2 - x1) / 2 - rootOffset.left,\r\n                y: _min(y1, y2) + _abs(y2 - y1) / 2 - rootOffset.top\r\n            }\r\n        }\r\n\r\n        function calcCenterForDrag(e) {\r\n            var rootOffset = renderer.getRootOffset();\r\n            return {\r\n                x: e.pageX - rootOffset.left,\r\n                y: e.pageY - rootOffset.top\r\n            }\r\n        }\r\n\r\n        function calcOffsetForDrag(e, actionData, coordField) {\r\n            return e.offset[coordField] - actionData.offset[coordField]\r\n        }\r\n\r\n        function preventDefaults(e) {\r\n            if (false !== e.cancelable) {\r\n                e.preventDefault();\r\n                e.stopPropagation()\r\n            }\r\n            chart._stopCurrentHandling()\r\n        }\r\n        var zoomAndPan = {\r\n            dragStartHandler: function(e) {\r\n                var options = zoomAndPan.options;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                var wantPan = options.argumentAxis.pan || options.valueAxis.pan;\r\n                var wantZoom = options.argumentAxis.zoom || options.valueAxis.zoom;\r\n                var panKeyPressed = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(options.panKey) && e[Object(_core_utils__WEBPACK_IMPORTED_MODULE_2__[\"normalizeEnum\"])(options.panKey) + \"Key\"];\r\n                var dragToZoom = options.dragToZoom;\r\n                var action;\r\n                e._cancelPreventDefault = true;\r\n                if (isTouch) {\r\n                    if (options.allowTouchGestures && wantPan) {\r\n                        var cancelPanning = !zoomAndPan.panningVisualRangeEnabled() || zoomAndPan.skipEvent;\r\n                        action = cancelPanning ? null : \"pan\"\r\n                    }\r\n                } else if (dragToZoom && wantPan && panKeyPressed) {\r\n                    action = \"pan\"\r\n                } else if (!dragToZoom && wantPan) {\r\n                    action = \"pan\"\r\n                } else if (dragToZoom && wantZoom) {\r\n                    action = \"zoom\"\r\n                }\r\n                var actionData = prepareActionData(calcCenterForDrag(e), action);\r\n                if (actionData.cancel) {\r\n                    zoomAndPan.skipEvent = false;\r\n                    if (false !== e.cancelable) {\r\n                        e.cancel = true\r\n                    }\r\n                    return\r\n                }\r\n                zoomAndPan.actionData = actionData;\r\n                if (\"zoom\" === action) {\r\n                    actionData.startCoords = getPointerCoord(actionData.curAxisRect, e);\r\n                    actionData.rect = renderer.rect(0, 0, 0, 0).attr(options.dragBoxStyle).append(renderer.root)\r\n                } else {\r\n                    startAxesViewportChanging(zoomAndPan, \"pan\", e)\r\n                }\r\n            },\r\n            dragHandler: function(e) {\r\n                var rotated = chart.option(\"rotated\");\r\n                var options = zoomAndPan.options;\r\n                var actionData = zoomAndPan.actionData;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                e._cancelPreventDefault = true;\r\n                if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled()) {\r\n                    return\r\n                }\r\n                if (\"zoom\" === actionData.action) {\r\n                    preventDefaults(e);\r\n                    var curCanvas = actionData.curAxisRect;\r\n                    var startCoords = actionData.startCoords;\r\n                    var curCoords = getPointerCoord(curCanvas, e);\r\n                    var zoomArg = options.argumentAxis.zoom;\r\n                    var zoomVal = options.valueAxis.zoom;\r\n                    var rect = {\r\n                        x: _min(startCoords.x, curCoords.x),\r\n                        y: _min(startCoords.y, curCoords.y),\r\n                        width: _abs(startCoords.x - curCoords.x),\r\n                        height: _abs(startCoords.y - curCoords.y)\r\n                    };\r\n                    if (!zoomArg || !zoomVal) {\r\n                        if (!zoomArg && !rotated || !zoomVal && rotated) {\r\n                            rect.x = curCanvas.x;\r\n                            rect.width = curCanvas.width\r\n                        } else {\r\n                            rect.y = curCanvas.y;\r\n                            rect.height = curCanvas.height\r\n                        }\r\n                    }\r\n                    actionData.rect.attr(rect)\r\n                } else if (\"pan\" === actionData.action) {\r\n                    axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, e => e.offset);\r\n                    var deltaOffsetY = Math.abs(e.offset.y - actionData.offset.y);\r\n                    var deltaOffsetX = Math.abs(e.offset.x - actionData.offset.x);\r\n                    if (isTouch && (deltaOffsetY > MIN_DRAG_DELTA && deltaOffsetY > Math.abs(actionData.offset.x) || deltaOffsetX > MIN_DRAG_DELTA && deltaOffsetX > Math.abs(actionData.offset.y))) {\r\n                        return\r\n                    }\r\n                    preventDefaults(e)\r\n                }\r\n            },\r\n            dragEndHandler: function(e) {\r\n                var rotated = chart.option(\"rotated\");\r\n                var options = zoomAndPan.options;\r\n                var actionData = zoomAndPan.actionData;\r\n                var isTouch = \"touch\" === e.pointerType;\r\n                var panIsEmpty = actionData && \"pan\" === actionData.action && !actionData.fallback && 0 === actionData.offset.x && 0 === actionData.offset.y;\r\n                if (!actionData || isTouch && !zoomAndPan.panningVisualRangeEnabled() || panIsEmpty) {\r\n                    return\r\n                }(!isTouch || !zoomAndPan.actionData.isNative) && preventDefaults(e);\r\n                if (\"zoom\" === actionData.action) {\r\n                    var zoomAxes = (axes, criteria, coordField, startCoords, curCoords, onlyAxisToNotify) => {\r\n                        axes = sortAxes(axes, onlyAxisToNotify);\r\n                        var curCoord = curCoords[coordField];\r\n                        var startCoord = startCoords[coordField];\r\n                        var zoomStarted = false;\r\n                        var getParameters = silent => ({\r\n                            start: !!silent,\r\n                            end: !!silent\r\n                        });\r\n                        if (criteria && _abs(curCoord - startCoord) > MIN_DRAG_DELTA) {\r\n                            axes.some(axis => {\r\n                                var tr = axis.getTranslator();\r\n                                if (tr.getBusinessRange().isEmpty()) {\r\n                                    return\r\n                                }\r\n                                var {\r\n                                    stopInteraction: stopInteraction,\r\n                                    result: result\r\n                                } = axisZoom(axis, onlyAxisToNotify, () => [tr.from(startCoord), tr.from(curCoord)], getParameters, actionData.action, tr.getMinScale(true), e);\r\n                                zoomStarted = !stopInteraction;\r\n                                return onlyAxisToNotify && result.isPrevented\r\n                            })\r\n                        }\r\n                        return zoomStarted\r\n                    };\r\n                    var curCoords = getPointerCoord(actionData.curAxisRect, e);\r\n                    var argumentAxesZoomed = zoomAxes(chart._argumentAxes, options.argumentAxis.zoom, rotated ? \"y\" : \"x\", actionData.startCoords, curCoords, chart.getArgumentAxis());\r\n                    var valueAxesZoomed = zoomAxes(actionData.valueAxes, options.valueAxis.zoom, rotated ? \"x\" : \"y\", actionData.startCoords, curCoords);\r\n                    if (valueAxesZoomed || argumentAxesZoomed) {\r\n                        chart._requestChange([\"VISUAL_RANGE\"])\r\n                    }\r\n                    actionData.rect.dispose()\r\n                } else if (\"pan\" === actionData.action) {\r\n                    finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag)\r\n                }\r\n                zoomAndPan.actionData = null\r\n            },\r\n            pinchStartHandler: function(e) {\r\n                var actionData = prepareActionData(calcCenterForPinch(e), \"zoom\");\r\n                actionData.isNative = !zoomAndPan.panningVisualRangeEnabled();\r\n                if (actionData.cancel) {\r\n                    cancelEvent(e);\r\n                    return\r\n                }\r\n                zoomAndPan.actionData = actionData;\r\n                startAxesViewportChanging(zoomAndPan, \"zoom\", e)\r\n            },\r\n            pinchHandler: function(e) {\r\n                if (!zoomAndPan.actionData) {\r\n                    return\r\n                }\r\n                var viewportChanged = axesViewportChanging(zoomAndPan, \"zoom\", e, (e, actionData, coordField, scale) => calcCenterForPinch(e)[coordField] - actionData.center[coordField] + (actionData.center[coordField] - actionData.center[coordField] * scale), calcCenterForPinch);\r\n                zoomAndPan.defineTouchBehavior(!viewportChanged, e);\r\n                !viewportChanged && (zoomAndPan.actionData = null)\r\n            },\r\n            pinchEndHandler: function(e) {\r\n                if (!zoomAndPan.actionData) {\r\n                    return\r\n                }\r\n                finishAxesViewportChanging(zoomAndPan, \"zoom\", e, (e, actionData, coordField, scale) => actionData.center[coordField] - actionData.startCenter[coordField] + (actionData.startCenter[coordField] - actionData.startCenter[coordField] * scale));\r\n                zoomAndPan.actionData = null\r\n            },\r\n            cleanup: function() {\r\n                renderer.root.off(EVENTS_NS);\r\n                zoomAndPan.actionData && zoomAndPan.actionData.rect && zoomAndPan.actionData.rect.dispose();\r\n                zoomAndPan.actionData = null;\r\n                renderer.root.css({\r\n                    \"touch-action\": \"\",\r\n                    \"-ms-touch-action\": \"\"\r\n                })\r\n            },\r\n            setup: function(options) {\r\n                zoomAndPan.cleanup();\r\n                if (!options.argumentAxis.pan) {\r\n                    renderer.root.on(SCROLL_BAR_START_EVENT_NAME, cancelEvent)\r\n                }\r\n                if (options.argumentAxis.none && options.valueAxis.none) {\r\n                    return\r\n                }\r\n                zoomAndPan.options = options;\r\n                var rotated = chart.option(\"rotated\");\r\n                if ((options.argumentAxis.zoom || options.valueAxis.zoom) && options.allowMouseWheel) {\r\n                    renderer.root.on(_events_core_wheel__WEBPACK_IMPORTED_MODULE_3__[\"name\"] + EVENTS_NS, (function(e) {\r\n                        function zoomAxes(axes, coord, delta, onlyAxisToNotify) {\r\n                            axes = sortAxes(axes, onlyAxisToNotify);\r\n                            var zoomStarted = false;\r\n                            var getParameters = silent => ({\r\n                                start: !!silent,\r\n                                end: !!silent\r\n                            });\r\n                            axes.some(axis => {\r\n                                var translator = axis.getTranslator();\r\n                                if (translator.getBusinessRange().isEmpty()) {\r\n                                    return\r\n                                }\r\n                                var scale = translator.getMinScale(delta > 0);\r\n                                var {\r\n                                    stopInteraction: stopInteraction,\r\n                                    result: result\r\n                                } = axisZoom(axis, onlyAxisToNotify, () => {\r\n                                    var zoom = translator.zoom(-(coord - coord * scale), scale, axis.getZoomBounds());\r\n                                    return {\r\n                                        startValue: zoom.min,\r\n                                        endValue: zoom.max\r\n                                    }\r\n                                }, getParameters, \"zoom\", scale, e);\r\n                                zoomStarted = !stopInteraction;\r\n                                return onlyAxisToNotify && result.isPrevented\r\n                            });\r\n                            return zoomStarted\r\n                        }\r\n                        var coords = calcCenterForDrag(e);\r\n                        var axesZoomed = false;\r\n                        var targetAxes;\r\n                        if (options.valueAxis.zoom) {\r\n                            targetAxes = chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), coords));\r\n                            if (0 === targetAxes.length) {\r\n                                var targetCanvas = chart._valueAxes.reduce((r, axis) => {\r\n                                    if (!r && axis.coordsIn(coords.x, coords.y)) {\r\n                                        r = axis.getCanvas()\r\n                                    }\r\n                                    return r\r\n                                }, null);\r\n                                if (targetCanvas) {\r\n                                    targetAxes = chart._valueAxes.filter(axis => checkCoords(canvasToRect(axis.getCanvas()), {\r\n                                        x: targetCanvas.left,\r\n                                        y: targetCanvas.top\r\n                                    }))\r\n                                }\r\n                            }\r\n                            axesZoomed |= zoomAxes(targetAxes, rotated ? coords.x : coords.y, e.delta)\r\n                        }\r\n                        if (options.argumentAxis.zoom) {\r\n                            var canZoom = chart._argumentAxes.some(axis => {\r\n                                if (checkCoords(canvasToRect(axis.getCanvas()), coords) || axis.coordsIn(coords.x, coords.y)) {\r\n                                    return true\r\n                                }\r\n                                return false\r\n                            });\r\n                            axesZoomed |= canZoom && zoomAxes(chart._argumentAxes, rotated ? coords.y : coords.x, e.delta, chart.getArgumentAxis())\r\n                        }\r\n                        if (axesZoomed) {\r\n                            chart._requestChange([\"VISUAL_RANGE\"]);\r\n                            zoomAndPan.panningVisualRangeEnabled(targetAxes) && preventDefaults(e)\r\n                        }\r\n                    }))\r\n                }\r\n                if (options.allowTouchGestures) {\r\n                    if (options.argumentAxis.zoom || options.valueAxis.zoom) {\r\n                        renderer.root.on(PINCH_START_EVENT_NAME, {\r\n                            passive: false\r\n                        }, zoomAndPan.pinchStartHandler).on(PINCH_EVENT_NAME, {\r\n                            passive: false\r\n                        }, zoomAndPan.pinchHandler).on(PINCH_END_EVENT_NAME, zoomAndPan.pinchEndHandler)\r\n                    }\r\n                }\r\n                renderer.root.on(DRAG_START_EVENT_NAME, {\r\n                    immediate: true,\r\n                    passive: false\r\n                }, zoomAndPan.dragStartHandler).on(DRAG_EVENT_NAME, {\r\n                    immediate: true,\r\n                    passive: false\r\n                }, zoomAndPan.dragHandler).on(DRAG_END_EVENT_NAME, zoomAndPan.dragEndHandler);\r\n                if (options.argumentAxis.pan) {\r\n                    renderer.root.on(SCROLL_BAR_START_EVENT_NAME, (function(e) {\r\n                        zoomAndPan.actionData = {\r\n                            valueAxes: [],\r\n                            offset: {\r\n                                x: 0,\r\n                                y: 0\r\n                            },\r\n                            center: {\r\n                                x: 0,\r\n                                y: 0\r\n                            }\r\n                        };\r\n                        preventDefaults(e);\r\n                        startAxesViewportChanging(zoomAndPan, \"pan\", e)\r\n                    })).on(SCROLL_BAR_MOVE_EVENT_NAME, (function(e) {\r\n                        preventDefaults(e);\r\n                        axesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag, e => e.offset)\r\n                    })).on(SCROLL_BAR_END_EVENT_NAME, (function(e) {\r\n                        preventDefaults(e);\r\n                        finishAxesViewportChanging(zoomAndPan, \"pan\", e, calcOffsetForDrag);\r\n                        zoomAndPan.actionData = null\r\n                    }))\r\n                }\r\n            },\r\n            defineTouchBehavior: function(isDefault, e) {\r\n                zoomAndPan.actionData && (zoomAndPan.actionData.isNative = isDefault);\r\n                if (!isDefault) {\r\n                    preventDefaults(e)\r\n                }\r\n            },\r\n            panningVisualRangeEnabled: function(targetAxes) {\r\n                if (null !== targetAxes && void 0 !== targetAxes && targetAxes.length) {\r\n                    return targetAxes.some(axis => !axis.isExtremePosition(false) || !axis.isExtremePosition(true))\r\n                }\r\n                var enablePanByValueAxis = chart._valueAxes.some(axis => !axis.isExtremePosition(false) || !axis.isExtremePosition(true));\r\n                var enablePanByArgumentAxis = chart._argumentAxes.some(axis => !axis.isExtremePosition(false) || !axis.isExtremePosition(true));\r\n                return enablePanByValueAxis || enablePanByArgumentAxis\r\n            }\r\n        };\r\n        this._zoomAndPan = zoomAndPan\r\n    },\r\n    members: {\r\n        _setupZoomAndPan: function() {\r\n            this._zoomAndPan.setup(this._themeManager.getOptions(\"zoomAndPan\"))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._zoomAndPan.cleanup()\r\n    },\r\n    customize: function(constructor) {\r\n        constructor.addChange({\r\n            code: \"ZOOM_AND_PAN\",\r\n            handler: function() {\r\n                this._setupZoomAndPan()\r\n            },\r\n            isThemeDependent: true,\r\n            isOptionChange: true,\r\n            option: \"zoomAndPan\"\r\n        })\r\n    }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/chart_components/zoom_and_pan.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/core/series_family.js":
/*!***************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/core/series_family.js ***!
  \***************************************************************/
/*! exports provided: SeriesFamily */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SeriesFamily\", function() { return SeriesFamily; });\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/iterator */ \"./node_modules/devextreme/esm/core/utils/iterator.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/* harmony import */ var _core_utils_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/common */ \"./node_modules/devextreme/esm/core/utils/common.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/**\r\n * DevExtreme (esm/viz/core/series_family.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar {\r\n    round: round,\r\n    abs: abs,\r\n    pow: pow,\r\n    sqrt: sqrt\r\n} = Math;\r\nvar _min = Math.min;\r\nvar DEFAULT_BAR_GROUP_PADDING = .3;\r\n\r\nfunction validateBarPadding(barPadding) {\r\n    return barPadding < 0 || barPadding > 1 ? void 0 : barPadding\r\n}\r\n\r\nfunction validateBarGroupPadding(barGroupPadding) {\r\n    return barGroupPadding < 0 || barGroupPadding > 1 ? DEFAULT_BAR_GROUP_PADDING : barGroupPadding\r\n}\r\n\r\nfunction isStackExist(series, arg) {\r\n    return series.some((function(s) {\r\n        return !s.getOptions().ignoreEmptyPoints || s.getPointsByArg(arg, true).some((function(point) {\r\n            return point.hasValue()\r\n        }))\r\n    }))\r\n}\r\n\r\nfunction correctStackCoordinates(series, currentStacks, arg, stack, parameters, barsArea, seriesStackIndexCallback) {\r\n    series.forEach((function(series) {\r\n        var stackIndex = seriesStackIndexCallback(currentStacks.indexOf(stack), currentStacks.length);\r\n        var points = series.getPointsByArg(arg, true);\r\n        var barPadding = validateBarPadding(series.getOptions().barPadding);\r\n        var barWidth = series.getOptions().barWidth;\r\n        var offset = getOffset(stackIndex, parameters);\r\n        var width = parameters.width;\r\n        var extraParameters;\r\n        if (-1 === stackIndex) {\r\n            return\r\n        }\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(barPadding) || Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(barWidth)) {\r\n            extraParameters = calculateParams(barsArea, currentStacks.length, 1 - barPadding, barWidth);\r\n            width = extraParameters.width;\r\n            if (!series.getBarOverlapGroup()) {\r\n                offset = getOffset(stackIndex, extraParameters)\r\n            }\r\n        }\r\n        correctPointCoordinates(points, width, offset)\r\n    }))\r\n}\r\n\r\nfunction getStackName(series) {\r\n    return series.getStackName() || series.getBarOverlapGroup()\r\n}\r\n\r\nfunction adjustBarSeriesDimensionsCore(series, options, seriesStackIndexCallback) {\r\n    var _series$, _series$2;\r\n    var commonStacks = [];\r\n    var allArguments = [];\r\n    var seriesInStacks = {};\r\n    var barGroupWidth = options.barGroupWidth;\r\n    var argumentAxis = null === (_series$ = series[0]) || void 0 === _series$ ? void 0 : _series$.getArgumentAxis();\r\n    var interval;\r\n    if (null !== (_series$2 = series[0]) && void 0 !== _series$2 && _series$2.useAggregation()) {\r\n        var _series$3;\r\n        var isDateArgAxis = \"datetime\" === (null === (_series$3 = series[0]) || void 0 === _series$3 ? void 0 : _series$3.argumentType);\r\n        var tickInterval = argumentAxis.getTickInterval();\r\n        var aggregationInterval = argumentAxis.getAggregationInterval();\r\n        tickInterval = isDateArgAxis ? _core_utils_date__WEBPACK_IMPORTED_MODULE_6__[\"default\"].dateToMilliseconds(tickInterval) : tickInterval;\r\n        aggregationInterval = isDateArgAxis ? _core_utils_date__WEBPACK_IMPORTED_MODULE_6__[\"default\"].dateToMilliseconds(aggregationInterval) : aggregationInterval;\r\n        interval = aggregationInterval < tickInterval ? aggregationInterval : tickInterval\r\n    }\r\n    interval = null === argumentAxis || void 0 === argumentAxis ? void 0 : argumentAxis.getTranslator().getInterval(interval);\r\n    var barsArea = barGroupWidth ? interval > barGroupWidth ? barGroupWidth : interval : interval * (1 - validateBarGroupPadding(options.barGroupPadding));\r\n    series.forEach((function(s, i) {\r\n        var stackName = getStackName(s) || i.toString();\r\n        var argument;\r\n        for (argument in s.pointsByArgument) {\r\n            if (-1 === allArguments.indexOf(argument.valueOf())) {\r\n                allArguments.push(argument.valueOf())\r\n            }\r\n        }\r\n        if (-1 === commonStacks.indexOf(stackName)) {\r\n            commonStacks.push(stackName);\r\n            seriesInStacks[stackName] = []\r\n        }\r\n        seriesInStacks[stackName].push(s)\r\n    }));\r\n    allArguments.forEach((function(arg) {\r\n        var currentStacks = commonStacks.reduce((stacks, stack) => {\r\n            if (isStackExist(seriesInStacks[stack], arg)) {\r\n                stacks.push(stack)\r\n            }\r\n            return stacks\r\n        }, []);\r\n        var parameters = calculateParams(barsArea, currentStacks.length);\r\n        commonStacks.forEach(stack => {\r\n            correctStackCoordinates(seriesInStacks[stack], currentStacks, arg, stack, parameters, barsArea, seriesStackIndexCallback)\r\n        })\r\n    }))\r\n}\r\n\r\nfunction calculateParams(barsArea, count, percentWidth, fixedBarWidth) {\r\n    var spacing;\r\n    var width;\r\n    if (fixedBarWidth) {\r\n        width = _min(fixedBarWidth, barsArea / count);\r\n        spacing = count > 1 ? round((barsArea - round(width) * count) / (count - 1)) : 0\r\n    } else if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(percentWidth)) {\r\n        width = barsArea * percentWidth / count;\r\n        spacing = count > 1 ? round((barsArea - barsArea * percentWidth) / (count - 1)) : 0\r\n    } else {\r\n        spacing = round(barsArea / count * .2);\r\n        width = (barsArea - spacing * (count - 1)) / count\r\n    }\r\n    return {\r\n        width: width > 1 ? round(width) : 1,\r\n        spacing: spacing,\r\n        middleIndex: count / 2,\r\n        rawWidth: width\r\n    }\r\n}\r\n\r\nfunction getOffset(stackIndex, parameters) {\r\n    var width = parameters.rawWidth < 1 ? parameters.rawWidth : parameters.width;\r\n    return (stackIndex - parameters.middleIndex + .5) * width - (parameters.middleIndex - stackIndex - .5) * parameters.spacing\r\n}\r\n\r\nfunction correctPointCoordinates(points, width, offset) {\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(points, (function(_, point) {\r\n        point.correctCoordinates({\r\n            width: width,\r\n            offset: offset\r\n        })\r\n    }))\r\n}\r\n\r\nfunction getValueType(value) {\r\n    return value >= 0 ? \"positive\" : \"negative\"\r\n}\r\n\r\nfunction getVisibleSeries(that) {\r\n    return that.series.filter((function(s) {\r\n        return s.isVisible()\r\n    }))\r\n}\r\n\r\nfunction getAbsStackSumByArg(stackKeepers, stackName, argument) {\r\n    var positiveStackValue = (stackKeepers.positive[stackName] || {})[argument] || 0;\r\n    var negativeStackValue = -(stackKeepers.negative[stackName] || {})[argument] || 0;\r\n    return positiveStackValue + negativeStackValue\r\n}\r\n\r\nfunction getStackSumByArg(stackKeepers, stackName, argument) {\r\n    var positiveStackValue = (stackKeepers.positive[stackName] || {})[argument] || 0;\r\n    var negativeStackValue = (stackKeepers.negative[stackName] || {})[argument] || 0;\r\n    return positiveStackValue + negativeStackValue\r\n}\r\n\r\nfunction getSeriesStackIndexCallback(inverted) {\r\n    if (!inverted) {\r\n        return function(index) {\r\n            return index\r\n        }\r\n    } else {\r\n        return function(index, stackCount) {\r\n            return stackCount - index - 1\r\n        }\r\n    }\r\n}\r\n\r\nfunction isInverted(series) {\r\n    return series[0] && series[0].getArgumentAxis().getTranslator().isInverted()\r\n}\r\n\r\nfunction adjustBarSeriesDimensions() {\r\n    var series = getVisibleSeries(this);\r\n    adjustBarSeriesDimensionsCore(series, this._options, getSeriesStackIndexCallback(isInverted(series)))\r\n}\r\n\r\nfunction getFirstValueSign(series) {\r\n    var points = series.getPoints();\r\n    var value;\r\n    for (var i = 0; i < points.length; i++) {\r\n        var point = points[i];\r\n        value = point.initialValue && point.initialValue.valueOf();\r\n        if (abs(value) > 0) {\r\n            break\r\n        }\r\n    }\r\n    return Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_3__[\"sign\"])(value)\r\n}\r\n\r\nfunction adjustStackedSeriesValues() {\r\n    var negativesAsZeroes = this._options.negativesAsZeroes;\r\n    var series = getVisibleSeries(this);\r\n    var stackKeepers = {\r\n        positive: {},\r\n        negative: {}\r\n    };\r\n    var holesStack = {\r\n        left: {},\r\n        right: {}\r\n    };\r\n    var lastSeriesInPositiveStack = {};\r\n    var lastSeriesInNegativeStack = {};\r\n    series.forEach((function(singleSeries) {\r\n        var stackName = getStackName(singleSeries);\r\n        var hole = false;\r\n        var stack = getFirstValueSign(singleSeries) < 0 ? lastSeriesInNegativeStack : lastSeriesInPositiveStack;\r\n        singleSeries._prevSeries = stack[stackName];\r\n        stack[stackName] = singleSeries;\r\n        singleSeries.holes = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(true, {}, holesStack);\r\n        singleSeries.getPoints().forEach((function(point, index, points) {\r\n            var value = point.initialValue && point.initialValue.valueOf();\r\n            var argument = point.argument.valueOf();\r\n            var stacks = value >= 0 ? stackKeepers.positive : stackKeepers.negative;\r\n            var isNotBarSeries = \"bar\" !== singleSeries.type;\r\n            if (negativesAsZeroes && value < 0) {\r\n                stacks = stackKeepers.positive;\r\n                value = 0;\r\n                point.resetValue()\r\n            }\r\n            stacks[stackName] = stacks[stackName] || {};\r\n            var currentStack = stacks[stackName];\r\n            if (currentStack[argument]) {\r\n                if (isNotBarSeries) {\r\n                    point.correctValue(currentStack[argument])\r\n                }\r\n                currentStack[argument] += value\r\n            } else {\r\n                currentStack[argument] = value;\r\n                if (isNotBarSeries) {\r\n                    point.resetCorrection()\r\n                }\r\n            }\r\n            if (!point.hasValue()) {\r\n                var prevPoint = points[index - 1];\r\n                if (!hole && prevPoint && prevPoint.hasValue()) {\r\n                    argument = prevPoint.argument.valueOf();\r\n                    prevPoint._skipSetRightHole = true;\r\n                    holesStack.right[argument] = (holesStack.right[argument] || 0) + (prevPoint.value.valueOf() - (isFinite(prevPoint.minValue) ? prevPoint.minValue.valueOf() : 0))\r\n                }\r\n                hole = true\r\n            } else if (hole) {\r\n                hole = false;\r\n                holesStack.left[argument] = (holesStack.left[argument] || 0) + (point.value.valueOf() - (isFinite(point.minValue) ? point.minValue.valueOf() : 0));\r\n                point._skipSetLeftHole = true\r\n            }\r\n        }))\r\n    }));\r\n    series.forEach((function(singleSeries) {\r\n        var holes = singleSeries.holes;\r\n        singleSeries.getPoints().forEach((function(point) {\r\n            var argument = point.argument.valueOf();\r\n            point.resetHoles();\r\n            !point._skipSetLeftHole && point.setHole(holes.left[argument] || holesStack.left[argument] && 0, \"left\");\r\n            !point._skipSetRightHole && point.setHole(holes.right[argument] || holesStack.right[argument] && 0, \"right\");\r\n            point._skipSetLeftHole = null;\r\n            point._skipSetRightHole = null\r\n        }))\r\n    }));\r\n    this._stackKeepers = stackKeepers;\r\n    series.forEach((function(singleSeries) {\r\n        singleSeries.getPoints().forEach((function(point) {\r\n            var argument = point.argument.valueOf();\r\n            var stackName = getStackName(singleSeries);\r\n            var absTotal = getAbsStackSumByArg(stackKeepers, stackName, argument);\r\n            var total = getStackSumByArg(stackKeepers, stackName, argument);\r\n            point.setPercentValue(absTotal, total, holesStack.left[argument], holesStack.right[argument])\r\n        }))\r\n    }))\r\n}\r\n\r\nfunction updateStackedSeriesValues() {\r\n    var that = this;\r\n    var series = getVisibleSeries(that);\r\n    var stack = that._stackKeepers;\r\n    var stackKeepers = {\r\n        positive: {},\r\n        negative: {}\r\n    };\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(series, (function(_, singleSeries) {\r\n        var minBarSize = singleSeries.getOptions().minBarSize;\r\n        var valueAxisTranslator = singleSeries.getValueAxis().getTranslator();\r\n        var minShownBusinessValue = minBarSize && valueAxisTranslator.getMinBarSize(minBarSize);\r\n        var stackName = singleSeries.getStackName();\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(singleSeries.getPoints(), (function(index, point) {\r\n            if (!point.hasValue()) {\r\n                return\r\n            }\r\n            var value = point.initialValue && point.initialValue.valueOf();\r\n            var argument = point.argument.valueOf();\r\n            if (that.fullStacked) {\r\n                value = value / getAbsStackSumByArg(stack, stackName, argument) || 0\r\n            }\r\n            var updateValue = valueAxisTranslator.checkMinBarSize(value, minShownBusinessValue, point.value);\r\n            var valueType = getValueType(updateValue);\r\n            var currentStack = stackKeepers[valueType][stackName] = stackKeepers[valueType][stackName] || {};\r\n            if (currentStack[argument]) {\r\n                point.minValue = currentStack[argument];\r\n                currentStack[argument] += updateValue\r\n            } else {\r\n                currentStack[argument] = updateValue\r\n            }\r\n            point.value = currentStack[argument]\r\n        }))\r\n    }));\r\n    if (that.fullStacked) {\r\n        updateFullStackedSeriesValues(series, stackKeepers)\r\n    }\r\n}\r\n\r\nfunction updateFullStackedSeriesValues(series, stackKeepers) {\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(series, (function(_, singleSeries) {\r\n        var stackName = singleSeries.getStackName ? singleSeries.getStackName() : \"default\";\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(singleSeries.getPoints(), (function(index, point) {\r\n            var stackSum = getAbsStackSumByArg(stackKeepers, stackName, point.argument.valueOf());\r\n            if (0 !== stackSum) {\r\n                point.value = point.value / stackSum;\r\n                if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isNumeric\"])(point.minValue)) {\r\n                    point.minValue = point.minValue / stackSum\r\n                }\r\n            }\r\n        }))\r\n    }))\r\n}\r\n\r\nfunction updateBarSeriesValues() {\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(this.series, (function(_, singleSeries) {\r\n        var minBarSize = singleSeries.getOptions().minBarSize;\r\n        var valueAxisTranslator = singleSeries.getValueAxis().getTranslator();\r\n        var minShownBusinessValue = minBarSize && valueAxisTranslator.getMinBarSize(minBarSize);\r\n        if (minShownBusinessValue) {\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(singleSeries.getPoints(), (function(index, point) {\r\n                if (point.hasValue()) {\r\n                    point.value = valueAxisTranslator.checkMinBarSize(point.initialValue, minShownBusinessValue)\r\n                }\r\n            }))\r\n        }\r\n    }))\r\n}\r\n\r\nfunction adjustCandlestickSeriesDimensions() {\r\n    var series = getVisibleSeries(this);\r\n    adjustBarSeriesDimensionsCore(series, {\r\n        barGroupPadding: .3\r\n    }, getSeriesStackIndexCallback(isInverted(series)))\r\n}\r\n\r\nfunction adjustBubbleSeriesDimensions() {\r\n    var series = getVisibleSeries(this);\r\n    if (!series.length) {\r\n        return\r\n    }\r\n    var options = this._options;\r\n    var visibleAreaX = series[0].getArgumentAxis().getVisibleArea();\r\n    var visibleAreaY = series[0].getValueAxis().getVisibleArea();\r\n    var min = _min(visibleAreaX[1] - visibleAreaX[0], visibleAreaY[1] - visibleAreaY[0]);\r\n    var minBubbleArea = pow(options.minBubbleSize, 2);\r\n    var maxBubbleArea = pow(min * options.maxBubbleSize, 2);\r\n    var equalBubbleSize = (min * options.maxBubbleSize + options.minBubbleSize) / 2;\r\n    var minPointSize = 1 / 0;\r\n    var maxPointSize = -1 / 0;\r\n    var pointSize;\r\n    var bubbleArea;\r\n    var sizeProportion;\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(series, (function(_, seriesItem) {\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(seriesItem.getPoints(), (function(_, point) {\r\n            maxPointSize = maxPointSize > point.size ? maxPointSize : point.size;\r\n            minPointSize = minPointSize < point.size ? minPointSize : point.size\r\n        }))\r\n    }));\r\n    var sizeDispersion = maxPointSize - minPointSize;\r\n    var areaDispersion = abs(maxBubbleArea - minBubbleArea);\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(series, (function(_, seriesItem) {\r\n        Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_2__[\"each\"])(seriesItem.getPoints(), (function(_, point) {\r\n            if (maxPointSize === minPointSize) {\r\n                pointSize = round(equalBubbleSize)\r\n            } else {\r\n                sizeProportion = abs(point.size - minPointSize) / sizeDispersion;\r\n                bubbleArea = areaDispersion * sizeProportion + minBubbleArea;\r\n                pointSize = round(sqrt(bubbleArea))\r\n            }\r\n            point.correctCoordinates(pointSize)\r\n        }))\r\n    }))\r\n}\r\nfunction SeriesFamily(options) {\r\n    this.type = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"normalizeEnum\"])(options.type);\r\n    this.pane = options.pane;\r\n    this.series = [];\r\n    this.updateOptions(options);\r\n    switch (this.type) {\r\n        case \"bar\":\r\n            this.adjustSeriesDimensions = adjustBarSeriesDimensions;\r\n            this.updateSeriesValues = updateBarSeriesValues;\r\n            this.adjustSeriesValues = adjustStackedSeriesValues;\r\n            break;\r\n        case \"rangebar\":\r\n            this.adjustSeriesDimensions = adjustBarSeriesDimensions;\r\n            break;\r\n        case \"fullstackedbar\":\r\n            this.fullStacked = true;\r\n            this.adjustSeriesDimensions = adjustBarSeriesDimensions;\r\n            this.adjustSeriesValues = adjustStackedSeriesValues;\r\n            this.updateSeriesValues = updateStackedSeriesValues;\r\n            break;\r\n        case \"stackedbar\":\r\n            this.adjustSeriesDimensions = adjustBarSeriesDimensions;\r\n            this.adjustSeriesValues = adjustStackedSeriesValues;\r\n            this.updateSeriesValues = updateStackedSeriesValues;\r\n            break;\r\n        case \"fullstackedarea\":\r\n        case \"fullstackedline\":\r\n        case \"fullstackedspline\":\r\n        case \"fullstackedsplinearea\":\r\n            this.fullStacked = true;\r\n            this.adjustSeriesValues = adjustStackedSeriesValues;\r\n            break;\r\n        case \"stackedarea\":\r\n        case \"stackedsplinearea\":\r\n        case \"stackedline\":\r\n        case \"stackedspline\":\r\n            this.adjustSeriesValues = adjustStackedSeriesValues;\r\n            break;\r\n        case \"candlestick\":\r\n        case \"stock\":\r\n            this.adjustSeriesDimensions = adjustCandlestickSeriesDimensions;\r\n            break;\r\n        case \"bubble\":\r\n            this.adjustSeriesDimensions = adjustBubbleSeriesDimensions\r\n    }\r\n}\r\nSeriesFamily.prototype = {\r\n    constructor: SeriesFamily,\r\n    adjustSeriesDimensions: _core_utils_common__WEBPACK_IMPORTED_MODULE_4__[\"noop\"],\r\n    adjustSeriesValues: _core_utils_common__WEBPACK_IMPORTED_MODULE_4__[\"noop\"],\r\n    updateSeriesValues: _core_utils_common__WEBPACK_IMPORTED_MODULE_4__[\"noop\"],\r\n    updateOptions: function(options) {\r\n        this._options = options\r\n    },\r\n    dispose: function() {\r\n        this.series = null\r\n    },\r\n    add: function(series) {\r\n        var type = this.type;\r\n        this.series = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"map\"])(series, singleSeries => singleSeries.type === type ? singleSeries : null)\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/core/series_family.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/translators/category_translator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/translators/category_translator.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/**\r\n * DevExtreme (esm/viz/translators/category_translator.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\nvar round = Math.round;\r\n\r\nfunction getValue(value) {\r\n    return value\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    translate: function(category, directionOffset) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var categoryIndex = this._categoriesToPoints[null === category || void 0 === category ? void 0 : category.valueOf()];\r\n        var specialValue = this.translateSpecialCase(category);\r\n        var startPointIndex = canvasOptions.startPointIndex || 0;\r\n        var stickInterval = this._options.stick ? 0 : .5;\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(specialValue)) {\r\n            return round(specialValue)\r\n        }\r\n        if (!categoryIndex && 0 !== categoryIndex) {\r\n            return null\r\n        }\r\n        directionOffset = directionOffset || 0;\r\n        var stickDelta = categoryIndex + stickInterval - startPointIndex + .5 * directionOffset;\r\n        return round(this._calculateProjection(canvasOptions.interval * stickDelta))\r\n    },\r\n    getInterval: function() {\r\n        return this._canvasOptions.interval\r\n    },\r\n    getEventScale: function(zoomEvent) {\r\n        var scale = zoomEvent.deltaScale || 1;\r\n        return 1 - (1 - scale) / (.75 + this.visibleCategories.length / this._categories.length)\r\n    },\r\n    zoom: function(translate, scale) {\r\n        var categories = this._categories;\r\n        var canvasOptions = this._canvasOptions;\r\n        var stick = this._options.stick;\r\n        var invert = canvasOptions.invert;\r\n        var interval = canvasOptions.interval * scale;\r\n        var translateCategories = translate / interval;\r\n        var visibleCount = (this.visibleCategories || []).length;\r\n        var startCategoryIndex = parseInt((canvasOptions.startPointIndex || 0) + translateCategories + .5);\r\n        var categoriesLength = parseInt(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_1__[\"adjust\"])(canvasOptions.canvasLength / interval) + (stick ? 1 : 0)) || 1;\r\n        var endCategoryIndex;\r\n        if (invert) {\r\n            startCategoryIndex = parseInt((canvasOptions.startPointIndex || 0) + visibleCount - translateCategories + .5) - categoriesLength\r\n        }\r\n        if (startCategoryIndex < 0) {\r\n            startCategoryIndex = 0\r\n        }\r\n        endCategoryIndex = startCategoryIndex + categoriesLength;\r\n        if (endCategoryIndex > categories.length) {\r\n            endCategoryIndex = categories.length;\r\n            startCategoryIndex = endCategoryIndex - categoriesLength;\r\n            if (startCategoryIndex < 0) {\r\n                startCategoryIndex = 0\r\n            }\r\n        }\r\n        var newVisibleCategories = categories.slice(parseInt(startCategoryIndex), parseInt(endCategoryIndex));\r\n        var newInterval = this._getDiscreteInterval(newVisibleCategories.length, canvasOptions);\r\n        scale = newInterval / canvasOptions.interval;\r\n        translate = this.translate(!invert ? newVisibleCategories[0] : newVisibleCategories[newVisibleCategories.length - 1]) * scale - (canvasOptions.startPoint + (stick ? 0 : newInterval / 2));\r\n        return {\r\n            min: newVisibleCategories[0],\r\n            max: newVisibleCategories[newVisibleCategories.length - 1],\r\n            translate: translate,\r\n            scale: scale\r\n        }\r\n    },\r\n    getMinScale: function(zoom) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var categoriesLength = (this.visibleCategories || this._categories).length;\r\n        categoriesLength += (parseInt(.1 * categoriesLength) || 1) * (zoom ? -2 : 2);\r\n        return canvasOptions.canvasLength / (Math.max(categoriesLength, 1) * canvasOptions.interval)\r\n    },\r\n    getScale: function(min, max) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var visibleArea = this.getCanvasVisibleArea();\r\n        var stickOffset = !this._options.stick && 1;\r\n        var minPoint = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(min) ? this.translate(min, -stickOffset) : null;\r\n        var maxPoint = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(max) ? this.translate(max, +stickOffset) : null;\r\n        if (null === minPoint) {\r\n            minPoint = canvasOptions.invert ? visibleArea.max : visibleArea.min\r\n        }\r\n        if (null === maxPoint) {\r\n            maxPoint = canvasOptions.invert ? visibleArea.min : visibleArea.max\r\n        }\r\n        return this.canvasLength / Math.abs(maxPoint - minPoint)\r\n    },\r\n    isValid: function(value) {\r\n        return Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(value) ? this._categoriesToPoints[value.valueOf()] >= 0 : false\r\n    },\r\n    getCorrectValue: getValue,\r\n    to: function(value, direction) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var categoryIndex = this._categoriesToPoints[null === value || void 0 === value ? void 0 : value.valueOf()];\r\n        var startPointIndex = canvasOptions.startPointIndex || 0;\r\n        var stickDelta = categoryIndex + (this._options.stick ? 0 : .5) - startPointIndex + (this._businessRange.invert ? -1 : 1) * direction * .5;\r\n        return round(this._calculateProjection(canvasOptions.interval * stickDelta))\r\n    },\r\n    from: function(position) {\r\n        var direction = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;\r\n        var canvasOptions = this._canvasOptions;\r\n        var startPoint = canvasOptions.startPoint;\r\n        var categories = this.visibleCategories || this._categories;\r\n        var categoriesLength = categories.length;\r\n        var stickInterval = this._options.stick ? .5 : 0;\r\n        var result = round((position - startPoint) / canvasOptions.interval + stickInterval - .5 - .5 * direction);\r\n        if (result >= categoriesLength) {\r\n            result = categoriesLength - 1\r\n        }\r\n        if (result < 0) {\r\n            result = 0\r\n        }\r\n        if (canvasOptions.invert) {\r\n            result = categoriesLength - result - 1\r\n        }\r\n        return categories[result]\r\n    },\r\n    _add: function() {\r\n        return NaN\r\n    },\r\n    toValue: getValue,\r\n    isValueProlonged: true,\r\n    getRangeByMinZoomValue(minZoom, visualRange) {\r\n        var categories = this._categories;\r\n        var minVisibleIndex = categories.indexOf(visualRange.minVisible);\r\n        var maxVisibleIndex = categories.indexOf(visualRange.maxVisible);\r\n        var startIndex = minVisibleIndex + minZoom - 1;\r\n        var endIndex = maxVisibleIndex - minZoom + 1;\r\n        if (categories[startIndex]) {\r\n            return [visualRange.minVisible, categories[startIndex]]\r\n        } else {\r\n            return [categories[endIndex], visualRange.maxVisible]\r\n        }\r\n    }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/translators/category_translator.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/translators/datetime_translator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/translators/datetime_translator.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/**\r\n * DevExtreme (esm/viz/translators/datetime_translator.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\nfunction parse(value) {\r\n    return null !== value ? new Date(value) : value\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    fromValue: parse,\r\n    toValue: parse,\r\n    _add: _core_utils_date__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addDateInterval,\r\n    convert: _core_utils_date__WEBPACK_IMPORTED_MODULE_0__[\"default\"].dateToMilliseconds\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L3RyYW5zbGF0b3JzL2RhdGV0aW1lX3RyYW5zbGF0b3IuanM/NzFhMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM4Qzs7QUFFOUM7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0EsVUFBVSx3REFBUztBQUNuQixhQUFhLHdEQUFTO0FBQ3RCLENBQUMsRUFBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9kZXZleHRyZW1lL2VzbS92aXovdHJhbnNsYXRvcnMvZGF0ZXRpbWVfdHJhbnNsYXRvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBEZXZFeHRyZW1lIChlc20vdml6L3RyYW5zbGF0b3JzL2RhdGV0aW1lX3RyYW5zbGF0b3IuanMpXHJcbiAqIFZlcnNpb246IDIxLjIuN1xyXG4gKiBCdWlsZCBkYXRlOiBNb24gQXByIDExIDIwMjJcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMiBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICogUmVhZCBhYm91dCBEZXZFeHRyZW1lIGxpY2Vuc2luZyBoZXJlOiBodHRwczovL2pzLmRldmV4cHJlc3MuY29tL0xpY2Vuc2luZy9cclxuICovXHJcbmltcG9ydCBkYXRlVXRpbHMgZnJvbSBcIi4uLy4uL2NvcmUvdXRpbHMvZGF0ZVwiO1xyXG5cclxuZnVuY3Rpb24gcGFyc2UodmFsdWUpIHtcclxuICAgIHJldHVybiBudWxsICE9PSB2YWx1ZSA/IG5ldyBEYXRlKHZhbHVlKSA6IHZhbHVlXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgZnJvbVZhbHVlOiBwYXJzZSxcclxuICAgIHRvVmFsdWU6IHBhcnNlLFxyXG4gICAgX2FkZDogZGF0ZVV0aWxzLmFkZERhdGVJbnRlcnZhbCxcclxuICAgIGNvbnZlcnQ6IGRhdGVVdGlscy5kYXRlVG9NaWxsaXNlY29uZHNcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/translators/datetime_translator.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/translators/interval_translator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/translators/interval_translator.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/**\r\n * DevExtreme (esm/viz/translators/interval_translator.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\nvar floor = Math.floor;\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    _intervalize: function(value, interval) {\r\n        if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(value)) {\r\n            return\r\n        }\r\n        if (\"datetime\" === this._businessRange.dataType) {\r\n            if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isNumeric\"])(value)) {\r\n                value = new Date(value)\r\n            } else {\r\n                value = new Date(value.getTime())\r\n            }\r\n            value = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].correctDateWithUnitBeginning(value, interval, null, this._options.firstDayOfWeek)\r\n        } else {\r\n            value = Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_2__[\"adjust\"])(floor(Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_2__[\"adjust\"])(value / interval)) * interval, interval)\r\n        }\r\n        return value\r\n    },\r\n    translate: function(bp, direction, interval) {\r\n        var specialValue = this.translateSpecialCase(bp);\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(specialValue)) {\r\n            return Math.round(specialValue)\r\n        }\r\n        interval = interval || this._options.interval;\r\n        if (!this.isValid(bp, interval)) {\r\n            return null\r\n        }\r\n        return this.to(bp, direction, interval)\r\n    },\r\n    getInterval: function() {\r\n        return Math.round(this._canvasOptions.ratioOfCanvasRange * (this._businessRange.interval || Math.abs(this._canvasOptions.rangeMax - this._canvasOptions.rangeMin)))\r\n    },\r\n    zoom: function() {},\r\n    getMinScale: function() {},\r\n    getScale: function() {},\r\n    _parse: function(value) {\r\n        return \"datetime\" === this._businessRange.dataType ? new Date(value) : Number(value)\r\n    },\r\n    fromValue: function(value) {\r\n        return this._parse(value)\r\n    },\r\n    toValue: function(value) {\r\n        return this._parse(value)\r\n    },\r\n    isValid: function(value, interval) {\r\n        var co = this._canvasOptions;\r\n        var rangeMin = co.rangeMin;\r\n        var rangeMax = co.rangeMax;\r\n        interval = interval || this._options.interval;\r\n        if (null === value || isNaN(value)) {\r\n            return false\r\n        }\r\n        value = \"datetime\" === this._businessRange.dataType && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_0__[\"isNumeric\"])(value) ? new Date(value) : value;\r\n        if (interval !== this._options.interval) {\r\n            rangeMin = this._intervalize(rangeMin, interval);\r\n            rangeMax = this._intervalize(rangeMax, interval)\r\n        }\r\n        if (value.valueOf() < rangeMin || value.valueOf() >= _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addInterval(rangeMax, interval)) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    to: function(bp, direction, interval) {\r\n        interval = interval || this._options.interval;\r\n        var v1 = this._intervalize(bp, interval);\r\n        var v2 = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addInterval(v1, interval);\r\n        var res = this._to(v1);\r\n        var p2 = this._to(v2);\r\n        if (!direction) {\r\n            res = floor((res + p2) / 2)\r\n        } else if (direction > 0) {\r\n            res = p2\r\n        }\r\n        return res\r\n    },\r\n    _to: function(value) {\r\n        var co = this._canvasOptions;\r\n        var rMin = co.rangeMinVisible;\r\n        var rMax = co.rangeMaxVisible;\r\n        var offset = value - rMin;\r\n        if (value < rMin) {\r\n            offset = 0\r\n        } else if (value > rMax) {\r\n            offset = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addInterval(rMax, this._options.interval) - rMin\r\n        }\r\n        return this._conversionValue(this._calculateProjection(offset * this._canvasOptions.ratioOfCanvasRange))\r\n    },\r\n    from: function(position, direction) {\r\n        var origInterval = this._options.interval;\r\n        var interval = origInterval;\r\n        var co = this._canvasOptions;\r\n        var rMin = co.rangeMinVisible;\r\n        var rMax = co.rangeMaxVisible;\r\n        var value;\r\n        if (\"datetime\" === this._businessRange.dataType) {\r\n            interval = _core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].dateToMilliseconds(origInterval)\r\n        }\r\n        value = this._calculateUnProjection((position - this._canvasOptions.startPoint) / this._canvasOptions.ratioOfCanvasRange);\r\n        value = this._intervalize(_core_utils_date__WEBPACK_IMPORTED_MODULE_1__[\"default\"].addInterval(value, interval / 2, direction > 0), origInterval);\r\n        if (value < rMin) {\r\n            value = rMin\r\n        } else if (value > rMax) {\r\n            value = rMax\r\n        }\r\n        return value\r\n    },\r\n    _add: function() {\r\n        return NaN\r\n    },\r\n    isValueProlonged: true\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/translators/interval_translator.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/translators/logarithmic_translator.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/translators/logarithmic_translator.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/**\r\n * DevExtreme (esm/viz/translators/logarithmic_translator.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    fromValue: function(value) {\r\n        return null !== value ? Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"getLogExt\"])(value, this._canvasOptions.base, this._businessRange.allowNegatives, this._businessRange.linearThreshold) : value\r\n    },\r\n    toValue: function(value) {\r\n        return null !== value ? Object(_core_utils__WEBPACK_IMPORTED_MODULE_0__[\"raiseToExt\"])(value, this._canvasOptions.base, this._businessRange.allowNegatives, this._businessRange.linearThreshold) : value\r\n    },\r\n    getMinBarSize: function(minBarSize) {\r\n        var visibleArea = this.getCanvasVisibleArea();\r\n        var minValue = this.from(visibleArea.min + minBarSize);\r\n        var canvasOptions = this._canvasOptions;\r\n        return Math.pow(canvasOptions.base, canvasOptions.rangeMinVisible + this.fromValue(this.from(visibleArea.min)) - this.fromValue(!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(minValue) ? this.from(visibleArea.max) : minValue))\r\n    },\r\n    checkMinBarSize: function(initialValue, minShownValue, stackValue) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var prevValue = stackValue - initialValue;\r\n        var baseMethod = this.constructor.prototype.checkMinBarSize;\r\n        var minBarSize;\r\n        var updateValue;\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(minShownValue) && prevValue > 0) {\r\n            minBarSize = baseMethod(this.fromValue(stackValue / prevValue), this.fromValue(minShownValue) - canvasOptions.rangeMinVisible);\r\n            updateValue = Math.pow(canvasOptions.base, this.fromValue(prevValue) + minBarSize) - prevValue\r\n        } else {\r\n            updateValue = baseMethod(initialValue, minShownValue)\r\n        }\r\n        return updateValue\r\n    }\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L3RyYW5zbGF0b3JzL2xvZ2FyaXRobWljX3RyYW5zbGF0b3IuanM/NTc3YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSXVCO0FBR1E7QUFDaEI7QUFDZjtBQUNBLGdDQUFnQyw2REFBTTtBQUN0QyxLQUFLO0FBQ0w7QUFDQSxnQ0FBZ0MsOERBQU87QUFDdkMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUlBQXlJLGtFQUFTO0FBQ2xKLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGtFQUFTO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L3RyYW5zbGF0b3JzL2xvZ2FyaXRobWljX3RyYW5zbGF0b3IuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRGV2RXh0cmVtZSAoZXNtL3Zpei90cmFuc2xhdG9ycy9sb2dhcml0aG1pY190cmFuc2xhdG9yLmpzKVxyXG4gKiBWZXJzaW9uOiAyMS4yLjdcclxuICogQnVpbGQgZGF0ZTogTW9uIEFwciAxMSAyMDIyXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjIgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqIFJlYWQgYWJvdXQgRGV2RXh0cmVtZSBsaWNlbnNpbmcgaGVyZTogaHR0cHM6Ly9qcy5kZXZleHByZXNzLmNvbS9MaWNlbnNpbmcvXHJcbiAqL1xyXG5pbXBvcnQge1xyXG4gICAgcmFpc2VUb0V4dCBhcyByYWlzZVRvLFxyXG4gICAgZ2V0TG9nRXh0IGFzIGdldExvZ1xyXG59IGZyb20gXCIuLi9jb3JlL3V0aWxzXCI7XHJcbmltcG9ydCB7XHJcbiAgICBpc0RlZmluZWRcclxufSBmcm9tIFwiLi4vLi4vY29yZS91dGlscy90eXBlXCI7XHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGZyb21WYWx1ZTogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICByZXR1cm4gbnVsbCAhPT0gdmFsdWUgPyBnZXRMb2codmFsdWUsIHRoaXMuX2NhbnZhc09wdGlvbnMuYmFzZSwgdGhpcy5fYnVzaW5lc3NSYW5nZS5hbGxvd05lZ2F0aXZlcywgdGhpcy5fYnVzaW5lc3NSYW5nZS5saW5lYXJUaHJlc2hvbGQpIDogdmFsdWVcclxuICAgIH0sXHJcbiAgICB0b1ZhbHVlOiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgIHJldHVybiBudWxsICE9PSB2YWx1ZSA/IHJhaXNlVG8odmFsdWUsIHRoaXMuX2NhbnZhc09wdGlvbnMuYmFzZSwgdGhpcy5fYnVzaW5lc3NSYW5nZS5hbGxvd05lZ2F0aXZlcywgdGhpcy5fYnVzaW5lc3NSYW5nZS5saW5lYXJUaHJlc2hvbGQpIDogdmFsdWVcclxuICAgIH0sXHJcbiAgICBnZXRNaW5CYXJTaXplOiBmdW5jdGlvbihtaW5CYXJTaXplKSB7XHJcbiAgICAgICAgdmFyIHZpc2libGVBcmVhID0gdGhpcy5nZXRDYW52YXNWaXNpYmxlQXJlYSgpO1xyXG4gICAgICAgIHZhciBtaW5WYWx1ZSA9IHRoaXMuZnJvbSh2aXNpYmxlQXJlYS5taW4gKyBtaW5CYXJTaXplKTtcclxuICAgICAgICB2YXIgY2FudmFzT3B0aW9ucyA9IHRoaXMuX2NhbnZhc09wdGlvbnM7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgucG93KGNhbnZhc09wdGlvbnMuYmFzZSwgY2FudmFzT3B0aW9ucy5yYW5nZU1pblZpc2libGUgKyB0aGlzLmZyb21WYWx1ZSh0aGlzLmZyb20odmlzaWJsZUFyZWEubWluKSkgLSB0aGlzLmZyb21WYWx1ZSghaXNEZWZpbmVkKG1pblZhbHVlKSA/IHRoaXMuZnJvbSh2aXNpYmxlQXJlYS5tYXgpIDogbWluVmFsdWUpKVxyXG4gICAgfSxcclxuICAgIGNoZWNrTWluQmFyU2l6ZTogZnVuY3Rpb24oaW5pdGlhbFZhbHVlLCBtaW5TaG93blZhbHVlLCBzdGFja1ZhbHVlKSB7XHJcbiAgICAgICAgdmFyIGNhbnZhc09wdGlvbnMgPSB0aGlzLl9jYW52YXNPcHRpb25zO1xyXG4gICAgICAgIHZhciBwcmV2VmFsdWUgPSBzdGFja1ZhbHVlIC0gaW5pdGlhbFZhbHVlO1xyXG4gICAgICAgIHZhciBiYXNlTWV0aG9kID0gdGhpcy5jb25zdHJ1Y3Rvci5wcm90b3R5cGUuY2hlY2tNaW5CYXJTaXplO1xyXG4gICAgICAgIHZhciBtaW5CYXJTaXplO1xyXG4gICAgICAgIHZhciB1cGRhdGVWYWx1ZTtcclxuICAgICAgICBpZiAoaXNEZWZpbmVkKG1pblNob3duVmFsdWUpICYmIHByZXZWYWx1ZSA+IDApIHtcclxuICAgICAgICAgICAgbWluQmFyU2l6ZSA9IGJhc2VNZXRob2QodGhpcy5mcm9tVmFsdWUoc3RhY2tWYWx1ZSAvIHByZXZWYWx1ZSksIHRoaXMuZnJvbVZhbHVlKG1pblNob3duVmFsdWUpIC0gY2FudmFzT3B0aW9ucy5yYW5nZU1pblZpc2libGUpO1xyXG4gICAgICAgICAgICB1cGRhdGVWYWx1ZSA9IE1hdGgucG93KGNhbnZhc09wdGlvbnMuYmFzZSwgdGhpcy5mcm9tVmFsdWUocHJldlZhbHVlKSArIG1pbkJhclNpemUpIC0gcHJldlZhbHVlXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdXBkYXRlVmFsdWUgPSBiYXNlTWV0aG9kKGluaXRpYWxWYWx1ZSwgbWluU2hvd25WYWx1ZSlcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHVwZGF0ZVZhbHVlXHJcbiAgICB9XHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/translators/logarithmic_translator.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/translators/translator2d.js":
/*!*********************************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/translators/translator2d.js ***!
  \*********************************************************************/
/*! exports provided: Translator2D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Translator2D\", function() { return _Translator2d; });\n/* harmony import */ var _core_utils_extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/extend */ \"./node_modules/devextreme/esm/core/utils/extend.js\");\n/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/iterator */ \"./node_modules/devextreme/esm/core/utils/iterator.js\");\n/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./range */ \"./node_modules/devextreme/esm/viz/translators/range.js\");\n/* harmony import */ var _category_translator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./category_translator */ \"./node_modules/devextreme/esm/viz/translators/category_translator.js\");\n/* harmony import */ var _interval_translator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interval_translator */ \"./node_modules/devextreme/esm/viz/translators/interval_translator.js\");\n/* harmony import */ var _datetime_translator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./datetime_translator */ \"./node_modules/devextreme/esm/viz/translators/datetime_translator.js\");\n/* harmony import */ var _logarithmic_translator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./logarithmic_translator */ \"./node_modules/devextreme/esm/viz/translators/logarithmic_translator.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/devextreme/esm/viz/core/utils.js\");\n/* harmony import */ var _core_utils_type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/type */ \"./node_modules/devextreme/esm/core/utils/type.js\");\n/* harmony import */ var _core_utils_math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/math */ \"./node_modules/devextreme/esm/core/utils/math.js\");\n/* harmony import */ var _core_utils_date__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/date */ \"./node_modules/devextreme/esm/core/utils/date.js\");\n/**\r\n * DevExtreme (esm/viz/translators/translator2d.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar _abs = Math.abs;\r\nvar CANVAS_PROP = [\"width\", \"height\", \"left\", \"top\", \"bottom\", \"right\"];\r\nvar dummyTranslator = {\r\n    to(value) {\r\n        var coord = this._canvasOptions.startPoint + (this._options.conversionValue ? value : Math.round(value));\r\n        return coord > this._canvasOptions.endPoint ? this._canvasOptions.endPoint : coord\r\n    },\r\n    from(value) {\r\n        return value - this._canvasOptions.startPoint\r\n    }\r\n};\r\nvar validateCanvas = function(canvas) {\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__[\"each\"])(CANVAS_PROP, (function(_, prop) {\r\n        canvas[prop] = parseInt(canvas[prop]) || 0\r\n    }));\r\n    return canvas\r\n};\r\nvar makeCategoriesToPoints = function(categories) {\r\n    var categoriesToPoints = {};\r\n    categories.forEach((function(item, i) {\r\n        categoriesToPoints[item.valueOf()] = i\r\n    }));\r\n    return categoriesToPoints\r\n};\r\nvar validateBusinessRange = function(businessRange) {\r\n    if (!(businessRange instanceof _range__WEBPACK_IMPORTED_MODULE_2__[\"Range\"])) {\r\n        businessRange = new _range__WEBPACK_IMPORTED_MODULE_2__[\"Range\"](businessRange)\r\n    }\r\n\r\n    function validate(valueSelector, baseValueSelector) {\r\n        if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(businessRange[valueSelector]) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(businessRange[baseValueSelector])) {\r\n            businessRange[valueSelector] = businessRange[baseValueSelector]\r\n        }\r\n    }\r\n    validate(\"minVisible\", \"min\");\r\n    validate(\"maxVisible\", \"max\");\r\n    return businessRange\r\n};\r\n\r\nfunction prepareBreaks(breaks, range) {\r\n    var transform = \"logarithmic\" === range.axisType ? function(value) {\r\n        return Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"getLogExt\"])(value, range.base)\r\n    } : function(value) {\r\n        return value\r\n    };\r\n    var array = [];\r\n    var br;\r\n    var transformFrom;\r\n    var transformTo;\r\n    var i;\r\n    var length = breaks.length;\r\n    var sum = 0;\r\n    for (i = 0; i < length; i++) {\r\n        br = breaks[i];\r\n        transformFrom = transform(br.from);\r\n        transformTo = transform(br.to);\r\n        sum += transformTo - transformFrom;\r\n        array.push({\r\n            trFrom: transformFrom,\r\n            trTo: transformTo,\r\n            from: br.from,\r\n            to: br.to,\r\n            length: sum,\r\n            cumulativeWidth: br.cumulativeWidth\r\n        })\r\n    }\r\n    return array\r\n}\r\n\r\nfunction getCanvasBounds(range) {\r\n    var min = range.min;\r\n    var max = range.max;\r\n    var minVisible = range.minVisible;\r\n    var maxVisible = range.maxVisible;\r\n    var isLogarithmic = \"logarithmic\" === range.axisType;\r\n    if (isLogarithmic) {\r\n        maxVisible = Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"getLogExt\"])(maxVisible, range.base, range.allowNegatives, range.linearThreshold);\r\n        minVisible = Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"getLogExt\"])(minVisible, range.base, range.allowNegatives, range.linearThreshold);\r\n        min = Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"getLogExt\"])(min, range.base, range.allowNegatives, range.linearThreshold);\r\n        max = Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"getLogExt\"])(max, range.base, range.allowNegatives, range.linearThreshold)\r\n    }\r\n    return {\r\n        base: range.base,\r\n        rangeMin: min,\r\n        rangeMax: max,\r\n        rangeMinVisible: minVisible,\r\n        rangeMaxVisible: maxVisible\r\n    }\r\n}\r\n\r\nfunction getCheckingMethodsAboutBreaks(inverted) {\r\n    return {\r\n        isStartSide: !inverted ? function(pos, breaks, start, end) {\r\n            return pos < breaks[0][start]\r\n        } : function(pos, breaks, start, end) {\r\n            return pos <= breaks[breaks.length - 1][end]\r\n        },\r\n        isEndSide: !inverted ? function(pos, breaks, start, end) {\r\n            return pos >= breaks[breaks.length - 1][end]\r\n        } : function(pos, breaks, start, end) {\r\n            return pos > breaks[0][start]\r\n        },\r\n        isInBreak: !inverted ? function(pos, br, start, end) {\r\n            return pos >= br[start] && pos < br[end]\r\n        } : function(pos, br, start, end) {\r\n            return pos > br[end] && pos <= br[start]\r\n        },\r\n        isBetweenBreaks: !inverted ? function(pos, br, prevBreak, start, end) {\r\n            return pos < br[start] && pos >= prevBreak[end]\r\n        } : function(pos, br, prevBreak, start, end) {\r\n            return pos >= br[end] && pos < prevBreak[start]\r\n        },\r\n        getLength: !inverted ? function(br) {\r\n            return br.length\r\n        } : function(br, lastBreak) {\r\n            return lastBreak.length - br.length\r\n        },\r\n        getBreaksSize: !inverted ? function(br) {\r\n            return br.cumulativeWidth\r\n        } : function(br, lastBreak) {\r\n            return lastBreak.cumulativeWidth - br.cumulativeWidth\r\n        }\r\n    }\r\n}\r\nvar _Translator2d = function(businessRange, canvas, options) {\r\n    this.update(businessRange, canvas, options)\r\n};\r\n_Translator2d.prototype = {\r\n    constructor: _Translator2d,\r\n    reinit: function() {\r\n        var that = this;\r\n        var options = that._options;\r\n        var range = that._businessRange;\r\n        var categories = range.categories || [];\r\n        var script = {};\r\n        var canvasOptions = that._prepareCanvasOptions();\r\n        var visibleCategories = Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"getCategoriesInfo\"])(categories, range.minVisible, range.maxVisible).categories;\r\n        var categoriesLength = visibleCategories.length;\r\n        if (range.isEmpty()) {\r\n            script = dummyTranslator\r\n        } else {\r\n            switch (range.axisType) {\r\n                case \"logarithmic\":\r\n                    script = _logarithmic_translator__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\r\n                    break;\r\n                case \"semidiscrete\":\r\n                    script = _interval_translator__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\r\n                    canvasOptions.ratioOfCanvasRange = canvasOptions.canvasLength / (_core_utils_date__WEBPACK_IMPORTED_MODULE_10__[\"default\"].addInterval(canvasOptions.rangeMaxVisible, options.interval) - canvasOptions.rangeMinVisible);\r\n                    break;\r\n                case \"discrete\":\r\n                    script = _category_translator__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\n                    that._categories = categories;\r\n                    canvasOptions.interval = that._getDiscreteInterval(options.addSpiderCategory ? categoriesLength + 1 : categoriesLength, canvasOptions);\r\n                    that._categoriesToPoints = makeCategoriesToPoints(categories);\r\n                    if (categoriesLength) {\r\n                        canvasOptions.startPointIndex = that._categoriesToPoints[visibleCategories[0].valueOf()];\r\n                        that.visibleCategories = visibleCategories\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (\"datetime\" === range.dataType) {\r\n                        script = _datetime_translator__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\r\n                    }\r\n            }\r\n        }(that._oldMethods || []).forEach((function(methodName) {\r\n            delete that[methodName]\r\n        }));\r\n        that._oldMethods = Object.keys(script);\r\n        Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_0__[\"extend\"])(that, script);\r\n        that._conversionValue = options.conversionValue ? function(value) {\r\n            return value\r\n        } : function(value) {\r\n            return Math.round(value)\r\n        };\r\n        that.sc = {};\r\n        that._checkingMethodsAboutBreaks = [getCheckingMethodsAboutBreaks(false), getCheckingMethodsAboutBreaks(that.isInverted())];\r\n        that._translateBreaks();\r\n        that._calculateSpecialValues()\r\n    },\r\n    _translateBreaks: function() {\r\n        var breaks = this._breaks;\r\n        var size = this._options.breaksSize;\r\n        var i;\r\n        var b;\r\n        var end;\r\n        var length;\r\n        if (void 0 === breaks) {\r\n            return\r\n        }\r\n        for (i = 0, length = breaks.length; i < length; i++) {\r\n            b = breaks[i];\r\n            end = this.translate(b.to);\r\n            b.end = end;\r\n            b.start = !b.gapSize ? !this.isInverted() ? end - size : end + size : end\r\n        }\r\n    },\r\n    _checkValueAboutBreaks: function(breaks, pos, start, end, methods) {\r\n        var i;\r\n        var length;\r\n        var prop = {\r\n            length: 0,\r\n            breaksSize: void 0,\r\n            inBreak: false\r\n        };\r\n        var br;\r\n        var prevBreak;\r\n        var lastBreak = breaks[breaks.length - 1];\r\n        if (methods.isStartSide(pos, breaks, start, end)) {\r\n            return prop\r\n        } else if (methods.isEndSide(pos, breaks, start, end)) {\r\n            return {\r\n                length: lastBreak.length,\r\n                breaksSize: lastBreak.cumulativeWidth,\r\n                inBreak: false\r\n            }\r\n        }\r\n        for (i = 0, length = breaks.length; i < length; i++) {\r\n            br = breaks[i];\r\n            prevBreak = breaks[i - 1];\r\n            if (methods.isInBreak(pos, br, start, end)) {\r\n                prop.inBreak = true;\r\n                prop.break = br;\r\n                break\r\n            }\r\n            if (prevBreak && methods.isBetweenBreaks(pos, br, prevBreak, start, end)) {\r\n                prop = {\r\n                    length: methods.getLength(prevBreak, lastBreak),\r\n                    breaksSize: methods.getBreaksSize(prevBreak, lastBreak),\r\n                    inBreak: false\r\n                };\r\n                break\r\n            }\r\n        }\r\n        return prop\r\n    },\r\n    isInverted: function() {\r\n        return !(this._options.isHorizontal ^ this._businessRange.invert)\r\n    },\r\n    _getDiscreteInterval: function(categoriesLength, canvasOptions) {\r\n        var correctedCategoriesCount = categoriesLength - (this._options.stick ? 1 : 0);\r\n        return correctedCategoriesCount > 0 ? canvasOptions.canvasLength / correctedCategoriesCount : canvasOptions.canvasLength\r\n    },\r\n    _prepareCanvasOptions() {\r\n        var businessRange = this._businessRange;\r\n        var canvasOptions = this._canvasOptions = getCanvasBounds(businessRange);\r\n        var canvas = this._canvas;\r\n        var breaks = this._breaks;\r\n        var length;\r\n        canvasOptions.startPadding = canvas.startPadding || 0;\r\n        canvasOptions.endPadding = canvas.endPadding || 0;\r\n        if (this._options.isHorizontal) {\r\n            canvasOptions.startPoint = canvas.left + canvasOptions.startPadding;\r\n            length = canvas.width;\r\n            canvasOptions.endPoint = canvas.width - canvas.right - canvasOptions.endPadding;\r\n            canvasOptions.invert = businessRange.invert\r\n        } else {\r\n            canvasOptions.startPoint = canvas.top + canvasOptions.startPadding;\r\n            length = canvas.height;\r\n            canvasOptions.endPoint = canvas.height - canvas.bottom - canvasOptions.endPadding;\r\n            canvasOptions.invert = !businessRange.invert\r\n        }\r\n        this.canvasLength = canvasOptions.canvasLength = canvasOptions.endPoint - canvasOptions.startPoint;\r\n        canvasOptions.rangeDoubleError = Math.pow(10, Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"getPower\"])(canvasOptions.rangeMax - canvasOptions.rangeMin) - Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"getPower\"])(length) - 2);\r\n        canvasOptions.ratioOfCanvasRange = canvasOptions.canvasLength / (canvasOptions.rangeMaxVisible - canvasOptions.rangeMinVisible);\r\n        if (void 0 !== breaks) {\r\n            canvasOptions.ratioOfCanvasRange = (canvasOptions.canvasLength - breaks[breaks.length - 1].cumulativeWidth) / (canvasOptions.rangeMaxVisible - canvasOptions.rangeMinVisible - breaks[breaks.length - 1].length)\r\n        }\r\n        return canvasOptions\r\n    },\r\n    updateCanvas: function(canvas) {\r\n        this._canvas = validateCanvas(canvas);\r\n        this.reinit()\r\n    },\r\n    updateBusinessRange: function(businessRange) {\r\n        var breaks = businessRange.breaks || [];\r\n        this._userBreaks = businessRange.userBreaks || [];\r\n        this._businessRange = validateBusinessRange(businessRange);\r\n        this._breaks = breaks.length ? prepareBreaks(breaks, this._businessRange) : void 0;\r\n        this.reinit()\r\n    },\r\n    update: function(businessRange, canvas, options) {\r\n        this._options = Object(_core_utils_extend__WEBPACK_IMPORTED_MODULE_0__[\"extend\"])(this._options || {}, options);\r\n        this._canvas = validateCanvas(canvas);\r\n        this.updateBusinessRange(businessRange)\r\n    },\r\n    getBusinessRange: function() {\r\n        return this._businessRange\r\n    },\r\n    getEventScale: function(zoomEvent) {\r\n        return zoomEvent.deltaScale || 1\r\n    },\r\n    getCanvasVisibleArea: function() {\r\n        return {\r\n            min: this._canvasOptions.startPoint,\r\n            max: this._canvasOptions.endPoint\r\n        }\r\n    },\r\n    _calculateSpecialValues: function() {\r\n        var canvasOptions = this._canvasOptions;\r\n        var startPoint = canvasOptions.startPoint - canvasOptions.startPadding;\r\n        var endPoint = canvasOptions.endPoint + canvasOptions.endPadding;\r\n        var range = this._businessRange;\r\n        var minVisible = range.minVisible;\r\n        var maxVisible = range.maxVisible;\r\n        var canvas_position_center_middle = startPoint + canvasOptions.canvasLength / 2;\r\n        var canvas_position_default;\r\n        if (minVisible < 0 && maxVisible > 0 && minVisible !== maxVisible) {\r\n            canvas_position_default = this.translate(0, 1)\r\n        }\r\n        if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(canvas_position_default)) {\r\n            var invert = range.invert ^ (minVisible < 0 && maxVisible <= 0);\r\n            if (this._options.isHorizontal) {\r\n                canvas_position_default = invert ? endPoint : startPoint\r\n            } else {\r\n                canvas_position_default = invert ? startPoint : endPoint\r\n            }\r\n        }\r\n        this.sc = {\r\n            canvas_position_default: canvas_position_default,\r\n            canvas_position_left: startPoint,\r\n            canvas_position_top: startPoint,\r\n            canvas_position_center: canvas_position_center_middle,\r\n            canvas_position_middle: canvas_position_center_middle,\r\n            canvas_position_right: endPoint,\r\n            canvas_position_bottom: endPoint,\r\n            canvas_position_start: canvasOptions.invert ? endPoint : startPoint,\r\n            canvas_position_end: canvasOptions.invert ? startPoint : endPoint\r\n        }\r\n    },\r\n    translateSpecialCase(value) {\r\n        return this.sc[value]\r\n    },\r\n    _calculateProjection: function(distance) {\r\n        var canvasOptions = this._canvasOptions;\r\n        return canvasOptions.invert ? canvasOptions.endPoint - distance : canvasOptions.startPoint + distance\r\n    },\r\n    _calculateUnProjection: function(distance) {\r\n        var canvasOptions = this._canvasOptions;\r\n        \"datetime\" === this._businessRange.dataType && (distance = Math.round(distance));\r\n        return canvasOptions.invert ? canvasOptions.rangeMaxVisible.valueOf() - distance : canvasOptions.rangeMinVisible.valueOf() + distance\r\n    },\r\n    getMinBarSize: function(minBarSize) {\r\n        var visibleArea = this.getCanvasVisibleArea();\r\n        var minValue = this.from(visibleArea.min + minBarSize);\r\n        return _abs(this.from(visibleArea.min) - (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(minValue) ? this.from(visibleArea.max) : minValue))\r\n    },\r\n    checkMinBarSize: function(value, minShownValue, stackValue) {\r\n        return _abs(value) < minShownValue ? value >= 0 ? minShownValue : -minShownValue : value\r\n    },\r\n    translate(bp, direction) {\r\n        var specialValue = this.translateSpecialCase(bp);\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(specialValue)) {\r\n            return Math.round(specialValue)\r\n        }\r\n        if (isNaN(bp)) {\r\n            return null\r\n        }\r\n        return this.to(bp, direction)\r\n    },\r\n    getInterval: function(interval) {\r\n        var _interval;\r\n        var canvasOptions = this._canvasOptions;\r\n        interval = null !== (_interval = interval) && void 0 !== _interval ? _interval : this._businessRange.interval;\r\n        if (interval) {\r\n            return Math.round(canvasOptions.ratioOfCanvasRange * interval)\r\n        }\r\n        return Math.round(canvasOptions.endPoint - canvasOptions.startPoint)\r\n    },\r\n    zoom(translate, scale, wholeRange) {\r\n        var canvasOptions = this._canvasOptions;\r\n        if (canvasOptions.rangeMinVisible.valueOf() === canvasOptions.rangeMaxVisible.valueOf() && 0 !== translate) {\r\n            return this.zoomZeroLengthRange(translate, scale)\r\n        }\r\n        var startPoint = canvasOptions.startPoint;\r\n        var endPoint = canvasOptions.endPoint;\r\n        var isInverted = this.isInverted();\r\n        var newStart = (startPoint + translate) / scale;\r\n        var newEnd = (endPoint + translate) / scale;\r\n        wholeRange = wholeRange || {};\r\n        var minPoint = this.to(isInverted ? wholeRange.endValue : wholeRange.startValue);\r\n        var maxPoint = this.to(isInverted ? wholeRange.startValue : wholeRange.endValue);\r\n        var min;\r\n        var max;\r\n        if (minPoint > newStart) {\r\n            newEnd -= newStart - minPoint;\r\n            newStart = minPoint;\r\n            min = isInverted ? wholeRange.endValue : wholeRange.startValue\r\n        }\r\n        if (maxPoint < newEnd) {\r\n            newStart -= newEnd - maxPoint;\r\n            newEnd = maxPoint;\r\n            max = isInverted ? wholeRange.startValue : wholeRange.endValue\r\n        }\r\n        if (maxPoint - minPoint < newEnd - newStart) {\r\n            newStart = minPoint;\r\n            newEnd = maxPoint\r\n        }\r\n        translate = (endPoint - startPoint) * newStart / (newEnd - newStart) - startPoint;\r\n        scale = (startPoint + translate) / newStart || 1;\r\n        min = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(min) ? min : Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_9__[\"adjust\"])(this.from(newStart, 1));\r\n        max = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(max) ? max : Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_9__[\"adjust\"])(this.from(newEnd, -1));\r\n        if (scale <= 1) {\r\n            min = this._correctValueAboutBreaks(min, 1 === scale ? translate : -1);\r\n            max = this._correctValueAboutBreaks(max, 1 === scale ? translate : 1)\r\n        }\r\n        if (min > max) {\r\n            min = min > wholeRange.endValue ? wholeRange.endValue : min;\r\n            max = max < wholeRange.startValue ? wholeRange.startValue : max\r\n        } else {\r\n            min = min < wholeRange.startValue ? wholeRange.startValue : min;\r\n            max = max > wholeRange.endValue ? wholeRange.endValue : max\r\n        }\r\n        return {\r\n            min: min,\r\n            max: max,\r\n            translate: Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_9__[\"adjust\"])(translate),\r\n            scale: Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_9__[\"adjust\"])(scale)\r\n        }\r\n    },\r\n    _correctValueAboutBreaks(value, direction) {\r\n        var br = this._userBreaks.filter(br => value >= br.from && value <= br.to);\r\n        if (br.length) {\r\n            return direction > 0 ? br[0].to : br[0].from\r\n        } else {\r\n            return value\r\n        }\r\n    },\r\n    zoomZeroLengthRange(translate, scale) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var min = canvasOptions.rangeMin;\r\n        var max = canvasOptions.rangeMax;\r\n        var correction = (max.valueOf() !== min.valueOf() ? max.valueOf() - min.valueOf() : _abs(canvasOptions.rangeMinVisible.valueOf() - min.valueOf())) / canvasOptions.canvasLength;\r\n        var isDateTime = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDate\"])(max) || Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDate\"])(min);\r\n        var isLogarithmic = \"logarithmic\" === this._businessRange.axisType;\r\n        var newMin = canvasOptions.rangeMinVisible.valueOf() - correction;\r\n        var newMax = canvasOptions.rangeMaxVisible.valueOf() + correction;\r\n        newMin = isLogarithmic ? Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_9__[\"adjust\"])(Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"raiseToExt\"])(newMin, canvasOptions.base)) : isDateTime ? new Date(newMin) : newMin;\r\n        newMax = isLogarithmic ? Object(_core_utils_math__WEBPACK_IMPORTED_MODULE_9__[\"adjust\"])(Object(_core_utils__WEBPACK_IMPORTED_MODULE_7__[\"raiseToExt\"])(newMax, canvasOptions.base)) : isDateTime ? new Date(newMax) : newMax;\r\n        return {\r\n            min: newMin,\r\n            max: newMax,\r\n            translate: translate,\r\n            scale: scale\r\n        }\r\n    },\r\n    getMinScale: function(zoom) {\r\n        var {\r\n            dataType: dataType,\r\n            interval: interval\r\n        } = this._businessRange;\r\n        if (\"datetime\" === dataType && 1 === interval) {\r\n            return this.getDateTimeMinScale(zoom)\r\n        }\r\n        return zoom ? 1.1 : .9\r\n    },\r\n    getDateTimeMinScale(zoom) {\r\n        var canvasOptions = this._canvasOptions;\r\n        var length = canvasOptions.canvasLength / canvasOptions.ratioOfCanvasRange;\r\n        length += (parseInt(.1 * length) || 1) * (zoom ? -2 : 2);\r\n        return canvasOptions.canvasLength / (Math.max(length, 1) * canvasOptions.ratioOfCanvasRange)\r\n    },\r\n    getScale: function(val1, val2) {\r\n        var canvasOptions = this._canvasOptions;\r\n        if (canvasOptions.rangeMax === canvasOptions.rangeMin) {\r\n            return 1\r\n        }\r\n        val1 = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(val1) ? this.fromValue(val1) : canvasOptions.rangeMin;\r\n        val2 = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(val2) ? this.fromValue(val2) : canvasOptions.rangeMax;\r\n        return (canvasOptions.rangeMax - canvasOptions.rangeMin) / Math.abs(val1 - val2)\r\n    },\r\n    isValid: function(value) {\r\n        var co = this._canvasOptions;\r\n        value = this.fromValue(value);\r\n        return null !== value && !isNaN(value) && value.valueOf() + co.rangeDoubleError >= co.rangeMin && value.valueOf() - co.rangeDoubleError <= co.rangeMax\r\n    },\r\n    getCorrectValue: function(value, direction) {\r\n        var breaks = this._breaks;\r\n        var prop;\r\n        value = this.fromValue(value);\r\n        if (this._breaks) {\r\n            prop = this._checkValueAboutBreaks(breaks, value, \"trFrom\", \"trTo\", this._checkingMethodsAboutBreaks[0]);\r\n            if (true === prop.inBreak) {\r\n                return this.toValue(direction > 0 ? prop.break.trTo : prop.break.trFrom)\r\n            }\r\n        }\r\n        return this.toValue(value)\r\n    },\r\n    to: function(bp, direction) {\r\n        var range = this.getBusinessRange();\r\n        if (Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(range.maxVisible) && Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(range.minVisible) && range.maxVisible.valueOf() === range.minVisible.valueOf()) {\r\n            if (!Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(bp) || range.maxVisible.valueOf() !== bp.valueOf()) {\r\n                return null\r\n            }\r\n            return this.translateSpecialCase(0 === bp && this._options.shiftZeroValue ? \"canvas_position_default\" : \"canvas_position_middle\")\r\n        }\r\n        bp = this.fromValue(bp);\r\n        var canvasOptions = this._canvasOptions;\r\n        var breaks = this._breaks;\r\n        var prop = {\r\n            length: 0\r\n        };\r\n        var commonBreakSize = 0;\r\n        if (void 0 !== breaks) {\r\n            prop = this._checkValueAboutBreaks(breaks, bp, \"trFrom\", \"trTo\", this._checkingMethodsAboutBreaks[0]);\r\n            commonBreakSize = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(prop.breaksSize) ? prop.breaksSize : 0\r\n        }\r\n        if (true === prop.inBreak) {\r\n            if (direction > 0) {\r\n                return prop.break.start\r\n            } else if (direction < 0) {\r\n                return prop.break.end\r\n            } else {\r\n                return null\r\n            }\r\n        }\r\n        return this._conversionValue(this._calculateProjection((bp - canvasOptions.rangeMinVisible - prop.length) * canvasOptions.ratioOfCanvasRange + commonBreakSize))\r\n    },\r\n    from: function(pos, direction) {\r\n        var breaks = this._breaks;\r\n        var prop = {\r\n            length: 0\r\n        };\r\n        var canvasOptions = this._canvasOptions;\r\n        var startPoint = canvasOptions.startPoint;\r\n        var commonBreakSize = 0;\r\n        if (void 0 !== breaks) {\r\n            prop = this._checkValueAboutBreaks(breaks, pos, \"start\", \"end\", this._checkingMethodsAboutBreaks[1]);\r\n            commonBreakSize = Object(_core_utils_type__WEBPACK_IMPORTED_MODULE_8__[\"isDefined\"])(prop.breaksSize) ? prop.breaksSize : 0\r\n        }\r\n        if (true === prop.inBreak) {\r\n            if (direction > 0) {\r\n                return this.toValue(prop.break.trTo)\r\n            } else if (direction < 0) {\r\n                return this.toValue(prop.break.trFrom)\r\n            } else {\r\n                return null\r\n            }\r\n        }\r\n        return this.toValue(this._calculateUnProjection((pos - startPoint - commonBreakSize) / canvasOptions.ratioOfCanvasRange + prop.length))\r\n    },\r\n    isValueProlonged: false,\r\n    getRange: function() {\r\n        return [this.toValue(this._canvasOptions.rangeMin), this.toValue(this._canvasOptions.rangeMax)]\r\n    },\r\n    getScreenRange: function() {\r\n        return [this._canvasOptions.startPoint, this._canvasOptions.endPoint]\r\n    },\r\n    add: function(value, diff, dir) {\r\n        return this._add(value, diff, (this._businessRange.invert ? -1 : 1) * dir)\r\n    },\r\n    _add: function(value, diff, coeff) {\r\n        return this.toValue(this.fromValue(value) + diff * coeff)\r\n    },\r\n    fromValue: function(value) {\r\n        return null !== value ? Number(value) : null\r\n    },\r\n    toValue: function(value) {\r\n        return null !== value ? Number(value) : null\r\n    },\r\n    ratioOfCanvasRange() {\r\n        return this._canvasOptions.ratioOfCanvasRange\r\n    },\r\n    convert: value => value,\r\n    getRangeByMinZoomValue(minZoom, visualRange) {\r\n        if (visualRange.minVisible + minZoom <= this._businessRange.max) {\r\n            return [visualRange.minVisible, visualRange.minVisible + minZoom]\r\n        } else {\r\n            return [visualRange.maxVisible - minZoom, visualRange.maxVisible]\r\n        }\r\n    }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/translators/translator2d.js\n");

/***/ }),

/***/ "./node_modules/devextreme/esm/viz/utils.js":
/*!**************************************************!*\
  !*** ./node_modules/devextreme/esm/viz/utils.js ***!
  \**************************************************/
/*! exports provided: prepareSegmentRectPoints, refreshPaths */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prepareSegmentRectPoints\", function() { return prepareSegmentRectPoints; });\n/* harmony import */ var _core_renderers_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/renderers/renderer */ \"./node_modules/devextreme/esm/viz/core/renderers/renderer.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"refreshPaths\", function() { return _core_renderers_renderer__WEBPACK_IMPORTED_MODULE_0__[\"refreshPaths\"]; });\n\n/* harmony import */ var _core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/utils/iterator */ \"./node_modules/devextreme/esm/core/utils/iterator.js\");\n/**\r\n * DevExtreme (esm/viz/utils.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\n\r\nvar prepareSegmentRectPoints = function(left, top, width, height, borderOptions) {\r\n    var maxSW = ~~((width < height ? width : height) / 2);\r\n    var sw = borderOptions.width || 0;\r\n    var newSW = sw < maxSW ? sw : maxSW;\r\n    left += newSW / 2;\r\n    top += newSW / 2;\r\n    width -= newSW;\r\n    height -= newSW;\r\n    var right = left + width;\r\n    var bottom = top + height;\r\n    var points = [];\r\n    var segments = [];\r\n    var segmentSequence;\r\n    var visiblyOpt = 0;\r\n    var prevSegmentVisibility = 0;\r\n    var allSegment = {\r\n        top: [\r\n            [left, top],\r\n            [right, top]\r\n        ],\r\n        right: [\r\n            [right, top],\r\n            [right, bottom]\r\n        ],\r\n        bottom: [\r\n            [right, bottom],\r\n            [left, bottom]\r\n        ],\r\n        left: [\r\n            [left, bottom],\r\n            [left, top]\r\n        ]\r\n    };\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__[\"each\"])(allSegment, (function(seg) {\r\n        var visibility = !!borderOptions[seg];\r\n        visiblyOpt = 2 * visiblyOpt + ~~visibility\r\n    }));\r\n    switch (visiblyOpt) {\r\n        case 13:\r\n        case 9:\r\n            segmentSequence = [\"left\", \"top\", \"right\", \"bottom\"];\r\n            break;\r\n        case 11:\r\n            segmentSequence = [\"bottom\", \"left\", \"top\", \"right\"];\r\n            break;\r\n        default:\r\n            segmentSequence = [\"top\", \"right\", \"bottom\", \"left\"]\r\n    }\r\n    Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__[\"each\"])(segmentSequence, (function(_, seg) {\r\n        var segmentVisibility = !!borderOptions[seg];\r\n        if (!prevSegmentVisibility && segments.length) {\r\n            points.push(segments);\r\n            segments = []\r\n        }\r\n        if (segmentVisibility) {\r\n            Object(_core_utils_iterator__WEBPACK_IMPORTED_MODULE_1__[\"each\"])(allSegment[seg].slice(prevSegmentVisibility), (function(_, segment) {\r\n                segments = segments.concat(segment)\r\n            }))\r\n        }\r\n        prevSegmentVisibility = ~~segmentVisibility\r\n    }));\r\n    segments.length && points.push(segments);\r\n    1 === points.length && (points = points[0]);\r\n    return {\r\n        points: points,\r\n        pathType: 15 === visiblyOpt ? \"area\" : \"line\"\r\n    }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L3V0aWxzLmpzPzEyM2YiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdtQztBQUdIO0FBQ3pCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksaUVBQUs7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGlFQUFLO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxpRUFBSztBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0UiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGV2ZXh0cmVtZS9lc20vdml6L3V0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIERldkV4dHJlbWUgKGVzbS92aXovdXRpbHMuanMpXHJcbiAqIFZlcnNpb246IDIxLjIuN1xyXG4gKiBCdWlsZCBkYXRlOiBNb24gQXByIDExIDIwMjJcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMiBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICogUmVhZCBhYm91dCBEZXZFeHRyZW1lIGxpY2Vuc2luZyBoZXJlOiBodHRwczovL2pzLmRldmV4cHJlc3MuY29tL0xpY2Vuc2luZy9cclxuICovXHJcbmltcG9ydCB7XHJcbiAgICByZWZyZXNoUGF0aHNcclxufSBmcm9tIFwiLi9jb3JlL3JlbmRlcmVycy9yZW5kZXJlclwiO1xyXG5pbXBvcnQge1xyXG4gICAgZWFjaCBhcyBfZWFjaFxyXG59IGZyb20gXCIuLi9jb3JlL3V0aWxzL2l0ZXJhdG9yXCI7XHJcbmV4cG9ydCB2YXIgcHJlcGFyZVNlZ21lbnRSZWN0UG9pbnRzID0gZnVuY3Rpb24obGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0LCBib3JkZXJPcHRpb25zKSB7XHJcbiAgICB2YXIgbWF4U1cgPSB+figod2lkdGggPCBoZWlnaHQgPyB3aWR0aCA6IGhlaWdodCkgLyAyKTtcclxuICAgIHZhciBzdyA9IGJvcmRlck9wdGlvbnMud2lkdGggfHwgMDtcclxuICAgIHZhciBuZXdTVyA9IHN3IDwgbWF4U1cgPyBzdyA6IG1heFNXO1xyXG4gICAgbGVmdCArPSBuZXdTVyAvIDI7XHJcbiAgICB0b3AgKz0gbmV3U1cgLyAyO1xyXG4gICAgd2lkdGggLT0gbmV3U1c7XHJcbiAgICBoZWlnaHQgLT0gbmV3U1c7XHJcbiAgICB2YXIgcmlnaHQgPSBsZWZ0ICsgd2lkdGg7XHJcbiAgICB2YXIgYm90dG9tID0gdG9wICsgaGVpZ2h0O1xyXG4gICAgdmFyIHBvaW50cyA9IFtdO1xyXG4gICAgdmFyIHNlZ21lbnRzID0gW107XHJcbiAgICB2YXIgc2VnbWVudFNlcXVlbmNlO1xyXG4gICAgdmFyIHZpc2libHlPcHQgPSAwO1xyXG4gICAgdmFyIHByZXZTZWdtZW50VmlzaWJpbGl0eSA9IDA7XHJcbiAgICB2YXIgYWxsU2VnbWVudCA9IHtcclxuICAgICAgICB0b3A6IFtcclxuICAgICAgICAgICAgW2xlZnQsIHRvcF0sXHJcbiAgICAgICAgICAgIFtyaWdodCwgdG9wXVxyXG4gICAgICAgIF0sXHJcbiAgICAgICAgcmlnaHQ6IFtcclxuICAgICAgICAgICAgW3JpZ2h0LCB0b3BdLFxyXG4gICAgICAgICAgICBbcmlnaHQsIGJvdHRvbV1cclxuICAgICAgICBdLFxyXG4gICAgICAgIGJvdHRvbTogW1xyXG4gICAgICAgICAgICBbcmlnaHQsIGJvdHRvbV0sXHJcbiAgICAgICAgICAgIFtsZWZ0LCBib3R0b21dXHJcbiAgICAgICAgXSxcclxuICAgICAgICBsZWZ0OiBbXHJcbiAgICAgICAgICAgIFtsZWZ0LCBib3R0b21dLFxyXG4gICAgICAgICAgICBbbGVmdCwgdG9wXVxyXG4gICAgICAgIF1cclxuICAgIH07XHJcbiAgICBfZWFjaChhbGxTZWdtZW50LCAoZnVuY3Rpb24oc2VnKSB7XHJcbiAgICAgICAgdmFyIHZpc2liaWxpdHkgPSAhIWJvcmRlck9wdGlvbnNbc2VnXTtcclxuICAgICAgICB2aXNpYmx5T3B0ID0gMiAqIHZpc2libHlPcHQgKyB+fnZpc2liaWxpdHlcclxuICAgIH0pKTtcclxuICAgIHN3aXRjaCAodmlzaWJseU9wdCkge1xyXG4gICAgICAgIGNhc2UgMTM6XHJcbiAgICAgICAgY2FzZSA5OlxyXG4gICAgICAgICAgICBzZWdtZW50U2VxdWVuY2UgPSBbXCJsZWZ0XCIsIFwidG9wXCIsIFwicmlnaHRcIiwgXCJib3R0b21cIl07XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgMTE6XHJcbiAgICAgICAgICAgIHNlZ21lbnRTZXF1ZW5jZSA9IFtcImJvdHRvbVwiLCBcImxlZnRcIiwgXCJ0b3BcIiwgXCJyaWdodFwiXTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgc2VnbWVudFNlcXVlbmNlID0gW1widG9wXCIsIFwicmlnaHRcIiwgXCJib3R0b21cIiwgXCJsZWZ0XCJdXHJcbiAgICB9XHJcbiAgICBfZWFjaChzZWdtZW50U2VxdWVuY2UsIChmdW5jdGlvbihfLCBzZWcpIHtcclxuICAgICAgICB2YXIgc2VnbWVudFZpc2liaWxpdHkgPSAhIWJvcmRlck9wdGlvbnNbc2VnXTtcclxuICAgICAgICBpZiAoIXByZXZTZWdtZW50VmlzaWJpbGl0eSAmJiBzZWdtZW50cy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcG9pbnRzLnB1c2goc2VnbWVudHMpO1xyXG4gICAgICAgICAgICBzZWdtZW50cyA9IFtdXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChzZWdtZW50VmlzaWJpbGl0eSkge1xyXG4gICAgICAgICAgICBfZWFjaChhbGxTZWdtZW50W3NlZ10uc2xpY2UocHJldlNlZ21lbnRWaXNpYmlsaXR5KSwgKGZ1bmN0aW9uKF8sIHNlZ21lbnQpIHtcclxuICAgICAgICAgICAgICAgIHNlZ21lbnRzID0gc2VnbWVudHMuY29uY2F0KHNlZ21lbnQpXHJcbiAgICAgICAgICAgIH0pKVxyXG4gICAgICAgIH1cclxuICAgICAgICBwcmV2U2VnbWVudFZpc2liaWxpdHkgPSB+fnNlZ21lbnRWaXNpYmlsaXR5XHJcbiAgICB9KSk7XHJcbiAgICBzZWdtZW50cy5sZW5ndGggJiYgcG9pbnRzLnB1c2goc2VnbWVudHMpO1xyXG4gICAgMSA9PT0gcG9pbnRzLmxlbmd0aCAmJiAocG9pbnRzID0gcG9pbnRzWzBdKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcG9pbnRzOiBwb2ludHMsXHJcbiAgICAgICAgcGF0aFR5cGU6IDE1ID09PSB2aXNpYmx5T3B0ID8gXCJhcmVhXCIgOiBcImxpbmVcIlxyXG4gICAgfVxyXG59O1xyXG5leHBvcnQge1xyXG4gICAgcmVmcmVzaFBhdGhzXHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/devextreme/esm/viz/utils.js\n");

/***/ })

}]);