function u(){return{contracts:[],users:[],interestRate:0,principalMin:0,isOld:!1,updatedAt:null}}const d={contracts:t=>t.contracts,users:t=>t.users,interestRate:t=>t.interestRate,principalMin:t=>t.principalMin},m={fetch({commit:t,dispatch:e,getters:i,state:a,rootGetters:c},r){return moment().diff(a.updatedAt,"seconds")<3?!1:(r==null&&(r=a.isOld),new Promise((o,n)=>{axios.get("contracts?isOld="+r).then(s=>{s.data.isOld=r,t("setState",s.data),o()})}))},save({commit:t,dispatch:e,getters:i,state:a,rootGetters:c},r){return new Promise((o,n)=>{axios.post("contracts",r).then(s=>{o(),s.data.isOk&&(e("fetch",a.isOld),e("User.layout/initLayout",["contracts"],{root:!0}))})})},paidContract({commit:t,dispatch:e,getters:i,state:a,rootGetters:c},r){return new Promise((o,n)=>{axios.post("contracts/paid",r,{headers:{"Content-Type":"multipart/form-data"}}).then(s=>{o(s.data.isOk),s.data.isOk&&(e("fetch",a.isOld),e("User.layout/initLayout",["contracts"],{root:!0}))})})},withdrawnContract({commit:t,dispatch:e,getters:i,state:a,rootGetters:c},r){return new Promise((o,n)=>{axios.post("contracts/withdrawn",r,{headers:{"Content-Type":"multipart/form-data"}}).then(s=>{o(s.data.isOk),s.data.isOk&&(e("fetch",a.isOld),e("User.layout/initLayout",["contracts"],{root:!0}))})})},getSummary({commit:t,dispatch:e,getters:i,state:a,rootGetters:c}){return new Promise((r,o)=>{axios.get("contracts/summary").then(n=>{r(n.data)})})},getReceiptInfo({commit:t,dispatch:e,getters:i,state:a,rootGetters:c},r){return new Promise((o,n)=>{axios.get(`contracts/receipt-info?userCode=${r}`,{noLoading:!0}).then(s=>{console.log(s.data),o(s.data)})})},resetState({commit:t}){t("resetState")}},l={setState(t,e){t.contracts=e.contracts,t.users=e.users,t.interestRate=e.interestRate,t.principalMin=e.principalMin,t.isOld=e.isOld,t.updatedAt=moment()},resetState(t){t=Object.assign(t,u())}},p={namespaced:!0,state:u,getters:d,actions:m,mutations:l};export{p as a};
